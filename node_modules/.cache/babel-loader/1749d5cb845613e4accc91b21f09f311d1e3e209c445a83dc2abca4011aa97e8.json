{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Editor } from '@monaco-editor/react';\nimport { generateKeyPair, exportPublicKey, importPublicKey, deriveAESKey, decryptData } from './cryptoUtils';\nimport './Receiver.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\nexport default function Receiver() {\n  _s();\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [decryptedChunk, setDecryptedChunk] = useState(null);\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const localKeyPair = useRef(null);\n  const aesKey = useRef(null);\n  const receivedChunks = useRef([]);\n  const receivedIVs = useRef([]);\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false\n    });\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n    socket.current.on('signal', async data => {\n      if (data.from !== senderId) return;\n      if (data.signal.publicKey) {\n        const senderPub = await importPublicKey(data.signal.publicKey);\n        aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, senderPub);\n        const myPub = await exportPublicKey(localKeyPair.current.publicKey);\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: {\n            publicKey: myPub\n          }\n        });\n      }\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: pc.current.localDescription\n          });\n        }\n      } else if (data.signal.candidate) {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n      }\n    });\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n  const startConnection = async () => {\n    try {\n      pc.current = new RTCPeerConnection({\n        iceServers: [{\n          urls: 'stun:stun.l.google.com:19302'\n        }, {\n          urls: 'stun:stun1.l.google.com:19302'\n        }]\n      });\n      localKeyPair.current = await generateKeyPair();\n      setStatus('Establishing secure connection...');\n      pc.current.ondatachannel = event => {\n        dc.current = event.channel;\n        dc.current.binaryType = 'arraybuffer';\n        let expectingIV = true;\n        let currentIV = null;\n        dc.current.onmessage = async event => {\n          if (typeof event.data === 'string') {\n            try {\n              const msg = JSON.parse(event.data);\n              if (msg.done) {\n                setStatus('Decrypting file...');\n                const decryptedChunks = await Promise.all(receivedChunks.current.map((enc, i) => decryptData(aesKey.current, enc, receivedIVs.current[i])));\n                const blob = new Blob(decryptedChunks);\n                const a = document.createElement('a');\n                a.href = URL.createObjectURL(blob);\n                a.download = msg.fileName || 'file';\n                a.click();\n                setStatus('File saved successfully.');\n                receivedChunks.current = [];\n                receivedIVs.current = [];\n              }\n            } catch (error) {\n              setStatus(`Error: ${error.message}`);\n            }\n          } else {\n            if (expectingIV) {\n              currentIV = new Uint8Array(event.data);\n            } else {\n              receivedChunks.current.push(event.data);\n              receivedIVs.current.push(currentIV);\n\n              // Update decryption info\n              setDecryptedChunk({\n                chunkNumber: receivedChunks.current.length,\n                ivSize: currentIV.length,\n                encryptedSize: event.data.byteLength,\n                method: 'AES-GCM'\n              });\n              setStatus(`Receiving: Chunk ${receivedChunks.current.length}`);\n            }\n            expectingIV = !expectingIV;\n          }\n        };\n        dc.current.onopen = () => setStatus('Connection secure. Ready to receive files.');\n        dc.current.onclose = () => setStatus('Connection closed.');\n        dc.current.onerror = error => setStatus(`Error: ${error.message}`);\n      };\n      pc.current.onicecandidate = event => {\n        if (event.candidate) {\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: {\n              candidate: event.candidate\n            }\n          });\n        }\n      };\n      pc.current.onconnectionstatechange = () => {\n        setStatus(`Connection state: ${pc.current.connectionState}`);\n      };\n    } catch (error) {\n      setStatus(`Connection error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"receiver-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"receiver-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Secure File Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"receiver-id-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"receiver-id\",\n          children: [\"ID: \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"receiver-button icon-button\",\n          onClick: () => navigator.clipboard.writeText(id),\n          title: \"Copy ID\",\n          children: \"\\uD83D\\uDCCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"receiver-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"receiver-input\",\n            placeholder: \"Enter Sender ID\",\n            value: senderId,\n            onChange: e => setSenderId(e.target.value.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"receiver-button\",\n            onClick: startConnection,\n            disabled: !senderId,\n            children: \"Connect to Sender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), decryptedChunk && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"encryption-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decryption Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encryption-summary\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Method:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: decryptedChunk.method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Chunk Number:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: decryptedChunk.chunkNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"IV Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [decryptedChunk.ivSize, \" bytes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Encrypted Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [decryptedChunk.encryptedSize, \" bytes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-container\",\n          children: /*#__PURE__*/_jsxDEV(Editor, {\n            height: \"200px\",\n            defaultLanguage: \"json\",\n            theme: \"vs-dark\",\n            value: JSON.stringify(decryptedChunk, null, 2),\n            options: {\n              readOnly: true,\n              minimap: {\n                enabled: false\n              },\n              scrollBeyondLastLine: false,\n              fontSize: 14,\n              wordWrap: 'on'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: status.includes('Chunk') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${receivedChunks.current.length / (receivedChunks.current.length + 1) * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"PXBmlhcngZt/IeFI20rGbOngXqI=\");\n_c = Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","Editor","generateKeyPair","exportPublicKey","importPublicKey","deriveAESKey","decryptData","jsxDEV","_jsxDEV","generateId","Math","random","toString","slice","toUpperCase","Receiver","_s","id","senderId","setSenderId","status","setStatus","decryptedChunk","setDecryptedChunk","pc","socket","dc","localKeyPair","aesKey","receivedChunks","receivedIVs","current","transports","rejectUnauthorized","on","emit","data","from","signal","publicKey","senderPub","privateKey","myPub","target","sdp","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","setLocalDescription","localDescription","candidate","addIceCandidate","RTCIceCandidate","disconnect","startConnection","RTCPeerConnection","iceServers","urls","ondatachannel","event","channel","binaryType","expectingIV","currentIV","onmessage","msg","JSON","parse","done","decryptedChunks","Promise","all","map","enc","i","blob","Blob","a","document","createElement","href","URL","createObjectURL","download","fileName","click","error","message","Uint8Array","push","chunkNumber","length","ivSize","encryptedSize","byteLength","method","onopen","onclose","onerror","onicecandidate","onconnectionstatechange","connectionState","className","children","_jsxFileName","lineNumber","columnNumber","onClick","navigator","clipboard","writeText","title","placeholder","value","onChange","e","disabled","height","defaultLanguage","theme","stringify","options","readOnly","minimap","enabled","scrollBeyondLastLine","fontSize","wordWrap","includes","style","width","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { Editor } from '@monaco-editor/react';\nimport {\n  generateKeyPair,\n  exportPublicKey,\n  importPublicKey,\n  deriveAESKey,\n  decryptData\n} from './cryptoUtils';\nimport './Receiver.css';\n\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\n\nexport default function Receiver() {\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [decryptedChunk, setDecryptedChunk] = useState(null);\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const localKeyPair = useRef(null);\n  const aesKey = useRef(null);\n  const receivedChunks = useRef([]);\n  const receivedIVs = useRef([]);\n\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false,\n    });\n\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n\n    socket.current.on('signal', async (data) => {\n      if (data.from !== senderId) return;\n\n      if (data.signal.publicKey) {\n        const senderPub = await importPublicKey(data.signal.publicKey);\n        aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, senderPub);\n\n        const myPub = await exportPublicKey(localKeyPair.current.publicKey);\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: { publicKey: myPub },\n        });\n      }\n\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: pc.current.localDescription,\n          });\n        }\n      } else if (data.signal.candidate) {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n      }\n    });\n\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n\n  const startConnection = async () => {\n    try {\n      pc.current = new RTCPeerConnection({\n        iceServers: [\n          { urls: 'stun:stun.l.google.com:19302' },\n          { urls: 'stun:stun1.l.google.com:19302' }\n        ]\n      });\n      \n      localKeyPair.current = await generateKeyPair();\n      setStatus('Establishing secure connection...');\n\n      pc.current.ondatachannel = (event) => {\n        dc.current = event.channel;\n        dc.current.binaryType = 'arraybuffer';\n\n        let expectingIV = true;\n        let currentIV = null;\n\n        dc.current.onmessage = async (event) => {\n          if (typeof event.data === 'string') {\n            try {\n              const msg = JSON.parse(event.data);\n              if (msg.done) {\n                setStatus('Decrypting file...');\n                const decryptedChunks = await Promise.all(\n                  receivedChunks.current.map((enc, i) =>\n                    decryptData(aesKey.current, enc, receivedIVs.current[i])\n                  )\n                );\n                const blob = new Blob(decryptedChunks);\n                const a = document.createElement('a');\n                a.href = URL.createObjectURL(blob);\n                a.download = msg.fileName || 'file';\n                a.click();\n                setStatus('File saved successfully.');\n                receivedChunks.current = [];\n                receivedIVs.current = [];\n              }\n            } catch (error) {\n              setStatus(`Error: ${error.message}`);\n            }\n          } else {\n            if (expectingIV) {\n              currentIV = new Uint8Array(event.data);\n            } else {\n              receivedChunks.current.push(event.data);\n              receivedIVs.current.push(currentIV);\n              \n              // Update decryption info\n              setDecryptedChunk({\n                chunkNumber: receivedChunks.current.length,\n                ivSize: currentIV.length,\n                encryptedSize: event.data.byteLength,\n                method: 'AES-GCM'\n              });\n              \n              setStatus(`Receiving: Chunk ${receivedChunks.current.length}`);\n            }\n            expectingIV = !expectingIV;\n          }\n        };\n\n        dc.current.onopen = () => setStatus('Connection secure. Ready to receive files.');\n        dc.current.onclose = () => setStatus('Connection closed.');\n        dc.current.onerror = (error) => setStatus(`Error: ${error.message}`);\n      };\n\n      pc.current.onicecandidate = (event) => {\n        if (event.candidate) {\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: { candidate: event.candidate },\n          });\n        }\n      };\n\n      pc.current.onconnectionstatechange = () => {\n        setStatus(`Connection state: ${pc.current.connectionState}`);\n      };\n\n    } catch (error) {\n      setStatus(`Connection error: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"receiver-container\">\n      <div className=\"receiver-header\">\n        <h2>Secure File Receiver</h2>\n        <div className=\"receiver-id-container\">\n          <span className=\"receiver-id\">ID: {id}</span>\n          <button \n            className=\"receiver-button icon-button\"\n            onClick={() => navigator.clipboard.writeText(id)}\n            title=\"Copy ID\"\n          >\n            📋\n          </button>\n        </div>\n      </div>\n\n      <div className=\"receiver-controls\">\n        <div className=\"connection-section\">\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"receiver-input\"\n              placeholder=\"Enter Sender ID\"\n              value={senderId}\n              onChange={e => setSenderId(e.target.value.toUpperCase())}\n            />\n            <button \n              className=\"receiver-button\"\n              onClick={startConnection}\n              disabled={!senderId}\n            >\n              Connect to Sender\n            </button>\n          </div>\n        </div>\n\n        {decryptedChunk && (\n          <div className=\"encryption-details\">\n            <h3>Decryption Information</h3>\n            <div className=\"encryption-summary\">\n              <div className=\"info-item\">\n                <span>Method:</span> \n                <span>{decryptedChunk.method}</span>\n              </div>\n              <div className=\"info-item\">\n                <span>Chunk Number:</span> \n                <span>{decryptedChunk.chunkNumber}</span>\n              </div>\n              <div className=\"info-item\">\n                <span>IV Size:</span> \n                <span>{decryptedChunk.ivSize} bytes</span>\n              </div>\n              <div className=\"info-item\">\n                <span>Encrypted Size:</span> \n                <span>{decryptedChunk.encryptedSize} bytes</span>\n              </div>\n            </div>\n            <div className=\"editor-container\">\n              <Editor\n                height=\"200px\"\n                defaultLanguage=\"json\"\n                theme=\"vs-dark\"\n                value={JSON.stringify(decryptedChunk, null, 2)}\n                options={{\n                  readOnly: true,\n                  minimap: { enabled: false },\n                  scrollBeyondLastLine: false,\n                  fontSize: 14,\n                  wordWrap: 'on'\n                }}\n              />\n            </div>\n          </div>\n        )}\n\n        <div className=\"status-section\">\n          <div className=\"progress-container\">\n            {status.includes('Chunk') && (\n              <div \n                className=\"progress-bar\"\n                style={{\n                  width: `${(receivedChunks.current.length / (receivedChunks.current.length + 1)) * 100}%`\n                }}\n              />\n            )}\n          </div>\n          <div className=\"status-container\">\n            <span className=\"status-text\">{status}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}