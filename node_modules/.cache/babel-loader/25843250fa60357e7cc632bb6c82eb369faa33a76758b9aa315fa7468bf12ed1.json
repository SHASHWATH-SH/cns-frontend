{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [qrData, setQrData] = useState('');\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n\n    // Simulated file link (you should replace this with backend logic)\n    const dummyLink = `http://localhost:5000/download/${selectedFile.name}`;\n    setQrData(dummyLink);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Secure P2P File Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), qrData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '2rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan the QR code to download the file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: qrData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yl/PfZBnwtBYiARkALl1wHZdKJ4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QRCodeCanvas","jsxDEV","_jsxDEV","App","_s","file","setFile","qrData","setQrData","handleFileChange","e","selectedFile","target","files","dummyLink","name","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","marginTop","value","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [qrData, setQrData] = useState('');\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n\n    // Simulated file link (you should replace this with backend logic)\n    const dummyLink = `http://localhost:5000/download/${selectedFile.name}`;\n    setQrData(dummyLink);\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Secure P2P File Transfer</h1>\n      <input type=\"file\" onChange={handleFileChange} />\n      {qrData && (\n        <div style={{ marginTop: '2rem' }}>\n          <p>Scan the QR code to download the file:</p>\n          <QRCodeCanvas value={qrData} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCP,OAAO,CAACK,YAAY,CAAC;;IAErB;IACA,MAAMG,SAAS,GAAG,kCAAkCH,YAAY,CAACI,IAAI,EAAE;IACvEP,SAAS,CAACM,SAAS,CAAC;EACtB,CAAC;EAED,oBACEZ,OAAA;IAAKc,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BhB,OAAA;MAAAgB,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEf;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChDf,MAAM,iBACLL,OAAA;MAAKc,KAAK,EAAE;QAAES,SAAS,EAAE;MAAO,CAAE;MAAAP,QAAA,gBAChChB,OAAA;QAAAgB,QAAA,EAAG;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC7CpB,OAAA,CAACF,YAAY;QAAC0B,KAAK,EAAEnB;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClB,EAAA,CAzBQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}