{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\n// frontend/src/Receiver.js\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNAL_SERVER = 'wss://localhost:8080'; // Must match backend WSS\n\nfunction Receiver() {\n  _s();\n  const pc = useRef(null);\n  const ws = useRef(null);\n  const [receivedData, setReceivedData] = useState([]);\n  const [downloadUrl, setDownloadUrl] = useState('');\n  const connectAndReceive = () => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      pc.current = new RTCPeerConnection();\n      pc.current.ondatachannel = event => {\n        const channel = event.channel;\n        const chunks = [];\n        channel.onmessage = e => {\n          if (e.data === 'EOF') {\n            const blob = new Blob(chunks);\n            const url = URL.createObjectURL(blob);\n            setDownloadUrl(url);\n          } else {\n            chunks.push(e.data);\n          }\n        };\n        channel.onopen = () => console.log('Data channel opened');\n        channel.onclose = () => console.log('Data channel closed');\n      };\n      pc.current.onicecandidate = e => {\n        if (e.candidate) {\n          ws.current.send(JSON.stringify({\n            type: 'candidate',\n            candidate: e.candidate\n          }));\n        }\n      };\n      ws.current.onmessage = message => {\n        const data = JSON.parse(message.data);\n        if (data.type === 'offer') {\n          pc.current.setRemoteDescription(new RTCSessionDescription(data.offer)).then(() => pc.current.createAnswer()).then(answer => pc.current.setLocalDescription(answer)).then(() => {\n            ws.current.send(JSON.stringify({\n              type: 'answer',\n              answer: pc.current.localDescription\n            }));\n          });\n        } else if (data.type === 'candidate') {\n          pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        }\n      };\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectAndReceive,\n      children: \"Start Receiving\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: downloadUrl,\n      download: \"received_file\",\n      children: \"Download File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"yf+pDUs8eQTEPqabYujeQemb9QI=\");\n_c = Receiver;\nexport default Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","SIGNAL_SERVER","Receiver","_s","pc","ws","receivedData","setReceivedData","downloadUrl","setDownloadUrl","connectAndReceive","current","WebSocket","onopen","RTCPeerConnection","ondatachannel","event","channel","chunks","onmessage","e","data","blob","Blob","url","URL","createObjectURL","push","console","log","onclose","onicecandidate","candidate","send","JSON","stringify","type","message","parse","setRemoteDescription","RTCSessionDescription","offer","then","createAnswer","answer","setLocalDescription","localDescription","addIceCandidate","RTCIceCandidate","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","download","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["// frontend/src/Receiver.js\nimport React, { useRef, useState } from 'react';\n\nconst SIGNAL_SERVER = 'wss://localhost:8080'; // Must match backend WSS\n\nfunction Receiver() {\n  const pc = useRef(null);\n  const ws = useRef(null);\n  const [receivedData, setReceivedData] = useState([]);\n  const [downloadUrl, setDownloadUrl] = useState('');\n\n  const connectAndReceive = () => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      pc.current = new RTCPeerConnection();\n\n      pc.current.ondatachannel = (event) => {\n        const channel = event.channel;\n        const chunks = [];\n\n        channel.onmessage = (e) => {\n          if (e.data === 'EOF') {\n            const blob = new Blob(chunks);\n            const url = URL.createObjectURL(blob);\n            setDownloadUrl(url);\n          } else {\n            chunks.push(e.data);\n          }\n        };\n\n        channel.onopen = () => console.log('Data channel opened');\n        channel.onclose = () => console.log('Data channel closed');\n      };\n\n      pc.current.onicecandidate = (e) => {\n        if (e.candidate) {\n          ws.current.send(JSON.stringify({ type: 'candidate', candidate: e.candidate }));\n        }\n      };\n\n      ws.current.onmessage = (message) => {\n        const data = JSON.parse(message.data);\n        if (data.type === 'offer') {\n          pc.current.setRemoteDescription(new RTCSessionDescription(data.offer))\n            .then(() => pc.current.createAnswer())\n            .then(answer => pc.current.setLocalDescription(answer))\n            .then(() => {\n              ws.current.send(JSON.stringify({ type: 'answer', answer: pc.current.localDescription }));\n            });\n        } else if (data.type === 'candidate') {\n          pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        }\n      };\n    };\n  };\n\n  return (\n    <div>\n      <h2>Receiver</h2>\n      <button onClick={connectAndReceive}>Start Receiving</button>\n      {downloadUrl && (\n        <a href={downloadUrl} download=\"received_file\">\n          Download File\n        </a>\n      )}\n    </div>\n  );\n}\n\nexport default Receiver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}