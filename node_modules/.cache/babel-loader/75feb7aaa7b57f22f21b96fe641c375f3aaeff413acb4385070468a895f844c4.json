{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\nexport default function Receiver() {\n  _s();\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const receivedBuffers = useRef([]);\n  useEffect(() => {\n    socket.current = io('https://172.17.3.195:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false\n    });\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n    socket.current.on('signal', async data => {\n      if (data.from !== senderId) return;\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: pc.current.localDescription\n          });\n        }\n      } else if (data.signal.candidate) {\n        try {\n          await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n        } catch (e) {\n          console.error('Error adding ICE candidate:', e);\n        }\n      }\n    });\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection();\n    pc.current.ondatachannel = event => {\n      dc.current = event.channel;\n      dc.current.onopen = () => setStatus('Data channel open. Ready to receive file.');\n      dc.current.onmessage = event => {\n        if (typeof event.data === 'string') {\n          try {\n            const msg = JSON.parse(event.data);\n            if (msg.done) {\n              setStatus('File received completely. Saving...');\n              saveFile(msg.fileName || 'received_file');\n            }\n          } catch {\n            // Not JSON, ignore\n          }\n        } else {\n          receivedBuffers.current.push(event.data);\n          setStatus(`Receiving... (${receivedBuffers.current.length} chunks)`);\n        }\n      };\n      dc.current.onclose = () => setStatus('Data channel closed.');\n    };\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: {\n            candidate: event.candidate\n          }\n        });\n      }\n    };\n  };\n  const saveFile = filename => {\n    const blob = new Blob(receivedBuffers.current);\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }, 100);\n    setStatus('File saved locally!');\n    receivedBuffers.current = [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Receiver (Your ID: \", id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Sender ID\",\n      value: senderId,\n      onChange: e => setSenderId(e.target.value.toUpperCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      disabled: !senderId,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"yi9WmbZDj8P4wTF3siVKAnL3TmI=\");\n_c = Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","generateId","Math","random","toString","slice","toUpperCase","Receiver","_s","id","senderId","setSenderId","status","setStatus","pc","socket","dc","receivedBuffers","current","transports","rejectUnauthorized","on","emit","data","from","signal","sdp","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","setLocalDescription","target","localDescription","candidate","addIceCandidate","RTCIceCandidate","e","console","error","disconnect","startConnection","RTCPeerConnection","ondatachannel","event","channel","onopen","onmessage","msg","JSON","parse","done","saveFile","fileName","push","length","onclose","onicecandidate","filename","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","children","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\n\nexport default function Receiver() {\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const receivedBuffers = useRef([]);\n\n  useEffect(() => {\n    socket.current = io('https://172.17.3.195:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false,\n    });\n\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id );\n      setStatus(`Registered as ${id}`);\n    });\n\n    socket.current.on('signal', async (data) => {\n      if (data.from !== senderId) return;\n\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: pc.current.localDescription,\n          });\n        }\n      } else if (data.signal.candidate) {\n        try {\n          await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n        } catch (e) {\n          console.error('Error adding ICE candidate:', e);\n        }\n      }\n    });\n\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection();\n\n    pc.current.ondatachannel = (event) => {\n      dc.current = event.channel;\n\n      dc.current.onopen = () => setStatus('Data channel open. Ready to receive file.');\n\n      dc.current.onmessage = (event) => {\n        if (typeof event.data === 'string') {\n          try {\n            const msg = JSON.parse(event.data);\n            if (msg.done) {\n              setStatus('File received completely. Saving...');\n              saveFile(msg.fileName || 'received_file');\n            }\n          } catch {\n            // Not JSON, ignore\n          }\n        } else {\n          receivedBuffers.current.push(event.data);\n          setStatus(`Receiving... (${receivedBuffers.current.length} chunks)`);\n        }\n      };\n\n      dc.current.onclose = () => setStatus('Data channel closed.');\n    };\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: { candidate: event.candidate },\n        });\n      }\n    };\n  };\n\n  const saveFile = (filename) => {\n    const blob = new Blob(receivedBuffers.current);\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }, 100);\n    setStatus('File saved locally!');\n    receivedBuffers.current = [];\n  };\n\n  return (\n    <div>\n      <h2>Receiver (Your ID: {id})</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Sender ID\"\n        value={senderId}\n        onChange={(e) => setSenderId(e.target.value.toUpperCase())}\n      />\n      <button onClick={startConnection} disabled={!senderId}>Connect</button>\n      <p>Status: {status}</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}