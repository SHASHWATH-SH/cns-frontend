{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\nexport default function Receiver() {\n  _s();\n  const [receiverId] = useState(generateId());\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const [receivedBuffers, setReceivedBuffers] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://localhost:8080\");\n    ws.current.onopen = () => console.log(\"Receiver WebSocket connected\");\n    ws.current.onmessage = event => {\n      if (typeof event.data === \"string\") {\n        try {\n          const data = JSON.parse(event.data);\n          if (data.to !== receiverId) return;\n          if (data.type === \"offer\") {\n            pc.current = new RTCPeerConnection();\n            pc.current.ondatachannel = event => {\n              dc.current = event.channel;\n              dc.current.binaryType = \"arraybuffer\";\n              dc.current.onmessage = e => {\n                if (typeof e.data === \"string\") {\n                  try {\n                    const signal = JSON.parse(e.data);\n                    if (signal.done) {\n                      // File transfer done: create Blob and download link\n                      const blob = new Blob(receivedBuffers);\n                      const url = URL.createObjectURL(blob);\n                      setDownloadUrl(url);\n                      setFileName(signal.fileName);\n                      setReceivedBuffers([]);\n                      console.log(\"File received:\", signal.fileName);\n                    }\n                  } catch {\n                    console.error(\"Invalid string in data channel\");\n                  }\n                } else {\n                  // Binary data chunk received\n                  setReceivedBuffers(prev => [...prev, e.data]);\n                }\n              };\n            };\n            pc.current.onicecandidate = event => {\n              if (event.candidate) {\n                ws.current.send(JSON.stringify({\n                  to: data.from,\n                  from: receiverId,\n                  type: \"candidate\",\n                  candidate: event.candidate\n                }));\n              }\n            };\n            pc.current.setRemoteDescription(new RTCSessionDescription(data.offer)).then(() => pc.current.createAnswer()).then(answer => pc.current.setLocalDescription(answer)).then(() => {\n              ws.current.send(JSON.stringify({\n                to: data.from,\n                from: receiverId,\n                type: \"answer\",\n                answer: pc.current.localDescription\n              }));\n            });\n          } else if (data.type === \"candidate\") {\n            pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          }\n        } catch {\n          console.error(\"Receiver: Invalid JSON\");\n        }\n      } else {\n        console.warn(\"Receiver: Non-string WS message ignored\");\n      }\n    };\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n      if (downloadUrl) URL.revokeObjectURL(downloadUrl);\n    };\n  }, [receiverId, receivedBuffers, downloadUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Receiver (ID: \", receiverId, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: downloadUrl,\n      download: fileName,\n      children: [\"Download received file: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"5y+DWVY+/RbdP/9mZm7h+OOdSSA=\");\n_c = Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","generateId","Math","random","toString","substring","toUpperCase","Receiver","_s","receiverId","ws","pc","dc","receivedBuffers","setReceivedBuffers","fileName","setFileName","downloadUrl","setDownloadUrl","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","to","type","RTCPeerConnection","ondatachannel","channel","binaryType","e","signal","done","blob","Blob","url","URL","createObjectURL","error","prev","onicecandidate","candidate","send","stringify","from","setRemoteDescription","RTCSessionDescription","offer","then","createAnswer","answer","setLocalDescription","localDescription","addIceCandidate","RTCIceCandidate","warn","close","revokeObjectURL","children","_jsxFileName","lineNumber","columnNumber","href","download","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction generateId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\n\nexport default function Receiver() {\n  const [receiverId] = useState(generateId());\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const [receivedBuffers, setReceivedBuffers] = useState([]);\n  const [fileName, setFileName] = useState(\"\");\n  const [downloadUrl, setDownloadUrl] = useState(\"\");\n\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://localhost:8080\");\n    ws.current.onopen = () => console.log(\"Receiver WebSocket connected\");\n\n    ws.current.onmessage = (event) => {\n      if (typeof event.data === \"string\") {\n        try {\n          const data = JSON.parse(event.data);\n          if (data.to !== receiverId) return;\n\n          if (data.type === \"offer\") {\n            pc.current = new RTCPeerConnection();\n\n            pc.current.ondatachannel = (event) => {\n              dc.current = event.channel;\n              dc.current.binaryType = \"arraybuffer\";\n              dc.current.onmessage = (e) => {\n                if (typeof e.data === \"string\") {\n                  try {\n                    const signal = JSON.parse(e.data);\n                    if (signal.done) {\n                      // File transfer done: create Blob and download link\n                      const blob = new Blob(receivedBuffers);\n                      const url = URL.createObjectURL(blob);\n                      setDownloadUrl(url);\n                      setFileName(signal.fileName);\n                      setReceivedBuffers([]);\n                      console.log(\"File received:\", signal.fileName);\n                    }\n                  } catch {\n                    console.error(\"Invalid string in data channel\");\n                  }\n                } else {\n                  // Binary data chunk received\n                  setReceivedBuffers((prev) => [...prev, e.data]);\n                }\n              };\n            };\n\n            pc.current.onicecandidate = (event) => {\n              if (event.candidate) {\n                ws.current.send(\n                  JSON.stringify({\n                    to: data.from,\n                    from: receiverId,\n                    type: \"candidate\",\n                    candidate: event.candidate,\n                  })\n                );\n              }\n            };\n\n            pc.current.setRemoteDescription(new RTCSessionDescription(data.offer))\n              .then(() => pc.current.createAnswer())\n              .then((answer) => pc.current.setLocalDescription(answer))\n              .then(() => {\n                ws.current.send(\n                  JSON.stringify({\n                    to: data.from,\n                    from: receiverId,\n                    type: \"answer\",\n                    answer: pc.current.localDescription,\n                  })\n                );\n              });\n          } else if (data.type === \"candidate\") {\n            pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          }\n        } catch {\n          console.error(\"Receiver: Invalid JSON\");\n        }\n      } else {\n        console.warn(\"Receiver: Non-string WS message ignored\");\n      }\n    };\n\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n      if (downloadUrl) URL.revokeObjectURL(downloadUrl);\n    };\n  }, [receiverId, receivedBuffers, downloadUrl]);\n\n  return (\n    <div>\n      <h2>Receiver (ID: {receiverId})</h2>\n      {downloadUrl && (\n        <a href={downloadUrl} download={fileName}>\n          Download received file: {fileName}\n        </a>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}