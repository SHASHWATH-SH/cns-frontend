{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { QRCodeSVG } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SIGNALING_SERVER = 'ws://localhost:8080';\nconst STUN_SERVERS = [{\n  urls: 'stun:stun.l.google.com:19302'\n}, {\n  urls: 'stun:stun1.l.google.com:19302'\n}];\nfunction App() {\n  _s();\n  const [clientId, setClientId] = useState('');\n  const [partnerId, setPartnerId] = useState('');\n  const [role, setRole] = useState(''); // 'sender' or 'receiver'\n  const [log, setLog] = useState([]);\n  const [file, setFile] = useState(null);\n  const [receivedFileURL, setReceivedFileURL] = useState(null);\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n  const receiveBuffer = useRef([]);\n  const receivedSize = useRef(0);\n  const fileSize = useRef(0);\n\n  // Utility to log messages\n  const addLog = msg => setLog(l => [...l, msg]);\n\n  // Connect to signaling server\n  useEffect(() => {\n    if (!clientId) return;\n    ws.current = new WebSocket(SIGNALING_SERVER);\n    ws.current.onopen = () => {\n      addLog('Connected to signaling server');\n      ws.current.send(JSON.stringify({\n        type: 'register',\n        id: clientId\n      }));\n    };\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      addLog(`Message from ${data.from}: ${data.type}`);\n      if (data.from === clientId) return; // ignore own messages\n\n      if (data.type === 'offer' && role === 'receiver') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          type: 'answer',\n          target: data.from,\n          answer\n        }));\n        addLog('Sent answer');\n      } else if (data.type === 'answer' && role === 'sender') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        addLog('Set remote description with answer');\n      } else if (data.type === 'ice-candidate') {\n        try {\n          await peerConnection.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          addLog('Added ICE candidate');\n        } catch (e) {\n          addLog('Error adding ICE candidate: ' + e.message);\n        }\n      }\n    };\n    ws.current.onerror = e => addLog('WebSocket error: ' + e.message);\n    return () => {\n      if (ws.current) ws.current.close();\n    };\n  }, [clientId, role]);\n\n  // Setup peer connection\n  useEffect(() => {\n    if (!role || !partnerId) return;\n    peerConnection.current = new RTCPeerConnection({\n      iceServers: STUN_SERVERS\n    });\n    peerConnection.current.onicecandidate = event => {\n      if (event.candidate) {\n        ws.current.send(JSON.stringify({\n          type: 'ice-candidate',\n          target: partnerId,\n          candidate: event.candidate\n        }));\n        addLog('Sent ICE candidate');\n      }\n    };\n    if (role === 'sender') {\n      dataChannel.current = peerConnection.current.createDataChannel('file');\n      dataChannel.current.onopen = () => addLog('Data channel opened');\n      dataChannel.current.onclose = () => addLog('Data channel closed');\n      dataChannel.current.onerror = err => addLog('Data channel error: ' + err.message);\n      dataChannel.current.onbufferedamountlow = () => {\n        sendChunks();\n      };\n    } else {\n      peerConnection.current.ondatachannel = event => {\n        dataChannel.current = event.channel;\n        dataChannel.current.onopen = () => addLog('Data channel opened (receiver)');\n        dataChannel.current.onclose = () => addLog('Data channel closed (receiver)');\n        dataChannel.current.onerror = err => addLog('Data channel error: ' + err.message);\n        receiveBuffer.current = [];\n        receivedSize.current = 0;\n        dataChannel.current.onmessage = event => {\n          const data = event.data;\n          if (typeof data === 'string') {\n            // JSON string with metadata\n            const meta = JSON.parse(data);\n            if (meta.type === 'file-meta') {\n              fileSize.current = meta.size;\n              receiveBuffer.current = [];\n              receivedSize.current = 0;\n              addLog(`Receiving file: ${meta.name} (${meta.size} bytes)`);\n            }\n          } else {\n            receiveBuffer.current.push(data);\n            receivedSize.current += data.byteLength;\n            addLog(`Received ${receivedSize.current}/${fileSize.current} bytes`);\n            if (receivedSize.current === fileSize.current) {\n              const receivedBlob = new Blob(receiveBuffer.current);\n              const url = URL.createObjectURL(receivedBlob);\n              setReceivedFileURL(url);\n              addLog('File received completely');\n            }\n          }\n        };\n      };\n    }\n    // Cleanup on role/partner change\n    return () => {\n      if (peerConnection.current) {\n        peerConnection.current.close();\n        peerConnection.current = null;\n      }\n      dataChannel.current = null;\n      receiveBuffer.current = [];\n      receivedSize.current = 0;\n      fileSize.current = 0;\n      setReceivedFileURL(null);\n    };\n  }, [role, partnerId]);\n\n  // Sender chunking logic\n  const CHUNK_SIZE = 16 * 1024; // 16 KB\n  const fileReader = useRef(null);\n  const offset = useRef(0);\n  const sendChunks = () => {\n    if (!file) return;\n    if (!dataChannel.current || dataChannel.current.readyState !== 'open') return;\n    while (dataChannel.current.bufferedAmount < 64 * CHUNK_SIZE && offset.current < file.size) {\n      const slice = file.slice(offset.current, offset.current + CHUNK_SIZE);\n      fileReader.current.readAsArrayBuffer(slice);\n      return; // wait for onload before continuing\n    }\n    if (offset.current >= file.size) {\n      addLog('File sent completely');\n    }\n  };\n  if (!fileReader.current) {\n    fileReader.current = new FileReader();\n    fileReader.current.onload = e => {\n      dataChannel.current.send(e.target.result);\n      offset.current += CHUNK_SIZE;\n      sendChunks();\n    };\n  }\n  const startTransfer = async () => {\n    if (!file || !partnerId) {\n      alert('Select file and enter partner ID');\n      return;\n    }\n\n    // Send file meta info first as stringified JSON\n    dataChannel.current.send(JSON.stringify({\n      type: 'file-meta',\n      name: file.name,\n      size: file.size\n    }));\n    offset.current = 0;\n    sendChunks();\n\n    // Create offer and send to partner\n    const offer = await peerConnection.current.createOffer();\n    await peerConnection.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({\n      type: 'offer',\n      target: partnerId,\n      offer\n    }));\n    addLog('Offer sent');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Secure P2P File Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), !clientId && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your ID (any unique string): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientId,\n        onChange: e => setClientId(e.target.value.trim())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), clientId && !role && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your ID: \", clientId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n        value: clientId,\n        size: 128\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole('sender'),\n        children: \"I'm Sender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole('receiver'),\n        children: \"I'm Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), role && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: clientId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n        value: clientId,\n        size: 128\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Partner ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: partnerId,\n          onChange: e => setPartnerId(e.target.value.trim()),\n          style: {\n            marginLeft: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), role === 'sender' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select file to send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTransfer,\n        disabled: !file || !partnerId,\n        children: \"Start Transfer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), role === 'receiver' && receivedFileURL && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Received File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: receivedFileURL,\n        download: \"received-file\",\n        children: \"Download file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#eee',\n        padding: 10,\n        height: 200,\n        overflowY: 'scroll',\n        border: '1px solid #ccc'\n      },\n      children: log.map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: l\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6ivoY52tjYqDkKmNxIHRPkrj+Ec=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCodeSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","SIGNALING_SERVER","STUN_SERVERS","urls","App","_s","clientId","setClientId","partnerId","setPartnerId","role","setRole","log","setLog","file","setFile","receivedFileURL","setReceivedFileURL","ws","peerConnection","dataChannel","receiveBuffer","receivedSize","fileSize","addLog","msg","l","current","WebSocket","onopen","send","JSON","stringify","type","id","onmessage","event","data","parse","from","setRemoteDescription","RTCSessionDescription","offer","answer","createAnswer","setLocalDescription","target","addIceCandidate","RTCIceCandidate","candidate","e","message","onerror","close","RTCPeerConnection","iceServers","onicecandidate","createDataChannel","onclose","err","onbufferedamountlow","sendChunks","ondatachannel","channel","meta","size","name","push","byteLength","receivedBlob","Blob","url","URL","createObjectURL","CHUNK_SIZE","fileReader","offset","readyState","bufferedAmount","slice","readAsArrayBuffer","FileReader","onload","result","startTransfer","alert","createOffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","trim","onClick","marginLeft","files","disabled","href","download","backgroundColor","height","overflowY","border","map","i","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { QRCodeSVG } from 'qrcode.react';\n\nconst SIGNALING_SERVER = 'ws://localhost:8080';\nconst STUN_SERVERS = [\n  { urls: 'stun:stun.l.google.com:19302' },\n  { urls: 'stun:stun1.l.google.com:19302' },\n];\n\nfunction App() {\n  const [clientId, setClientId] = useState('');\n  const [partnerId, setPartnerId] = useState('');\n  const [role, setRole] = useState(''); // 'sender' or 'receiver'\n  const [log, setLog] = useState([]);\n  const [file, setFile] = useState(null);\n  const [receivedFileURL, setReceivedFileURL] = useState(null);\n\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n  const receiveBuffer = useRef([]);\n  const receivedSize = useRef(0);\n  const fileSize = useRef(0);\n\n  // Utility to log messages\n  const addLog = (msg) => setLog((l) => [...l, msg]);\n\n  // Connect to signaling server\n  useEffect(() => {\n    if (!clientId) return;\n    ws.current = new WebSocket(SIGNALING_SERVER);\n    ws.current.onopen = () => {\n      addLog('Connected to signaling server');\n      ws.current.send(JSON.stringify({ type: 'register', id: clientId }));\n    };\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n      addLog(`Message from ${data.from}: ${data.type}`);\n\n      if (data.from === clientId) return; // ignore own messages\n\n      if (data.type === 'offer' && role === 'receiver') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({ type: 'answer', target: data.from, answer }));\n        addLog('Sent answer');\n      } else if (data.type === 'answer' && role === 'sender') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        addLog('Set remote description with answer');\n      } else if (data.type === 'ice-candidate') {\n        try {\n          await peerConnection.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          addLog('Added ICE candidate');\n        } catch (e) {\n          addLog('Error adding ICE candidate: ' + e.message);\n        }\n      }\n    };\n    ws.current.onerror = (e) => addLog('WebSocket error: ' + e.message);\n\n    return () => {\n      if (ws.current) ws.current.close();\n    };\n  }, [clientId, role]);\n\n  // Setup peer connection\n  useEffect(() => {\n    if (!role || !partnerId) return;\n\n    peerConnection.current = new RTCPeerConnection({ iceServers: STUN_SERVERS });\n\n    peerConnection.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        ws.current.send(\n          JSON.stringify({\n            type: 'ice-candidate',\n            target: partnerId,\n            candidate: event.candidate,\n          })\n        );\n        addLog('Sent ICE candidate');\n      }\n    };\n\n    if (role === 'sender') {\n      dataChannel.current = peerConnection.current.createDataChannel('file');\n\n      dataChannel.current.onopen = () => addLog('Data channel opened');\n      dataChannel.current.onclose = () => addLog('Data channel closed');\n      dataChannel.current.onerror = (err) => addLog('Data channel error: ' + err.message);\n\n      dataChannel.current.onbufferedamountlow = () => {\n        sendChunks();\n      };\n    } else {\n      peerConnection.current.ondatachannel = (event) => {\n        dataChannel.current = event.channel;\n\n        dataChannel.current.onopen = () => addLog('Data channel opened (receiver)');\n        dataChannel.current.onclose = () => addLog('Data channel closed (receiver)');\n        dataChannel.current.onerror = (err) => addLog('Data channel error: ' + err.message);\n\n        receiveBuffer.current = [];\n        receivedSize.current = 0;\n\n        dataChannel.current.onmessage = (event) => {\n          const data = event.data;\n          if (typeof data === 'string') {\n            // JSON string with metadata\n            const meta = JSON.parse(data);\n            if (meta.type === 'file-meta') {\n              fileSize.current = meta.size;\n              receiveBuffer.current = [];\n              receivedSize.current = 0;\n              addLog(`Receiving file: ${meta.name} (${meta.size} bytes)`);\n            }\n          } else {\n            receiveBuffer.current.push(data);\n            receivedSize.current += data.byteLength;\n            addLog(`Received ${receivedSize.current}/${fileSize.current} bytes`);\n\n            if (receivedSize.current === fileSize.current) {\n              const receivedBlob = new Blob(receiveBuffer.current);\n              const url = URL.createObjectURL(receivedBlob);\n              setReceivedFileURL(url);\n              addLog('File received completely');\n            }\n          }\n        };\n      };\n    }\n    // Cleanup on role/partner change\n    return () => {\n      if (peerConnection.current) {\n        peerConnection.current.close();\n        peerConnection.current = null;\n      }\n      dataChannel.current = null;\n      receiveBuffer.current = [];\n      receivedSize.current = 0;\n      fileSize.current = 0;\n      setReceivedFileURL(null);\n    };\n  }, [role, partnerId]);\n\n  // Sender chunking logic\n  const CHUNK_SIZE = 16 * 1024; // 16 KB\n  const fileReader = useRef(null);\n  const offset = useRef(0);\n\n  const sendChunks = () => {\n    if (!file) return;\n    if (!dataChannel.current || dataChannel.current.readyState !== 'open') return;\n    while (dataChannel.current.bufferedAmount < 64 * CHUNK_SIZE && offset.current < file.size) {\n      const slice = file.slice(offset.current, offset.current + CHUNK_SIZE);\n      fileReader.current.readAsArrayBuffer(slice);\n      return; // wait for onload before continuing\n    }\n    if (offset.current >= file.size) {\n      addLog('File sent completely');\n    }\n  };\n\n  if (!fileReader.current) {\n    fileReader.current = new FileReader();\n    fileReader.current.onload = (e) => {\n      dataChannel.current.send(e.target.result);\n      offset.current += CHUNK_SIZE;\n      sendChunks();\n    };\n  }\n\n  const startTransfer = async () => {\n    if (!file || !partnerId) {\n      alert('Select file and enter partner ID');\n      return;\n    }\n\n    // Send file meta info first as stringified JSON\n    dataChannel.current.send(\n      JSON.stringify({ type: 'file-meta', name: file.name, size: file.size })\n    );\n\n    offset.current = 0;\n    sendChunks();\n\n    // Create offer and send to partner\n    const offer = await peerConnection.current.createOffer();\n    await peerConnection.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({ type: 'offer', target: partnerId, offer }));\n    addLog('Offer sent');\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Secure P2P File Transfer</h2>\n\n      {!clientId && (\n        <>\n          <label>Your ID (any unique string): </label>\n          <input value={clientId} onChange={(e) => setClientId(e.target.value.trim())} />\n        </>\n      )}\n\n      {clientId && !role && (\n        <>\n          <p>Your ID: {clientId}</p>\n          <QRCodeSVG value={clientId} size={128} />\n          <button onClick={() => setRole('sender')}>I'm Sender</button>\n          <button onClick={() => setRole('receiver')}>I'm Receiver</button>\n        </>\n      )}\n\n      {role && (\n        <>\n          <p>\n            Role: <b>{role}</b>\n          </p>\n          <p>\n            Your ID: <b>{clientId}</b>\n          </p>\n          <QRCodeSVG value={clientId} size={128} />\n          <label>\n            Partner ID:\n            <input\n              value={partnerId}\n              onChange={(e) => setPartnerId(e.target.value.trim())}\n              style={{ marginLeft: 10 }}\n            />\n          </label>\n        </>\n      )}\n\n      {role === 'sender' && (\n        <>\n          <h3>Select file to send</h3>\n          <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n          <br />\n          <button onClick={startTransfer} disabled={!file || !partnerId}>\n            Start Transfer\n          </button>\n        </>\n      )}\n\n      {role === 'receiver' && receivedFileURL && (\n        <>\n          <h3>Received File</h3>\n          <a href={receivedFileURL} download=\"received-file\">\n            Download file\n          </a>\n        </>\n      )}\n\n      <h3>Logs</h3>\n      <div\n        style={{\n          backgroundColor: '#eee',\n          padding: 10,\n          height: 200,\n          overflowY: 'scroll',\n          border: '1px solid #ccc',\n        }}\n      >\n        {log.map((l, i) => (\n          <div key={i}>{l}</div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}