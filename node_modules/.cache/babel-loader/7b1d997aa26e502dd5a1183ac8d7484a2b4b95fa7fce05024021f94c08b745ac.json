{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNAL_SERVER = 'ws://localhost:8080';\nexport default function Sender() {\n  _s();\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [receiverId, setReceiverId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        register: myId\n      }));\n      console.log('Sender connected. ID:', myId);\n    };\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n      } else if (data.type === 'candidate') {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.warn('Failed to add ICE candidate:', e);\n        }\n      }\n    };\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n    };\n  }, [myId]);\n  const sendFile = file => {\n    const chunkSize = 16 * 1024;\n    let offset = 0;\n    const reader = new FileReader();\n    reader.onload = e => {\n      // Control sending rate by checking bufferedAmount\n      if (dc.current.bufferedAmount > 16 * chunkSize) {\n        setTimeout(() => sendChunk(e.target.result), 100);\n      } else {\n        sendChunk(e.target.result);\n      }\n    };\n    const sendChunk = chunk => {\n      dc.current.send(chunk);\n      offset += chunk.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        console.log('File sent successfully!');\n        dc.current.close();\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  const startConnection = async () => {\n    pc.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    dc.current = pc.current.createDataChannel('fileTransfer');\n    dc.current.onopen = () => {\n      console.log('DataChannel opened. Sending file...');\n      if (file) sendFile(file);\n    };\n    dc.current.onclose = () => {\n      console.log('DataChannel closed');\n    };\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        ws.current.send(JSON.stringify({\n          from: myId,\n          to: receiverId,\n          type: 'candidate',\n          candidate: event.candidate\n        }));\n      }\n    };\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({\n      from: myId,\n      to: receiverId,\n      type: 'offer',\n      sdp: offer\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: myId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Receiver ID\",\n      value: receiverId,\n      onChange: e => setReceiverId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !file || !receiverId,\n      onClick: startConnection,\n      children: \"Connect & Send File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"3F+ayac6iRVzGAJZTxectOSj8RM=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SIGNAL_SERVER","Sender","_s","myId","Math","random","toString","slice","receiverId","setReceiverId","file","setFile","ws","pc","dc","current","WebSocket","onopen","send","JSON","stringify","register","console","log","onmessage","event","data","parse","type","setRemoteDescription","RTCSessionDescription","sdp","addIceCandidate","candidate","e","warn","close","sendFile","chunkSize","offset","reader","FileReader","onload","bufferedAmount","setTimeout","sendChunk","target","result","chunk","byteLength","size","readSlice","o","readAsArrayBuffer","startConnection","RTCPeerConnection","iceServers","urls","createDataChannel","onclose","onicecandidate","from","to","offer","createOffer","setLocalDescription","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","files","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst SIGNAL_SERVER = 'ws://localhost:8080';\n\nexport default function Sender() {\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [receiverId, setReceiverId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({ register: myId }));\n      console.log('Sender connected. ID:', myId);\n    };\n\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n      } else if (data.type === 'candidate') {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.warn('Failed to add ICE candidate:', e);\n        }\n      }\n    };\n\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n    };\n  }, [myId]);\n\n  const sendFile = (file) => {\n    const chunkSize = 16 * 1024;\n    let offset = 0;\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      // Control sending rate by checking bufferedAmount\n      if (dc.current.bufferedAmount > 16 * chunkSize) {\n        setTimeout(() => sendChunk(e.target.result), 100);\n      } else {\n        sendChunk(e.target.result);\n      }\n    };\n\n    const sendChunk = (chunk) => {\n      dc.current.send(chunk);\n      offset += chunk.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        console.log('File sent successfully!');\n        dc.current.close();\n      }\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  const startConnection = async () => {\n    pc.current = new RTCPeerConnection({\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\n    });\n\n    dc.current = pc.current.createDataChannel('fileTransfer');\n\n    dc.current.onopen = () => {\n      console.log('DataChannel opened. Sending file...');\n      if (file) sendFile(file);\n    };\n\n    dc.current.onclose = () => {\n      console.log('DataChannel closed');\n    };\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        ws.current.send(\n          JSON.stringify({\n            from: myId,\n            to: receiverId,\n            type: 'candidate',\n            candidate: event.candidate,\n          })\n        );\n      }\n    };\n\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n\n    ws.current.send(\n      JSON.stringify({\n        from: myId,\n        to: receiverId,\n        type: 'offer',\n        sdp: offer,\n      })\n    );\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Sender</h2>\n      <p>Your ID: <b>{myId}</b></p>\n      <input\n        placeholder=\"Receiver ID\"\n        value={receiverId}\n        onChange={(e) => setReceiverId(e.target.value)}\n      />\n      <br />\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n      <br />\n      <button\n        disabled={!file || !receiverId}\n        onClick={startConnection}\n      >\n        Connect & Send File\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}