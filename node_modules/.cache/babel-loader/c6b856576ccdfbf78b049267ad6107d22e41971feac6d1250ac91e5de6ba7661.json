{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\n// Sender.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\nexport default function Sender() {\n  _s();\n  const [id] = useState(generateId());\n  const [receiverId, setReceiverId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const fileReader = useRef(null);\n  useEffect(() => {\n    socket.current = io('https://172.17.3.195:8080'); // Use your actual backend IP & port\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n    socket.current.on('signal', async data => {\n      if (!pc.current) {\n        console.warn('Peer connection not initialized yet. Ignoring signal.');\n        return;\n      }\n      if (data.from !== senderId) return;\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: pc.current.localDescription\n          });\n        }\n      } else if (data.signal.candidate) {\n        try {\n          await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n        } catch (e) {\n          console.error('Error adding ICE candidate:', e);\n        }\n      }\n    });\n    return () => socket.current.disconnect();\n  }, [id, receiverId]);\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection();\n    dc.current = pc.current.createDataChannel('fileTransfer');\n    dc.current.onopen = () => setStatus('Data channel open. Ready to send file.');\n    dc.current.onclose = () => setStatus('Data channel closed.');\n    dc.current.onerror = error => console.error('Data channel error:', error);\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: receiverId,\n          signal: {\n            candidate: event.candidate\n          }\n        });\n      }\n    };\n    pc.current.createOffer().then(offer => {\n      return pc.current.setLocalDescription(offer);\n    }).then(() => {\n      socket.current.emit('signal', {\n        target: receiverId,\n        signal: pc.current.localDescription\n      });\n      setStatus('Offer sent to receiver.');\n    });\n  };\n  const sendFile = file => {\n    if (!dc.current || dc.current.readyState !== 'open') {\n      alert('Data channel is not open yet!');\n      return;\n    }\n    const chunkSize = 16384;\n    let offset = 0;\n    fileReader.current = new FileReader();\n    fileReader.current.onload = e => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      setStatus(`Sending: ${Math.min(100, (offset / file.size * 100).toFixed(2))}%`);\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        dc.current.send(JSON.stringify({\n          done: true,\n          fileName: file.name\n        }));\n        setStatus('File sent.');\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.current.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Sender (Your ID: \", id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Receiver ID\",\n      value: receiverId,\n      onChange: e => setReceiverId(e.target.value.toUpperCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      disabled: !receiverId,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => sendFile(e.target.files[0]),\n      disabled: !dc.current || dc.current.readyState !== 'open'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"rKU05fBW3InPiq9kYk8JyGRnr2A=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","generateId","Math","random","toString","slice","toUpperCase","Sender","_s","id","receiverId","setReceiverId","status","setStatus","pc","socket","dc","fileReader","current","on","emit","data","console","warn","from","senderId","signal","sdp","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","setLocalDescription","target","localDescription","candidate","addIceCandidate","RTCIceCandidate","e","error","disconnect","startConnection","RTCPeerConnection","createDataChannel","onopen","onclose","onerror","onicecandidate","event","createOffer","then","offer","sendFile","file","readyState","alert","chunkSize","offset","FileReader","onload","send","result","byteLength","min","size","toFixed","readSlice","JSON","stringify","done","fileName","name","o","readAsArrayBuffer","children","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","onClick","disabled","files","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["// Sender.js\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\n\nexport default function Sender() {\n  const [id] = useState(generateId());\n  const [receiverId, setReceiverId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const fileReader = useRef(null);\n\n  useEffect(() => {\n    socket.current = io('https://172.17.3.195:8080'); // Use your actual backend IP & port\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n\n    socket.current.on('signal', async (data) => {\n  if (!pc.current) {\n    console.warn('Peer connection not initialized yet. Ignoring signal.');\n    return;\n  }\n\n  if (data.from !== senderId) return;\n\n  if (data.signal.sdp) {\n    await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n    if (data.signal.type === 'offer') {\n      const answer = await pc.current.createAnswer();\n      await pc.current.setLocalDescription(answer);\n      socket.current.emit('signal', {\n        target: senderId,\n        signal: pc.current.localDescription,\n      });\n    }\n  } else if (data.signal.candidate) {\n    try {\n      await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n    } catch (e) {\n      console.error('Error adding ICE candidate:', e);\n    }\n  }\n});\n\n\n    return () => socket.current.disconnect();\n  }, [id, receiverId]);\n\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection();\n\n    dc.current = pc.current.createDataChannel('fileTransfer');\n\n    dc.current.onopen = () => setStatus('Data channel open. Ready to send file.');\n    dc.current.onclose = () => setStatus('Data channel closed.');\n    dc.current.onerror = (error) => console.error('Data channel error:', error);\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: receiverId,\n          signal: { candidate: event.candidate },\n        });\n      }\n    };\n\n    pc.current.createOffer().then(offer => {\n      return pc.current.setLocalDescription(offer);\n    }).then(() => {\n      socket.current.emit('signal', {\n        target: receiverId,\n        signal: pc.current.localDescription,\n      });\n      setStatus('Offer sent to receiver.');\n    });\n  };\n\n  const sendFile = (file) => {\n    if (!dc.current || dc.current.readyState !== 'open') {\n      alert('Data channel is not open yet!');\n      return;\n    }\n\n    const chunkSize = 16384;\n    let offset = 0;\n\n    fileReader.current = new FileReader();\n\n    fileReader.current.onload = (e) => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      setStatus(`Sending: ${Math.min(100, ((offset / file.size) * 100).toFixed(2))}%`);\n\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        dc.current.send(JSON.stringify({ done: true, fileName: file.name }));\n        setStatus('File sent.');\n      }\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.current.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  return (\n    <div>\n      <h2>Sender (Your ID: {id})</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Receiver ID\"\n        value={receiverId}\n        onChange={(e) => setReceiverId(e.target.value.toUpperCase())}\n      />\n      <button onClick={startConnection} disabled={!receiverId}>Connect</button>\n      <br />\n      <input\n        type=\"file\"\n        onChange={e => sendFile(e.target.files[0])}\n        disabled={!dc.current || dc.current.readyState !== 'open'}\n      />\n      <p>Status: {status}</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}