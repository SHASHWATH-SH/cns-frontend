{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SIGNALING_SERVER_URL = \"ws://localhost:8080\";\nconst ICE_SERVERS = [{\n  urls: \"stun:stun.l.google.com:19302\"\n}];\nfunction App() {\n  _s();\n  const [role, setRole] = useState(null); // \"sender\" or \"receiver\"\n  const [logs, setLogs] = useState([]);\n  const [file, setFile] = useState(null);\n  const [connectionOpen, setConnectionOpen] = useState(false);\n  const [remoteId, setRemoteId] = useState(\"\");\n  const [myId, setMyId] = useState(\"\");\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n\n  // Append log helper\n  const appendLog = msg => setLogs(l => [...l, msg]);\n\n  // Connect to signaling server and assign myId\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n    ws.current.onopen = () => {\n      appendLog(\"Connected to signaling server\");\n    };\n    ws.current.onmessage = message => {\n      const data = JSON.parse(message.data);\n      if (data.type === \"id\") {\n        setMyId(data.id);\n        appendLog(`My ID: ${data.id}`);\n      } else if (data.type === \"offer\" && role === \"receiver\") {\n        handleOffer(data.offer, data.from);\n      } else if (data.type === \"answer\" && role === \"sender\") {\n        handleAnswer(data.answer);\n      } else if (data.type === \"ice-candidate\") {\n        handleRemoteIceCandidate(data.candidate);\n      }\n    };\n    ws.current.onerror = err => {\n      appendLog(\"WebSocket error: \" + err.message);\n    };\n    ws.current.onclose = () => {\n      appendLog(\"Disconnected from signaling server\");\n    };\n    return () => {\n      if (ws.current) ws.current.close();\n    };\n  }, [role]);\n\n  // Send message via WebSocket\n  const sendSignal = msg => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(msg));\n    }\n  };\n\n  // Clean up peer connection if any\n  const cleanupPeerConnection = () => {\n    if (peerConnection.current) {\n      appendLog(\"Closing existing peer connection...\");\n      peerConnection.current.close();\n      peerConnection.current = null;\n    }\n    if (dataChannel.current) {\n      dataChannel.current.close();\n      dataChannel.current = null;\n    }\n    setConnectionOpen(false);\n  };\n\n  // Create peer connection and setup handlers\n  const createPeerConnection = isSender => {\n    cleanupPeerConnection();\n    peerConnection.current = new RTCPeerConnection({\n      iceServers: ICE_SERVERS\n    });\n    peerConnection.current.onicecandidate = event => {\n      if (!peerConnection.current || peerConnection.current.connectionState === \"closed\") {\n        appendLog(\"ICE candidate event ignored - connection closed or null\");\n        return;\n      }\n      if (event.candidate) {\n        appendLog(\"Sending ICE candidate\");\n        sendSignal({\n          type: \"ice-candidate\",\n          candidate: event.candidate,\n          to: remoteId\n        });\n      }\n    };\n    peerConnection.current.onconnectionstatechange = () => {\n      if (!peerConnection.current) return;\n      appendLog(`Connection state: ${peerConnection.current.connectionState}`);\n      if (peerConnection.current.connectionState === \"failed\" || peerConnection.current.connectionState === \"disconnected\") {\n        appendLog(\"Connection failed or disconnected, cleaning up.\");\n        cleanupPeerConnection();\n      }\n    };\n    if (isSender) {\n      dataChannel.current = peerConnection.current.createDataChannel(\"fileTransfer\");\n      dataChannel.current.onopen = () => {\n        appendLog(\"Data channel opened\");\n        setConnectionOpen(true);\n      };\n      dataChannel.current.onclose = () => {\n        appendLog(\"Data channel closed\");\n        setConnectionOpen(false);\n      };\n      dataChannel.current.onerror = err => {\n        appendLog(\"Data channel error: \" + err.message);\n      };\n      dataChannel.current.onmessage = event => {\n        // Sender usually doesn't receive messages on this channel\n        appendLog(\"Sender received message: \" + event.data);\n      };\n    } else {\n      peerConnection.current.ondatachannel = event => {\n        dataChannel.current = event.channel;\n        dataChannel.current.onopen = () => {\n          appendLog(\"Data channel opened\");\n          setConnectionOpen(true);\n        };\n        dataChannel.current.onclose = () => {\n          appendLog(\"Data channel closed\");\n          setConnectionOpen(false);\n        };\n        dataChannel.current.onerror = err => {\n          appendLog(\"Data channel error: \" + err.message);\n        };\n        dataChannel.current.onmessage = event => {\n          appendLog(\"Received data chunk\");\n          // Here you would process the incoming file chunk or message.\n          // For example, collect chunks, then reconstruct file.\n        };\n      };\n    }\n  };\n\n  // Sender starts connection and sends offer\n  const startSender = async () => {\n    if (!remoteId) {\n      appendLog(\"Please enter receiver ID\");\n      return;\n    }\n    createPeerConnection(true);\n    try {\n      const offer = await peerConnection.current.createOffer();\n      await peerConnection.current.setLocalDescription(offer);\n      appendLog(\"Sending offer\");\n      sendSignal({\n        type: \"offer\",\n        offer,\n        to: remoteId\n      });\n    } catch (err) {\n      appendLog(\"Error creating offer: \" + err.message);\n    }\n  };\n\n  // Receiver handles offer, creates answer\n  const handleOffer = async (offer, from) => {\n    setRemoteId(from);\n    createPeerConnection(false);\n    try {\n      await peerConnection.current.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peerConnection.current.createAnswer();\n      await peerConnection.current.setLocalDescription(answer);\n      appendLog(\"Sending answer\");\n      sendSignal({\n        type: \"answer\",\n        answer,\n        to: from\n      });\n    } catch (err) {\n      appendLog(\"Error handling offer: \" + err.message);\n    }\n  };\n\n  // Sender handles answer\n  const handleAnswer = async answer => {\n    try {\n      await peerConnection.current.setRemoteDescription(new RTCSessionDescription(answer));\n      appendLog(\"Answer set, connection should establish soon.\");\n    } catch (err) {\n      appendLog(\"Error setting answer: \" + err.message);\n    }\n  };\n\n  // Both handle remote ICE candidates\n  const handleRemoteIceCandidate = async candidate => {\n    try {\n      if (!peerConnection.current) {\n        appendLog(\"No peer connection for remote ICE candidate\");\n        return;\n      }\n      await peerConnection.current.addIceCandidate(new RTCIceCandidate(candidate));\n      appendLog(\"Added remote ICE candidate\");\n    } catch (err) {\n      appendLog(\"Error adding remote ICE candidate: \" + err.message);\n    }\n  };\n\n  // Send file function (sender only)\n  const sendFile = () => {\n    if (!connectionOpen || !dataChannel.current || dataChannel.current.readyState !== \"open\") {\n      appendLog(\"Data channel not open, cannot send file\");\n      return;\n    }\n    if (!file) {\n      appendLog(\"No file selected\");\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = () => {\n      try {\n        dataChannel.current.send(reader.result);\n        appendLog(`Sent file: ${file.name}`);\n      } catch (err) {\n        appendLog(\"Error sending file: \" + err.message);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  // UI to pick role\n  if (!role) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select role\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole(\"sender\"),\n        children: \"Sender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole(\"receiver\"),\n        children: \"Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Role: \", role]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"My ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 12\n        }, this), \" \", myId || \"Connecting...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), role === \"sender\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Receiver ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: remoteId,\n            onChange: e => setRemoteId(e.target.value),\n            placeholder: \"Enter receiver ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startSender,\n          disabled: !remoteId,\n          children: \"Start Connection & Send Offer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendFile,\n          disabled: !file || !connectionOpen,\n          children: \"Send File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), role === \"receiver\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for offer...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: 200,\n          overflowY: \"auto\",\n          border: \"1px solid #ccc\",\n          padding: 10,\n          backgroundColor: \"#f9f9f9\"\n        },\n        children: logs.map((log, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: log\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your QR Code (your ID):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), myId ? /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n        value: myId,\n        size: 128\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this) : \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LUw6Psno0GDkKTkT1Z6sgih/wag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCodeCanvas","jsxDEV","_jsxDEV","Fragment","_Fragment","SIGNALING_SERVER_URL","ICE_SERVERS","urls","App","_s","role","setRole","logs","setLogs","file","setFile","connectionOpen","setConnectionOpen","remoteId","setRemoteId","myId","setMyId","ws","peerConnection","dataChannel","appendLog","msg","l","current","WebSocket","onopen","onmessage","message","data","JSON","parse","type","id","handleOffer","offer","from","handleAnswer","answer","handleRemoteIceCandidate","candidate","onerror","err","onclose","close","sendSignal","readyState","OPEN","send","stringify","cleanupPeerConnection","createPeerConnection","isSender","RTCPeerConnection","iceServers","onicecandidate","event","connectionState","to","onconnectionstatechange","createDataChannel","ondatachannel","channel","startSender","createOffer","setLocalDescription","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","sendFile","reader","FileReader","onload","result","name","readAsArrayBuffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","disabled","files","marginTop","maxHeight","overflowY","border","backgroundColor","map","log","idx","size","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { QRCodeCanvas } from \"qrcode.react\";\n\nconst SIGNALING_SERVER_URL = \"ws://localhost:8080\";\nconst ICE_SERVERS = [{ urls: \"stun:stun.l.google.com:19302\" }];\n\nfunction App() {\n  const [role, setRole] = useState(null); // \"sender\" or \"receiver\"\n  const [logs, setLogs] = useState([]);\n  const [file, setFile] = useState(null);\n  const [connectionOpen, setConnectionOpen] = useState(false);\n  const [remoteId, setRemoteId] = useState(\"\");\n  const [myId, setMyId] = useState(\"\");\n\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n\n  // Append log helper\n  const appendLog = (msg) => setLogs((l) => [...l, msg]);\n\n  // Connect to signaling server and assign myId\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n\n    ws.current.onopen = () => {\n      appendLog(\"Connected to signaling server\");\n    };\n\n    ws.current.onmessage = (message) => {\n      const data = JSON.parse(message.data);\n      if (data.type === \"id\") {\n        setMyId(data.id);\n        appendLog(`My ID: ${data.id}`);\n      } else if (data.type === \"offer\" && role === \"receiver\") {\n        handleOffer(data.offer, data.from);\n      } else if (data.type === \"answer\" && role === \"sender\") {\n        handleAnswer(data.answer);\n      } else if (data.type === \"ice-candidate\") {\n        handleRemoteIceCandidate(data.candidate);\n      }\n    };\n\n    ws.current.onerror = (err) => {\n      appendLog(\"WebSocket error: \" + err.message);\n    };\n\n    ws.current.onclose = () => {\n      appendLog(\"Disconnected from signaling server\");\n    };\n\n    return () => {\n      if (ws.current) ws.current.close();\n    };\n  }, [role]);\n\n  // Send message via WebSocket\n  const sendSignal = (msg) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(msg));\n    }\n  };\n\n  // Clean up peer connection if any\n  const cleanupPeerConnection = () => {\n    if (peerConnection.current) {\n      appendLog(\"Closing existing peer connection...\");\n      peerConnection.current.close();\n      peerConnection.current = null;\n    }\n    if (dataChannel.current) {\n      dataChannel.current.close();\n      dataChannel.current = null;\n    }\n    setConnectionOpen(false);\n  };\n\n  // Create peer connection and setup handlers\n  const createPeerConnection = (isSender) => {\n    cleanupPeerConnection();\n\n    peerConnection.current = new RTCPeerConnection({ iceServers: ICE_SERVERS });\n\n    peerConnection.current.onicecandidate = (event) => {\n      if (!peerConnection.current || peerConnection.current.connectionState === \"closed\") {\n        appendLog(\"ICE candidate event ignored - connection closed or null\");\n        return;\n      }\n      if (event.candidate) {\n        appendLog(\"Sending ICE candidate\");\n        sendSignal({\n          type: \"ice-candidate\",\n          candidate: event.candidate,\n          to: remoteId,\n        });\n      }\n    };\n\n    peerConnection.current.onconnectionstatechange = () => {\n      if (!peerConnection.current) return;\n      appendLog(`Connection state: ${peerConnection.current.connectionState}`);\n      if (peerConnection.current.connectionState === \"failed\" || peerConnection.current.connectionState === \"disconnected\") {\n        appendLog(\"Connection failed or disconnected, cleaning up.\");\n        cleanupPeerConnection();\n      }\n    };\n\n    if (isSender) {\n      dataChannel.current = peerConnection.current.createDataChannel(\"fileTransfer\");\n\n      dataChannel.current.onopen = () => {\n        appendLog(\"Data channel opened\");\n        setConnectionOpen(true);\n      };\n      dataChannel.current.onclose = () => {\n        appendLog(\"Data channel closed\");\n        setConnectionOpen(false);\n      };\n      dataChannel.current.onerror = (err) => {\n        appendLog(\"Data channel error: \" + err.message);\n      };\n      dataChannel.current.onmessage = (event) => {\n        // Sender usually doesn't receive messages on this channel\n        appendLog(\"Sender received message: \" + event.data);\n      };\n    } else {\n      peerConnection.current.ondatachannel = (event) => {\n        dataChannel.current = event.channel;\n\n        dataChannel.current.onopen = () => {\n          appendLog(\"Data channel opened\");\n          setConnectionOpen(true);\n        };\n        dataChannel.current.onclose = () => {\n          appendLog(\"Data channel closed\");\n          setConnectionOpen(false);\n        };\n        dataChannel.current.onerror = (err) => {\n          appendLog(\"Data channel error: \" + err.message);\n        };\n        dataChannel.current.onmessage = (event) => {\n          appendLog(\"Received data chunk\");\n          // Here you would process the incoming file chunk or message.\n          // For example, collect chunks, then reconstruct file.\n        };\n      };\n    }\n  };\n\n  // Sender starts connection and sends offer\n  const startSender = async () => {\n    if (!remoteId) {\n      appendLog(\"Please enter receiver ID\");\n      return;\n    }\n    createPeerConnection(true);\n\n    try {\n      const offer = await peerConnection.current.createOffer();\n      await peerConnection.current.setLocalDescription(offer);\n\n      appendLog(\"Sending offer\");\n      sendSignal({ type: \"offer\", offer, to: remoteId });\n    } catch (err) {\n      appendLog(\"Error creating offer: \" + err.message);\n    }\n  };\n\n  // Receiver handles offer, creates answer\n  const handleOffer = async (offer, from) => {\n    setRemoteId(from);\n    createPeerConnection(false);\n\n    try {\n      await peerConnection.current.setRemoteDescription(new RTCSessionDescription(offer));\n      const answer = await peerConnection.current.createAnswer();\n      await peerConnection.current.setLocalDescription(answer);\n\n      appendLog(\"Sending answer\");\n      sendSignal({ type: \"answer\", answer, to: from });\n    } catch (err) {\n      appendLog(\"Error handling offer: \" + err.message);\n    }\n  };\n\n  // Sender handles answer\n  const handleAnswer = async (answer) => {\n    try {\n      await peerConnection.current.setRemoteDescription(new RTCSessionDescription(answer));\n      appendLog(\"Answer set, connection should establish soon.\");\n    } catch (err) {\n      appendLog(\"Error setting answer: \" + err.message);\n    }\n  };\n\n  // Both handle remote ICE candidates\n  const handleRemoteIceCandidate = async (candidate) => {\n    try {\n      if (!peerConnection.current) {\n        appendLog(\"No peer connection for remote ICE candidate\");\n        return;\n      }\n      await peerConnection.current.addIceCandidate(new RTCIceCandidate(candidate));\n      appendLog(\"Added remote ICE candidate\");\n    } catch (err) {\n      appendLog(\"Error adding remote ICE candidate: \" + err.message);\n    }\n  };\n\n  // Send file function (sender only)\n  const sendFile = () => {\n    if (!connectionOpen || !dataChannel.current || dataChannel.current.readyState !== \"open\") {\n      appendLog(\"Data channel not open, cannot send file\");\n      return;\n    }\n    if (!file) {\n      appendLog(\"No file selected\");\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      try {\n        dataChannel.current.send(reader.result);\n        appendLog(`Sent file: ${file.name}`);\n      } catch (err) {\n        appendLog(\"Error sending file: \" + err.message);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  // UI to pick role\n  if (!role) {\n    return (\n      <div style={{ padding: 20 }}>\n        <h2>Select role</h2>\n        <button onClick={() => setRole(\"sender\")}>Sender</button>\n        <button onClick={() => setRole(\"receiver\")}>Receiver</button>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Role: {role}</h2>\n      <div>\n        <p><strong>My ID:</strong> {myId || \"Connecting...\"}</p>\n      </div>\n\n      {role === \"sender\" && (\n        <>\n          <div>\n            <label>\n              Receiver ID:\n              <input\n                value={remoteId}\n                onChange={(e) => setRemoteId(e.target.value)}\n                placeholder=\"Enter receiver ID\"\n              />\n            </label>\n            <button onClick={startSender} disabled={!remoteId}>\n              Start Connection & Send Offer\n            </button>\n          </div>\n          <div>\n            <input\n              type=\"file\"\n              onChange={(e) => setFile(e.target.files[0])}\n            />\n            <button onClick={sendFile} disabled={!file || !connectionOpen}>\n              Send File\n            </button>\n          </div>\n        </>\n      )}\n\n      {role === \"receiver\" && (\n        <>\n          <p>Waiting for offer...</p>\n        </>\n      )}\n\n      <div style={{ marginTop: 20 }}>\n        <h3>Logs:</h3>\n        <div\n          style={{\n            maxHeight: 200,\n            overflowY: \"auto\",\n            border: \"1px solid #ccc\",\n            padding: 10,\n            backgroundColor: \"#f9f9f9\",\n          }}\n        >\n          {logs.map((log, idx) => (\n            <div key={idx}>{log}</div>\n          ))}\n        </div>\n      </div>\n\n      <div style={{ marginTop: 20 }}>\n        <h3>Your QR Code (your ID):</h3>\n        {myId ? <QRCodeCanvas value={myId} size={128} /> : \"Loading...\"}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}