{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNALING_SERVER_URL = \"ws://localhost:8080\";\nfunction App() {\n  _s();\n  const [myId, setMyId] = useState('');\n  const [remoteId, setRemoteId] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [qrValue, setQrValue] = useState('');\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n    ws.current.onopen = () => {\n      console.log(\"Connected to signaling server\");\n    };\n    ws.current.onmessage = message => {\n      const data = JSON.parse(message.data);\n      if (data.type === 'id') {\n        setMyId(data.id);\n        setQrValue(data.id); // encode your ID in QR to share\n      } else if (data.type === 'offer') {\n        handleOffer(data);\n      } else if (data.type === 'answer') {\n        handleAnswer(data);\n      } else if (data.type === 'ice-candidate') {\n        handleICECandidate(data);\n      }\n    };\n    ws.current.onerror = console.error;\n    return () => {\n      if (ws.current) ws.current.close();\n      if (peerConnection.current) peerConnection.current.close();\n    };\n  }, []);\n  const sendMessage = msg => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(msg));\n    }\n  };\n\n  // Setup peer connection and data channel\n  const createPeerConnection = isInitiator => {\n    peerConnection.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    peerConnection.current.onicecandidate = event => {\n      if (event.candidate) {\n        sendMessage({\n          type: 'ice-candidate',\n          candidate: event.candidate,\n          to: remoteId,\n          from: myId\n        });\n      }\n    };\n    peerConnection.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", peerConnection.current.connectionState);\n      if (peerConnection.current.connectionState === 'connected') {\n        setConnected(true);\n      }\n      if (peerConnection.current.connectionState === 'disconnected' || peerConnection.current.connectionState === 'failed') {\n        setConnected(false);\n      }\n    };\n    if (isInitiator) {\n      dataChannel.current = peerConnection.current.createDataChannel(\"fileTransfer\");\n      dataChannel.current.onopen = () => {\n        console.log(\"Data channel opened\");\n      };\n      dataChannel.current.onclose = () => {\n        console.log(\"Data channel closed\");\n      };\n      dataChannel.current.onerror = error => {\n        console.error(\"Data channel error\", error);\n      };\n      dataChannel.current.onmessage = event => {\n        console.log(\"Received data:\", event.data);\n      };\n    } else {\n      peerConnection.current.ondatachannel = event => {\n        dataChannel.current = event.channel;\n        dataChannel.current.onopen = () => {\n          console.log(\"Data channel opened\");\n        };\n        dataChannel.current.onclose = () => {\n          console.log(\"Data channel closed\");\n        };\n        dataChannel.current.onerror = error => {\n          console.error(\"Data channel error\", error);\n        };\n        dataChannel.current.onmessage = event => {\n          console.log(\"Received data:\", event.data);\n        };\n      };\n    }\n  };\n  const handleOffer = async data => {\n    if (!peerConnection.current) createPeerConnection(false);\n    await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n    const answer = await peerConnection.current.createAnswer();\n    await peerConnection.current.setLocalDescription(answer);\n    sendMessage({\n      type: 'answer',\n      answer,\n      to: data.from,\n      from: myId\n    });\n    setRemoteId(data.from);\n  };\n  const handleAnswer = async data => {\n    if (!peerConnection.current) return;\n    await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n  };\n  const handleICECandidate = async data => {\n    if (!peerConnection.current) return;\n    try {\n      await peerConnection.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n    } catch (err) {\n      console.error(\"Error adding received ice candidate\", err);\n    }\n  };\n  const startConnection = async () => {\n    if (!remoteId) return alert(\"Enter remote ID to connect\");\n    createPeerConnection(true);\n    const offer = await peerConnection.current.createOffer();\n    await peerConnection.current.setLocalDescription(offer);\n    sendMessage({\n      type: 'offer',\n      offer,\n      to: remoteId,\n      from: myId\n    });\n  };\n  const sendFile = event => {\n    const file = event.target.files[0];\n    if (!file || !dataChannel.current || dataChannel.current.readyState !== 'open') return;\n    const reader = new FileReader();\n    reader.onload = () => {\n      dataChannel.current.send(reader.result);\n      alert(\"File sent!\");\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your ID (share this):\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: myId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), qrValue && /*#__PURE__*/_jsxDEV(QRCodeCanvas, {\n      value: qrValue,\n      size: 150\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter remote peer ID\",\n        value: remoteId,\n        onChange: e => setRemoteId(e.target.value),\n        style: {\n          width: 300,\n          padding: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startConnection,\n        disabled: !myId,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), connected && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connected! Send a file:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: sendFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QKvVXrQVq/9zPcwRNmcd9KjoMBo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCodeCanvas","jsxDEV","_jsxDEV","SIGNALING_SERVER_URL","App","_s","myId","setMyId","remoteId","setRemoteId","connected","setConnected","qrValue","setQrValue","ws","peerConnection","dataChannel","current","WebSocket","onopen","console","log","onmessage","message","data","JSON","parse","type","id","handleOffer","handleAnswer","handleICECandidate","onerror","error","close","sendMessage","msg","readyState","OPEN","send","stringify","createPeerConnection","isInitiator","RTCPeerConnection","iceServers","urls","onicecandidate","event","candidate","to","from","onconnectionstatechange","connectionState","createDataChannel","onclose","ondatachannel","channel","setRemoteDescription","RTCSessionDescription","offer","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","err","startConnection","alert","createOffer","sendFile","file","target","files","reader","FileReader","onload","result","readAsArrayBuffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","size","marginTop","placeholder","onChange","e","width","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\n\nconst SIGNALING_SERVER_URL = \"ws://localhost:8080\";\n\nfunction App() {\n  const [myId, setMyId] = useState('');\n  const [remoteId, setRemoteId] = useState('');\n  const [connected, setConnected] = useState(false);\n  const [qrValue, setQrValue] = useState('');\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n\n    ws.current.onopen = () => {\n      console.log(\"Connected to signaling server\");\n    };\n\n    ws.current.onmessage = (message) => {\n      const data = JSON.parse(message.data);\n      if (data.type === 'id') {\n        setMyId(data.id);\n        setQrValue(data.id); // encode your ID in QR to share\n      } else if (data.type === 'offer') {\n        handleOffer(data);\n      } else if (data.type === 'answer') {\n        handleAnswer(data);\n      } else if (data.type === 'ice-candidate') {\n        handleICECandidate(data);\n      }\n    };\n\n    ws.current.onerror = console.error;\n\n    return () => {\n      if (ws.current) ws.current.close();\n      if (peerConnection.current) peerConnection.current.close();\n    };\n  }, []);\n\n  const sendMessage = (msg) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(msg));\n    }\n  };\n\n  // Setup peer connection and data channel\n  const createPeerConnection = (isInitiator) => {\n    peerConnection.current = new RTCPeerConnection({\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    });\n\n    peerConnection.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        sendMessage({\n          type: 'ice-candidate',\n          candidate: event.candidate,\n          to: remoteId,\n          from: myId\n        });\n      }\n    };\n\n    peerConnection.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", peerConnection.current.connectionState);\n      if (peerConnection.current.connectionState === 'connected') {\n        setConnected(true);\n      }\n      if (peerConnection.current.connectionState === 'disconnected' || peerConnection.current.connectionState === 'failed') {\n        setConnected(false);\n      }\n    };\n\n    if (isInitiator) {\n      dataChannel.current = peerConnection.current.createDataChannel(\"fileTransfer\");\n\n      dataChannel.current.onopen = () => {\n        console.log(\"Data channel opened\");\n      };\n\n      dataChannel.current.onclose = () => {\n        console.log(\"Data channel closed\");\n      };\n\n      dataChannel.current.onerror = (error) => {\n        console.error(\"Data channel error\", error);\n      };\n\n      dataChannel.current.onmessage = (event) => {\n        console.log(\"Received data:\", event.data);\n      };\n    } else {\n      peerConnection.current.ondatachannel = (event) => {\n        dataChannel.current = event.channel;\n\n        dataChannel.current.onopen = () => {\n          console.log(\"Data channel opened\");\n        };\n\n        dataChannel.current.onclose = () => {\n          console.log(\"Data channel closed\");\n        };\n\n        dataChannel.current.onerror = (error) => {\n          console.error(\"Data channel error\", error);\n        };\n\n        dataChannel.current.onmessage = (event) => {\n          console.log(\"Received data:\", event.data);\n        };\n      };\n    }\n  };\n\n  const handleOffer = async (data) => {\n    if (!peerConnection.current) createPeerConnection(false);\n\n    await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n    const answer = await peerConnection.current.createAnswer();\n    await peerConnection.current.setLocalDescription(answer);\n\n    sendMessage({\n      type: 'answer',\n      answer,\n      to: data.from,\n      from: myId\n    });\n\n    setRemoteId(data.from);\n  };\n\n  const handleAnswer = async (data) => {\n    if (!peerConnection.current) return;\n\n    await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n  };\n\n  const handleICECandidate = async (data) => {\n    if (!peerConnection.current) return;\n\n    try {\n      await peerConnection.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n    } catch (err) {\n      console.error(\"Error adding received ice candidate\", err);\n    }\n  };\n\n  const startConnection = async () => {\n    if (!remoteId) return alert(\"Enter remote ID to connect\");\n\n    createPeerConnection(true);\n\n    const offer = await peerConnection.current.createOffer();\n    await peerConnection.current.setLocalDescription(offer);\n\n    sendMessage({\n      type: 'offer',\n      offer,\n      to: remoteId,\n      from: myId\n    });\n  };\n\n  const sendFile = (event) => {\n    const file = event.target.files[0];\n    if (!file || !dataChannel.current || dataChannel.current.readyState !== 'open') return;\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      dataChannel.current.send(reader.result);\n      alert(\"File sent!\");\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Your ID (share this):</h2>\n      <p>{myId}</p>\n      {qrValue && <QRCodeCanvas value={qrValue} size={150} />}\n\n      <div style={{ marginTop: 20 }}>\n        <input\n          placeholder=\"Enter remote peer ID\"\n          value={remoteId}\n          onChange={(e) => setRemoteId(e.target.value)}\n          style={{ width: 300, padding: 8 }}\n        />\n        <button onClick={startConnection} disabled={!myId}>Connect</button>\n      </div>\n\n      {connected && (\n        <div style={{ marginTop: 20 }}>\n          <h3>Connected! Send a file:</h3>\n          <input type=\"file\" onChange={sendFile} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}