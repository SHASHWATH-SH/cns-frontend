{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\n// src/Receiver.js\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Receiver = () => {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [receivedChunks, setReceivedChunks] = useState([]);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const connect = () => {\n    ws.current = new WebSocket('wss://localhost:8080');\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        type: 'join',\n        id: sessionId\n      }));\n    };\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'offer') {\n        pc.current = new RTCPeerConnection();\n        pc.current.ondatachannel = e => {\n          const dc = e.channel;\n          const chunks = [];\n          dc.onmessage = event => {\n            if (event.data === 'EOF') {\n              const blob = new Blob(chunks);\n              const link = document.createElement('a');\n              link.href = URL.createObjectURL(blob);\n              link.download = 'received_file';\n              link.click();\n            } else {\n              chunks.push(event.data);\n            }\n          };\n        };\n        pc.current.onicecandidate = e => {\n          if (e.candidate) {\n            ws.current.send(JSON.stringify({\n              type: 'candidate',\n              candidate: e.candidate\n            }));\n          }\n        };\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          type: 'answer',\n          answer\n        }));\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Session ID\",\n      value: sessionId,\n      onChange: e => setSessionId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Receiver, \"QjTTnpxCrSBqKwYhXcuVfwIwl48=\");\n_c = Receiver;\nexport default Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Receiver","_s","sessionId","setSessionId","receivedChunks","setReceivedChunks","ws","pc","connect","current","WebSocket","onopen","send","JSON","stringify","type","id","onmessage","event","data","parse","RTCPeerConnection","ondatachannel","e","dc","channel","chunks","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","push","onicecandidate","candidate","setRemoteDescription","RTCSessionDescription","offer","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["// src/Receiver.js\nimport React, { useState, useRef } from 'react';\n\nconst Receiver = () => {\n  const [sessionId, setSessionId] = useState('');\n  const [receivedChunks, setReceivedChunks] = useState([]);\n  const ws = useRef(null);\n  const pc = useRef(null);\n\n  const connect = () => {\n    ws.current = new WebSocket('wss://localhost:8080');\n\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({ type: 'join', id: sessionId }));\n    };\n\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'offer') {\n        pc.current = new RTCPeerConnection();\n\n        pc.current.ondatachannel = (e) => {\n          const dc = e.channel;\n          const chunks = [];\n\n          dc.onmessage = (event) => {\n            if (event.data === 'EOF') {\n              const blob = new Blob(chunks);\n              const link = document.createElement('a');\n              link.href = URL.createObjectURL(blob);\n              link.download = 'received_file';\n              link.click();\n            } else {\n              chunks.push(event.data);\n            }\n          };\n        };\n\n        pc.current.onicecandidate = (e) => {\n          if (e.candidate) {\n            ws.current.send(JSON.stringify({ type: 'candidate', candidate: e.candidate }));\n          }\n        };\n\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({ type: 'answer', answer }));\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    };\n  };\n\n  return (\n    <div>\n      <h2>Receiver</h2>\n      <input placeholder=\"Session ID\" value={sessionId} onChange={(e) => setSessionId(e.target.value)} />\n      <button onClick={connect}>Connect</button>\n    </div>\n  );\n};\n\nexport default Receiver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}