{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\n// src/Sender.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNAL_SERVER = 'wss://172.17.1.95:8080'; // ✅ must be WSS\nconst socket = new WebSocket(SIGNAL_SERVER);\nfunction Sender() {\n  _s();\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [receiverId, setReceiverId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        register: myId\n      }));\n      console.log('Sender connected. My ID:', myId);\n    };\n    ws.current.onmessage = async msg => {\n      const data = JSON.parse(msg.data);\n      if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(data.candidate);\n      }\n    };\n  }, [myId]);\n  const connectAndSend = async () => {\n    pc.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    dataChannel.current = pc.current.createDataChannel('file');\n    dataChannel.current.onopen = () => {\n      sendFile(file);\n    };\n    pc.current.onicecandidate = e => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({\n          from: myId,\n          to: receiverId,\n          type: 'candidate',\n          candidate: e.candidate\n        }));\n      }\n    };\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({\n      from: myId,\n      to: receiverId,\n      type: 'offer',\n      sdp: offer\n    }));\n  };\n  const sendFile = file => {\n    const chunkSize = 16 * 1024;\n    let offset = 0;\n    const reader = new FileReader();\n    reader.onload = e => {\n      dataChannel.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        console.log('File sent completely.');\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: myId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Receiver ID\",\n      value: receiverId,\n      onChange: e => setReceiverId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectAndSend,\n      disabled: !file || !receiverId,\n      children: \"Connect & Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"des7uVj0Hw0YQH4osGiUgNIH23A=\");\n_c = Sender;\nexport default Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SIGNAL_SERVER","socket","WebSocket","Sender","_s","myId","Math","random","toString","slice","receiverId","setReceiverId","file","setFile","ws","pc","dataChannel","current","onopen","send","JSON","stringify","register","console","log","onmessage","msg","data","parse","type","setRemoteDescription","RTCSessionDescription","sdp","addIceCandidate","candidate","connectAndSend","RTCPeerConnection","iceServers","urls","createDataChannel","sendFile","onicecandidate","e","from","to","offer","createOffer","setLocalDescription","chunkSize","offset","reader","FileReader","onload","target","result","byteLength","size","readSlice","o","readAsArrayBuffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","files","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["// src/Sender.js\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst SIGNAL_SERVER = 'wss://172.17.1.95:8080';  // ✅ must be WSS\nconst socket = new WebSocket(SIGNAL_SERVER);\n\n\n\nfunction Sender() {\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [receiverId, setReceiverId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({ register: myId }));\n      console.log('Sender connected. My ID:', myId);\n    };\n\n    ws.current.onmessage = async (msg) => {\n      const data = JSON.parse(msg.data);\n      if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(data.candidate);\n      }\n    };\n  }, [myId]);\n\n  const connectAndSend = async () => {\n    pc.current = new RTCPeerConnection({ iceServers: [{ urls: 'stun:stun.l.google.com:19302' }] });\n\n    dataChannel.current = pc.current.createDataChannel('file');\n    dataChannel.current.onopen = () => {\n      sendFile(file);\n    };\n\n    pc.current.onicecandidate = (e) => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({ from: myId, to: receiverId, type: 'candidate', candidate: e.candidate }));\n      }\n    };\n\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({ from: myId, to: receiverId, type: 'offer', sdp: offer }));\n  };\n\n  const sendFile = (file) => {\n    const chunkSize = 16 * 1024;\n    let offset = 0;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      dataChannel.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        console.log('File sent completely.');\n      }\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  return (\n    <div style={{ padding: 30 }}>\n      <h2>Sender Mode</h2>\n      <p>Your ID: <b>{myId}</b></p>\n      <input placeholder=\"Receiver ID\" value={receiverId} onChange={(e) => setReceiverId(e.target.value)} />\n      <br /><br />\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n      <br /><br />\n      <button onClick={connectAndSend} disabled={!file || !receiverId}>Connect & Send</button>\n    </div>\n  );\n}\n\nexport default Sender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}