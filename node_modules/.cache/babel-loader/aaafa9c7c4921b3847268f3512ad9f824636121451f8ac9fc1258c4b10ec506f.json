{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNAL_SERVER = 'ws://localhost:8080';\nfunction App() {\n  _s();\n  const [myId, setMyId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [partnerId, setPartnerId] = useState('');\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n  const receiveBuffer = useRef([]);\n  const receivedSize = useRef(0);\n  const fileSize = useRef(0);\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      console.log('Connected to signaling server');\n      ws.current.send(JSON.stringify({\n        register: myId\n      }));\n    };\n    ws.current.onmessage = async msg => {\n      const data = JSON.parse(msg.data);\n      if (data.to !== myId) return; // ignore if not for me\n\n      if (data.type === 'offer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          to: data.from,\n          from: myId,\n          type: 'answer',\n          sdp: pc.current.localDescription\n        }));\n      } else if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n      } else if (data.type === 'candidate') {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.error('Error adding ICE candidate', e);\n        }\n      }\n    };\n    ws.current.onclose = () => console.log('Disconnected from signaling server');\n    return () => {\n      ws.current.close();\n    };\n  }, [myId]);\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: 'stun:stun.l.google.com:19302'\n      }]\n    });\n    pc.current.onicecandidate = e => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({\n          to: partnerId,\n          from: myId,\n          type: 'candidate',\n          candidate: e.candidate\n        }));\n      }\n    };\n    pc.current.onconnectionstatechange = () => {\n      setConnectionState(pc.current.connectionState);\n      console.log('Connection state:', pc.current.connectionState);\n    };\n    if (file) {\n      // Sender flow\n      dataChannel.current = pc.current.createDataChannel('fileTransfer');\n      dataChannel.current.binaryType = 'arraybuffer';\n      dataChannel.current.onopen = () => {\n        console.log('Data channel open, sending file:', file.name);\n        sendFile(file);\n      };\n      dataChannel.current.onclose = () => {\n        console.log('Data channel closed');\n      };\n      pc.current.createOffer().then(offer => {\n        pc.current.setLocalDescription(offer);\n        ws.current.send(JSON.stringify({\n          to: partnerId,\n          from: myId,\n          type: 'offer',\n          sdp: offer\n        }));\n      });\n    } else {\n      // Receiver flow\n      pc.current.ondatachannel = event => {\n        dataChannel.current = event.channel;\n        dataChannel.current.binaryType = 'arraybuffer';\n        receiveBuffer.current = [];\n        receivedSize.current = 0;\n        dataChannel.current.onmessage = e => {\n          receiveBuffer.current.push(e.data);\n          receivedSize.current += e.data.byteLength;\n\n          // Check if complete file received\n          if (receivedSize.current === fileSize.current) {\n            const receivedBlob = new Blob(receiveBuffer.current);\n            downloadBlob(receivedBlob);\n            receiveBuffer.current = [];\n            receivedSize.current = 0;\n          }\n        };\n      };\n    }\n  };\n\n  // Save received blob as file\n  const downloadBlob = blob => {\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'received_file';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n  const sendFile = file => {\n    fileSize.current = file.size;\n    const chunkSize = 16 * 1024;\n    let offset = 0;\n    const reader = new FileReader();\n    reader.onload = e => {\n      dataChannel.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        console.log('File sent successfully');\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Your ID: \", myId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter partner ID\",\n      value: partnerId,\n      onChange: e => setPartnerId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      disabled: !!file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      disabled: !partnerId || file === null && !file,\n      children: \"Connect & Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connection status: \", connectionState]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"pwe/vL7j+AOP96uwh2iD0H/PKi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","SIGNAL_SERVER","App","_s","myId","setMyId","Math","random","toString","slice","partnerId","setPartnerId","connectionState","setConnectionState","file","setFile","ws","pc","dataChannel","receiveBuffer","receivedSize","fileSize","current","WebSocket","onopen","console","log","send","JSON","stringify","register","onmessage","msg","data","parse","to","type","setRemoteDescription","RTCSessionDescription","sdp","answer","createAnswer","setLocalDescription","from","localDescription","addIceCandidate","candidate","e","error","onclose","close","startConnection","RTCPeerConnection","iceServers","urls","onicecandidate","onconnectionstatechange","createDataChannel","binaryType","name","sendFile","createOffer","then","offer","ondatachannel","event","channel","push","byteLength","receivedBlob","Blob","downloadBlob","blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","size","chunkSize","offset","reader","FileReader","onload","target","result","readSlice","o","readAsArrayBuffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","files","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst SIGNAL_SERVER = 'ws://localhost:8080';\n\nfunction App() {\n  const [myId, setMyId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [partnerId, setPartnerId] = useState('');\n  const [connectionState, setConnectionState] = useState('disconnected');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n  const receiveBuffer = useRef([]);\n  const receivedSize = useRef(0);\n  const fileSize = useRef(0);\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n\n    ws.current.onopen = () => {\n      console.log('Connected to signaling server');\n      ws.current.send(JSON.stringify({ register: myId }));\n    };\n\n    ws.current.onmessage = async (msg) => {\n      const data = JSON.parse(msg.data);\n      if (data.to !== myId) return; // ignore if not for me\n\n      if (data.type === 'offer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({ to: data.from, from: myId, type: 'answer', sdp: pc.current.localDescription }));\n      } else if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n      } else if (data.type === 'candidate') {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.error('Error adding ICE candidate', e);\n        }\n      }\n    };\n\n    ws.current.onclose = () => console.log('Disconnected from signaling server');\n\n    return () => {\n      ws.current.close();\n    };\n  }, [myId]);\n\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection({\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    });\n\n    pc.current.onicecandidate = e => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({ to: partnerId, from: myId, type: 'candidate', candidate: e.candidate }));\n      }\n    };\n\n    pc.current.onconnectionstatechange = () => {\n      setConnectionState(pc.current.connectionState);\n      console.log('Connection state:', pc.current.connectionState);\n    };\n\n    if (file) {\n      // Sender flow\n      dataChannel.current = pc.current.createDataChannel('fileTransfer');\n      dataChannel.current.binaryType = 'arraybuffer';\n\n      dataChannel.current.onopen = () => {\n        console.log('Data channel open, sending file:', file.name);\n        sendFile(file);\n      };\n\n      dataChannel.current.onclose = () => {\n        console.log('Data channel closed');\n      };\n\n      pc.current.createOffer().then(offer => {\n        pc.current.setLocalDescription(offer);\n        ws.current.send(JSON.stringify({ to: partnerId, from: myId, type: 'offer', sdp: offer }));\n      });\n    } else {\n      // Receiver flow\n      pc.current.ondatachannel = event => {\n        dataChannel.current = event.channel;\n        dataChannel.current.binaryType = 'arraybuffer';\n        receiveBuffer.current = [];\n        receivedSize.current = 0;\n\n        dataChannel.current.onmessage = e => {\n          receiveBuffer.current.push(e.data);\n          receivedSize.current += e.data.byteLength;\n\n          // Check if complete file received\n          if (receivedSize.current === fileSize.current) {\n            const receivedBlob = new Blob(receiveBuffer.current);\n            downloadBlob(receivedBlob);\n            receiveBuffer.current = [];\n            receivedSize.current = 0;\n          }\n        };\n      };\n    }\n  };\n\n  // Save received blob as file\n  const downloadBlob = (blob) => {\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'received_file';\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n    URL.revokeObjectURL(url);\n  };\n\n  const sendFile = (file) => {\n    fileSize.current = file.size;\n\n    const chunkSize = 16 * 1024;\n    let offset = 0;\n\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      dataChannel.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        console.log('File sent successfully');\n      }\n    };\n\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Your ID: {myId}</h2>\n      <input placeholder=\"Enter partner ID\" value={partnerId} onChange={e => setPartnerId(e.target.value)} />\n      <br /><br />\n\n      <input type=\"file\" onChange={e => setFile(e.target.files[0])} disabled={!!file} />\n      <br /><br />\n\n      <button onClick={startConnection} disabled={!partnerId || (file === null && !file)}>Connect & Send</button>\n\n      <p>Connection status: {connectionState}</p>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}