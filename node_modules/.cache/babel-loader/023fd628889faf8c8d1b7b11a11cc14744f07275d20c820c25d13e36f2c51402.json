{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNALING_SERVER_URL = \"wss://localhost:8080\";\nfunction randomId() {\n  return Math.random().toString(36).substring(2, 8);\n}\nexport default function Sender() {\n  _s();\n  const [recId, setRecId] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const CHUNK_SIZE = 16 * 1024; // 16 KB chunks\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n    ws.current.onopen = () => console.log(\"Sender WebSocket connected\");\n    ws.current.onmessage = async event => {\n      const message = JSON.parse(event.data);\n      if (message.from !== recId) return; // ignore other senders\n\n      if (message.sdp) {\n        console.log(\"Got SDP from receiver\");\n        await pc.current.setRemoteDescription(message.sdp);\n        if (message.sdp.type === \"offer\") {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          sendMessage({\n            sdp: pc.current.localDescription,\n            to: recId\n          });\n        }\n      } else if (message.candidate) {\n        try {\n          await pc.current.addIceCandidate(message.candidate);\n          console.log(\"Added ICE candidate\");\n        } catch (e) {\n          console.error(\"Error adding ICE candidate\", e);\n        }\n      }\n    };\n    ws.current.onerror = e => console.error(\"WebSocket error\", e);\n    return () => {\n      ws.current.close();\n    };\n  }, [recId]);\n  function sendMessage(message) {\n    message.from = \"sender\"; // fixed sender id\n    ws.current.send(JSON.stringify(message));\n  }\n  function startConnection() {\n    pc.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n    dc.current.binaryType = \"arraybuffer\";\n    dc.current.onopen = () => {\n      console.log(\"Data channel open\");\n      if (file) {\n        sendFileInChunks(file);\n      }\n    };\n    dc.current.onclose = () => {\n      console.log(\"Data channel closed\");\n    };\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        sendMessage({\n          candidate: event.candidate,\n          to: recId\n        });\n      }\n    };\n    pc.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", pc.current.connectionState);\n    };\n    pc.current.createOffer().then(offer => pc.current.setLocalDescription(offer)).then(() => {\n      sendMessage({\n        sdp: pc.current.localDescription,\n        to: recId\n      });\n    });\n  }\n\n  // Chunk and send file via data channel\n  function sendFileInChunks(file) {\n    const reader = new FileReader();\n    let offset = 0;\n    reader.onload = e => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // Signal done and send file name\n        dc.current.send(JSON.stringify({\n          done: true,\n          fileName: file.name\n        }));\n        console.log(\"File sent fully\");\n      }\n    };\n    reader.onerror = err => {\n      console.error(\"File reading error\", err);\n    };\n    function readSlice(o) {\n      const slice = file.slice(o, o + CHUNK_SIZE);\n      reader.readAsArrayBuffer(slice);\n    }\n    readSlice(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter Receiver ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: recId,\n        onChange: e => setRecId(e.target.value),\n        placeholder: \"6-char ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      disabled: !recId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      disabled: !file || !recId,\n      children: \"Start Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"n7MZ8akBdCJGrzIHppYZU7STpyE=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SIGNALING_SERVER_URL","randomId","Math","random","toString","substring","Sender","_s","recId","setRecId","file","setFile","ws","pc","dc","CHUNK_SIZE","current","WebSocket","onopen","console","log","onmessage","event","message","JSON","parse","data","from","sdp","setRemoteDescription","type","answer","createAnswer","setLocalDescription","sendMessage","localDescription","to","candidate","addIceCandidate","e","error","onerror","close","send","stringify","startConnection","RTCPeerConnection","iceServers","urls","createDataChannel","binaryType","sendFileInChunks","onclose","onicecandidate","onconnectionstatechange","connectionState","createOffer","then","offer","reader","FileReader","offset","onload","target","result","byteLength","size","readSlice","done","fileName","name","err","o","slice","readAsArrayBuffer","children","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","files","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst SIGNALING_SERVER_URL = \"wss://localhost:8080\";\n\nfunction randomId() {\n  return Math.random().toString(36).substring(2, 8);\n}\n\nexport default function Sender() {\n  const [recId, setRecId] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  const CHUNK_SIZE = 16 * 1024; // 16 KB chunks\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n\n    ws.current.onopen = () => console.log(\"Sender WebSocket connected\");\n    ws.current.onmessage = async (event) => {\n      const message = JSON.parse(event.data);\n\n      if (message.from !== recId) return; // ignore other senders\n\n      if (message.sdp) {\n        console.log(\"Got SDP from receiver\");\n        await pc.current.setRemoteDescription(message.sdp);\n        if (message.sdp.type === \"offer\") {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          sendMessage({ sdp: pc.current.localDescription, to: recId });\n        }\n      } else if (message.candidate) {\n        try {\n          await pc.current.addIceCandidate(message.candidate);\n          console.log(\"Added ICE candidate\");\n        } catch (e) {\n          console.error(\"Error adding ICE candidate\", e);\n        }\n      }\n    };\n\n    ws.current.onerror = (e) => console.error(\"WebSocket error\", e);\n\n    return () => {\n      ws.current.close();\n    };\n  }, [recId]);\n\n  function sendMessage(message) {\n    message.from = \"sender\"; // fixed sender id\n    ws.current.send(JSON.stringify(message));\n  }\n\n  function startConnection() {\n    pc.current = new RTCPeerConnection({\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n    });\n\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n\n    dc.current.binaryType = \"arraybuffer\";\n\n    dc.current.onopen = () => {\n      console.log(\"Data channel open\");\n      if (file) {\n        sendFileInChunks(file);\n      }\n    };\n\n    dc.current.onclose = () => {\n      console.log(\"Data channel closed\");\n    };\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        sendMessage({ candidate: event.candidate, to: recId });\n      }\n    };\n\n    pc.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", pc.current.connectionState);\n    };\n\n    pc.current\n      .createOffer()\n      .then((offer) => pc.current.setLocalDescription(offer))\n      .then(() => {\n        sendMessage({ sdp: pc.current.localDescription, to: recId });\n      });\n  }\n\n  // Chunk and send file via data channel\n  function sendFileInChunks(file) {\n    const reader = new FileReader();\n    let offset = 0;\n\n    reader.onload = (e) => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // Signal done and send file name\n        dc.current.send(JSON.stringify({ done: true, fileName: file.name }));\n        console.log(\"File sent fully\");\n      }\n    };\n\n    reader.onerror = (err) => {\n      console.error(\"File reading error\", err);\n    };\n\n    function readSlice(o) {\n      const slice = file.slice(o, o + CHUNK_SIZE);\n      reader.readAsArrayBuffer(slice);\n    }\n\n    readSlice(0);\n  }\n\n  return (\n    <div>\n      <h2>Sender</h2>\n      <label>\n        Enter Receiver ID:\n        <input\n          value={recId}\n          onChange={(e) => setRecId(e.target.value)}\n          placeholder=\"6-char ID\"\n        />\n      </label>\n      <br />\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files[0])}\n        disabled={!recId}\n      />\n      <br />\n      <button onClick={startConnection} disabled={!file || !recId}>\n        Start Send\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}