{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { QRCodeSVG } from 'qrcode.react';\nimport { Editor } from '@monaco-editor/react';\nimport { generateKeyPair, exportPublicKey, importPublicKey, deriveAESKey, encryptData } from './cryptoUtils';\nimport { ICONS, RTC_CONFIG } from './constants';\nimport './Sender.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\nexport default function Sender() {\n  _s();\n  // State management\n  const [id] = useState(generateId());\n  const [receiverId, setReceiverId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [showQR, setShowQR] = useState(false);\n  const [shareableLink, setShareableLink] = useState('');\n  const [encryptedChunk, setEncryptedChunk] = useState(null);\n\n  // Refs for WebRTC and file handling\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const fileReader = useRef(null);\n  const aesKey = useRef(null);\n  const localKeyPair = useRef(null);\n\n  // Generate shareable link when component mounts\n  useEffect(() => {\n    const baseUrl = window.location.origin || 'https://192.168.168.36:3000';\n    setShareableLink(`${baseUrl}/receive/${id}`);\n  }, [id]);\n\n  // Socket connection setup\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false\n    });\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Connected as ${id}`);\n    });\n    socket.current.on('signal', async data => {\n      if (data.from !== receiverId) return;\n      try {\n        if (data.signal.publicKey) {\n          const receiverPub = await importPublicKey(data.signal.publicKey);\n          aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, receiverPub);\n        }\n        if (data.signal.sdp) {\n          await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n          if (data.signal.type === 'answer') {\n            setStatus('Connection established');\n          }\n        } else if (data.signal.candidate) {\n          await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n        }\n      } catch (error) {\n        setStatus(`Signal error: ${error.message}`);\n        console.error('Signal error:', error);\n      }\n    });\n    socket.current.on('error', error => {\n      setStatus(`Socket error: ${error.message}`);\n      console.error('Socket error:', error);\n    });\n    return () => socket.current.disconnect();\n  }, [id, receiverId]);\n  const startConnection = async () => {\n    try {\n      pc.current = new RTCPeerConnection(RTC_CONFIG);\n\n      // Generate encryption keys\n      localKeyPair.current = await generateKeyPair();\n      const myPub = await exportPublicKey(localKeyPair.current.publicKey);\n      socket.current.emit('signal', {\n        target: receiverId,\n        signal: {\n          publicKey: myPub\n        }\n      });\n\n      // Create data channel\n      dc.current = pc.current.createDataChannel('fileTransfer', {\n        ordered: true,\n        maxRetransmits: 3\n      });\n      dc.current.binaryType = 'arraybuffer';\n\n      // Data channel event handlers\n      dc.current.onopen = () => setStatus('Connected. Ready to send files.');\n      dc.current.onclose = () => setStatus('Connection closed');\n      dc.current.onerror = error => setStatus(`Error: ${error.message}`);\n\n      // ICE candidate handling\n      pc.current.onicecandidate = event => {\n        if (event.candidate) {\n          socket.current.emit('signal', {\n            target: receiverId,\n            signal: {\n              candidate: event.candidate\n            }\n          });\n        }\n      };\n\n      // Connection state monitoring\n      pc.current.onconnectionstatechange = () => {\n        setStatus(`Connection state: ${pc.current.connectionState}`);\n      };\n\n      // Create and send offer\n      const offer = await pc.current.createOffer();\n      await pc.current.setLocalDescription(offer);\n      socket.current.emit('signal', {\n        target: receiverId,\n        signal: pc.current.localDescription\n      });\n    } catch (error) {\n      setStatus(`Connection error: ${error.message}`);\n      console.error('Connection error:', error);\n    }\n  };\n  const sendFile = async file => {\n    if (!dc.current || dc.current.readyState !== 'open') {\n      setStatus('No connection to receiver');\n      return;\n    }\n    const chunkSize = 16384;\n    let offset = 0;\n    fileReader.current = new FileReader();\n    fileReader.current.onload = async e => {\n      try {\n        const chunk = e.target.result;\n        const {\n          encrypted,\n          iv\n        } = await encryptData(aesKey.current, chunk);\n\n        // Convert ArrayBuffer to Array for display\n        const ivArray = Array.from(iv);\n        const encryptedArray = Array.from(new Uint8Array(encrypted).slice(0, 32));\n        setEncryptedChunk({\n          fileName: file.name,\n          chunkNumber: Math.ceil(offset / chunkSize),\n          totalChunks: Math.ceil(file.size / chunkSize),\n          originalSize: chunk.byteLength,\n          encryptedSize: encrypted.byteLength,\n          iv: ivArray,\n          encryptionMethod: 'AES-GCM',\n          chunk: encryptedArray,\n          details: {\n            timestamp: new Date().toISOString(),\n            chunkPreviewSize: 32,\n            ivSize: iv.byteLength,\n            fullChunkSize: encrypted.byteLength,\n            mimeType: file.type || 'application/octet-stream',\n            encryption: {\n              method: 'AES-GCM',\n              keySize: '256 bits',\n              ivLength: `${iv.byteLength * 8} bits`\n            }\n          }\n        });\n        dc.current.send(iv);\n        dc.current.send(encrypted);\n        offset += chunk.byteLength;\n        const progress = (offset / file.size * 100).toFixed(1);\n        setStatus(`Sending: ${progress}%`);\n        if (offset < file.size) {\n          readSlice(offset);\n        } else {\n          dc.current.send(JSON.stringify({\n            done: true,\n            fileName: file.name,\n            totalSize: file.size\n          }));\n          setStatus('File sent successfully');\n        }\n      } catch (error) {\n        setStatus(`Error sending file: ${error.message}`);\n        console.error('File sending error:', error);\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.current.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sender-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sender-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Secure File Sender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sender-id-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sender-id\",\n          children: [\"ID: \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sender-button icon-button tooltip\",\n          onClick: () => navigator.clipboard.writeText(id),\n          \"data-tooltip\": \"Copy ID\",\n          children: ICONS.CLIPBOARD\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sender-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connection-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"sender-input\",\n            placeholder: \"Enter Receiver ID\",\n            value: receiverId,\n            onChange: e => setReceiverId(e.target.value.toUpperCase())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sender-button\",\n            onClick: startConnection,\n            disabled: !receiverId,\n            children: \"Connect to Receiver\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sharing-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"sender-button secondary\",\n            onClick: () => setShowQR(!showQR),\n            children: showQR ? 'Hide QR Code' : 'Show QR Code'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), showQR && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"qr-container\",\n            children: [/*#__PURE__*/_jsxDEV(QRCodeSVG, {\n              value: shareableLink,\n              size: 200,\n              level: \"H\",\n              includeMargin: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"shareable-link\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: shareableLink,\n                readOnly: true,\n                className: \"link-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"sender-button small tooltip\",\n                onClick: () => navigator.clipboard.writeText(shareableLink),\n                \"data-tooltip\": \"Copy Link\",\n                children: ICONS.CLIPBOARD\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"file-input-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"file-input\",\n              onChange: e => e.target.files[0] && sendFile(e.target.files[0]),\n              disabled: !dc.current || dc.current.readyState !== 'open'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), dc.current && dc.current.readyState === 'open' ? `${ICONS.ATTACHMENT} Click to select a file` : `${ICONS.WARNING} Connect to a receiver first`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), encryptedChunk && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"encryption-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Encryption Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"encryption-summary\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Method:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: encryptedChunk.encryptionMethod\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Progress:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [encryptedChunk.chunkNumber, \"/\", encryptedChunk.totalChunks]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Original Size:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [encryptedChunk.originalSize, \" bytes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Encrypted Size:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [encryptedChunk.encryptedSize, \" bytes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-container\",\n            children: /*#__PURE__*/_jsxDEV(Editor, {\n              height: \"300px\",\n              defaultLanguage: \"json\",\n              theme: \"vs-dark\",\n              value: JSON.stringify(encryptedChunk, null, 2),\n              options: {\n                readOnly: true,\n                minimap: {\n                  enabled: false\n                },\n                scrollBeyondLastLine: false,\n                fontSize: 14,\n                wordWrap: 'on',\n                lineNumbers: 'on',\n                renderLineHighlight: 'all',\n                scrollbar: {\n                  vertical: 'visible',\n                  horizontal: 'visible'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: status.includes('Sending:') && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${parseFloat(status.match(/[\\d.]+/)[0])}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-container\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status-text\",\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"DR5/uB3uNVMONoq6HyN/3JGTGLE=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","QRCodeSVG","Editor","generateKeyPair","exportPublicKey","importPublicKey","deriveAESKey","encryptData","ICONS","RTC_CONFIG","jsxDEV","_jsxDEV","generateId","Math","random","toString","slice","toUpperCase","Sender","_s","id","receiverId","setReceiverId","status","setStatus","showQR","setShowQR","shareableLink","setShareableLink","encryptedChunk","setEncryptedChunk","pc","socket","dc","fileReader","aesKey","localKeyPair","baseUrl","window","location","origin","current","transports","rejectUnauthorized","on","emit","data","from","signal","publicKey","receiverPub","privateKey","sdp","setRemoteDescription","RTCSessionDescription","type","candidate","addIceCandidate","RTCIceCandidate","error","message","console","disconnect","startConnection","RTCPeerConnection","myPub","target","createDataChannel","ordered","maxRetransmits","binaryType","onopen","onclose","onerror","onicecandidate","event","onconnectionstatechange","connectionState","offer","createOffer","setLocalDescription","localDescription","sendFile","file","readyState","chunkSize","offset","FileReader","onload","e","chunk","result","encrypted","iv","ivArray","Array","encryptedArray","Uint8Array","fileName","name","chunkNumber","ceil","totalChunks","size","originalSize","byteLength","encryptedSize","encryptionMethod","details","timestamp","Date","toISOString","chunkPreviewSize","ivSize","fullChunkSize","mimeType","encryption","method","keySize","ivLength","send","progress","toFixed","readSlice","JSON","stringify","done","totalSize","o","readAsArrayBuffer","className","children","_jsxFileName","lineNumber","columnNumber","onClick","navigator","clipboard","writeText","CLIPBOARD","placeholder","value","onChange","disabled","level","includeMargin","readOnly","files","ATTACHMENT","WARNING","height","defaultLanguage","theme","options","minimap","enabled","scrollBeyondLastLine","fontSize","wordWrap","lineNumbers","renderLineHighlight","scrollbar","vertical","horizontal","includes","style","width","parseFloat","match","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { QRCodeSVG } from 'qrcode.react';\nimport { Editor } from '@monaco-editor/react';\nimport {\n  generateKeyPair,\n  exportPublicKey,\n  importPublicKey,\n  deriveAESKey,\n  encryptData\n} from './cryptoUtils';\nimport { ICONS, RTC_CONFIG } from './constants';\nimport './Sender.css';\n\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\n\nexport default function Sender() {\n  // State management\n  const [id] = useState(generateId());\n  const [receiverId, setReceiverId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const [showQR, setShowQR] = useState(false);\n  const [shareableLink, setShareableLink] = useState('');\n  const [encryptedChunk, setEncryptedChunk] = useState(null);\n  \n  // Refs for WebRTC and file handling\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const fileReader = useRef(null);\n  const aesKey = useRef(null);\n  const localKeyPair = useRef(null);\n\n  // Generate shareable link when component mounts\n  useEffect(() => {\n    const baseUrl = window.location.origin || 'https://192.168.168.36:3000';\n    setShareableLink(`${baseUrl}/receive/${id}`);\n  }, [id]);\n\n  // Socket connection setup\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false\n    });\n\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Connected as ${id}`);\n    });\n\n    socket.current.on('signal', async (data) => {\n      if (data.from !== receiverId) return;\n\n      try {\n        if (data.signal.publicKey) {\n          const receiverPub = await importPublicKey(data.signal.publicKey);\n          aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, receiverPub);\n        }\n\n        if (data.signal.sdp) {\n          await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n          if (data.signal.type === 'answer') {\n            setStatus('Connection established');\n          }\n        } else if (data.signal.candidate) {\n          await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n        }\n      } catch (error) {\n        setStatus(`Signal error: ${error.message}`);\n        console.error('Signal error:', error);\n      }\n    });\n\n    socket.current.on('error', (error) => {\n      setStatus(`Socket error: ${error.message}`);\n      console.error('Socket error:', error);\n    });\n\n    return () => socket.current.disconnect();\n  }, [id, receiverId]);\n\n  const startConnection = async () => {\n    try {\n      pc.current = new RTCPeerConnection(RTC_CONFIG);\n\n      // Generate encryption keys\n      localKeyPair.current = await generateKeyPair();\n      const myPub = await exportPublicKey(localKeyPair.current.publicKey);\n      \n      socket.current.emit('signal', {\n        target: receiverId,\n        signal: { publicKey: myPub }\n      });\n\n      // Create data channel\n      dc.current = pc.current.createDataChannel('fileTransfer', {\n        ordered: true,\n        maxRetransmits: 3\n      });\n\n      dc.current.binaryType = 'arraybuffer';\n      \n      // Data channel event handlers\n      dc.current.onopen = () => setStatus('Connected. Ready to send files.');\n      dc.current.onclose = () => setStatus('Connection closed');\n      dc.current.onerror = (error) => setStatus(`Error: ${error.message}`);\n\n      // ICE candidate handling\n      pc.current.onicecandidate = (event) => {\n        if (event.candidate) {\n          socket.current.emit('signal', {\n            target: receiverId,\n            signal: { candidate: event.candidate }\n          });\n        }\n      };\n\n      // Connection state monitoring\n      pc.current.onconnectionstatechange = () => {\n        setStatus(`Connection state: ${pc.current.connectionState}`);\n      };\n\n      // Create and send offer\n      const offer = await pc.current.createOffer();\n      await pc.current.setLocalDescription(offer);\n      socket.current.emit('signal', {\n        target: receiverId,\n        signal: pc.current.localDescription\n      });\n\n    } catch (error) {\n      setStatus(`Connection error: ${error.message}`);\n      console.error('Connection error:', error);\n    }\n  };\n\n  const sendFile = async (file) => {\n    if (!dc.current || dc.current.readyState !== 'open') {\n      setStatus('No connection to receiver');\n      return;\n    }\n\n    const chunkSize = 16384;\n    let offset = 0;\n    fileReader.current = new FileReader();\n\n    fileReader.current.onload = async (e) => {\n      try {\n        const chunk = e.target.result;\n        const { encrypted, iv } = await encryptData(aesKey.current, chunk);\n        \n        // Convert ArrayBuffer to Array for display\n        const ivArray = Array.from(iv);\n        const encryptedArray = Array.from(new Uint8Array(encrypted).slice(0, 32));\n\n        setEncryptedChunk({\n          fileName: file.name,\n          chunkNumber: Math.ceil(offset / chunkSize),\n          totalChunks: Math.ceil(file.size / chunkSize),\n          originalSize: chunk.byteLength,\n          encryptedSize: encrypted.byteLength,\n          iv: ivArray,\n          encryptionMethod: 'AES-GCM',\n          chunk: encryptedArray,\n          details: {\n            timestamp: new Date().toISOString(),\n            chunkPreviewSize: 32,\n            ivSize: iv.byteLength,\n            fullChunkSize: encrypted.byteLength,\n            mimeType: file.type || 'application/octet-stream',\n            encryption: {\n              method: 'AES-GCM',\n              keySize: '256 bits',\n              ivLength: `${iv.byteLength * 8} bits`\n            }\n          }\n        });\n\n        dc.current.send(iv);\n        dc.current.send(encrypted);\n\n        offset += chunk.byteLength;\n        const progress = ((offset / file.size) * 100).toFixed(1);\n        setStatus(`Sending: ${progress}%`);\n\n        if (offset < file.size) {\n          readSlice(offset);\n        } else {\n          dc.current.send(JSON.stringify({ \n            done: true, \n            fileName: file.name,\n            totalSize: file.size \n          }));\n          setStatus('File sent successfully');\n        }\n      } catch (error) {\n        setStatus(`Error sending file: ${error.message}`);\n        console.error('File sending error:', error);\n      }\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.current.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  return (\n    <div className=\"sender-container\">\n      <div className=\"sender-header\">\n        <h2>Secure File Sender</h2>\n        <div className=\"sender-id-container\">\n          <span className=\"sender-id\">ID: {id}</span>\n          <button \n            className=\"sender-button icon-button tooltip\"\n            onClick={() => navigator.clipboard.writeText(id)}\n            data-tooltip=\"Copy ID\"\n          >\n            {ICONS.CLIPBOARD}\n          </button>\n        </div>\n      </div>\n\n      <div className=\"sender-controls\">\n        <div className=\"connection-section\">\n          <div className=\"input-group\">\n            <input\n              type=\"text\"\n              className=\"sender-input\"\n              placeholder=\"Enter Receiver ID\"\n              value={receiverId}\n              onChange={e => setReceiverId(e.target.value.toUpperCase())}\n            />\n            <button\n              className=\"sender-button\"\n              onClick={startConnection}\n              disabled={!receiverId}\n            >\n              Connect to Receiver\n            </button>\n          </div>\n\n          <div className=\"sharing-options\">\n            <button \n              className=\"sender-button secondary\"\n              onClick={() => setShowQR(!showQR)}\n            >\n              {showQR ? 'Hide QR Code' : 'Show QR Code'}\n            </button>\n            \n            {showQR && (\n              <div className=\"qr-container\">\n                <QRCodeSVG \n                  value={shareableLink} \n                  size={200}\n                  level=\"H\"\n                  includeMargin={true}\n                />\n                <div className=\"shareable-link\">\n                  <input \n                    type=\"text\" \n                    value={shareableLink} \n                    readOnly \n                    className=\"link-input\"\n                  />\n                  <button\n                    className=\"sender-button small tooltip\"\n                    onClick={() => navigator.clipboard.writeText(shareableLink)}\n                    data-tooltip=\"Copy Link\"\n                  >\n                    {ICONS.CLIPBOARD}\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"file-section\">\n          <div className=\"file-input-container\">\n            <label className=\"file-input-label\">\n              <input\n                type=\"file\"\n                className=\"file-input\"\n                onChange={e => e.target.files[0] && sendFile(e.target.files[0])}\n                disabled={!dc.current || dc.current.readyState !== 'open'}\n              />\n              {dc.current && dc.current.readyState === 'open' \n                ? `${ICONS.ATTACHMENT} Click to select a file`\n                : `${ICONS.WARNING} Connect to a receiver first`}\n            </label>\n          </div>\n\n          {encryptedChunk && (\n            <div className=\"encryption-details\">\n              <h3>Encryption Information</h3>\n              <div className=\"encryption-summary\">\n                <div className=\"info-item\">\n                  <span>Method:</span> \n                  <span>{encryptedChunk.encryptionMethod}</span>\n                </div>\n                <div className=\"info-item\">\n                  <span>Progress:</span> \n                  <span>{encryptedChunk.chunkNumber}/{encryptedChunk.totalChunks}</span>\n                </div>\n                <div className=\"info-item\">\n                  <span>Original Size:</span> \n                  <span>{encryptedChunk.originalSize} bytes</span>\n                </div>\n                <div className=\"info-item\">\n                  <span>Encrypted Size:</span> \n                  <span>{encryptedChunk.encryptedSize} bytes</span>\n                </div>\n              </div>\n              <div className=\"editor-container\">\n                <Editor\n                  height=\"300px\"\n                  defaultLanguage=\"json\"\n                  theme=\"vs-dark\"\n                  value={JSON.stringify(encryptedChunk, null, 2)}\n                  options={{\n                    readOnly: true,\n                    minimap: { enabled: false },\n                    scrollBeyondLastLine: false,\n                    fontSize: 14,\n                    wordWrap: 'on',\n                    lineNumbers: 'on',\n                    renderLineHighlight: 'all',\n                    scrollbar: {\n                      vertical: 'visible',\n                      horizontal: 'visible'\n                    }\n                  }}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"status-section\">\n          <div className=\"progress-container\">\n            {status.includes('Sending:') && (\n              <div \n                className=\"progress-bar\"\n                style={{\n                  width: `${parseFloat(status.match(/[\\d.]+/)[0])}%`\n                }}\n              />\n            )}\n          </div>\n          <div className=\"status-container\">\n            <span className=\"status-text\">{status}</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}