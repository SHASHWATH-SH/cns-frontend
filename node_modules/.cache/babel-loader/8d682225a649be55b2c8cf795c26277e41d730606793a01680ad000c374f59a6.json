{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport QRCode from 'qrcode.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [myId, setMyId] = useState('');\n  const [targetId, setTargetId] = useState('');\n  const [connection, setConnection] = useState(null);\n  const fileRef = useRef();\n  useEffect(() => {\n    socket.emit('register');\n    socket.on('registered', id => {\n      setMyId(id);\n    });\n    socket.on('signal', async ({\n      from,\n      data\n    }) => {\n      if (data.type === 'offer') {\n        const peer = createPeer(false, from);\n        await peer.setRemoteDescription(data);\n        const answer = await peer.createAnswer();\n        await peer.setLocalDescription(answer);\n        socket.emit('signal', {\n          targetId: from,\n          data: peer.localDescription\n        });\n        setConnection(peer);\n      } else if (data.type === 'answer') {\n        await connection.setRemoteDescription(data);\n      } else if (data.candidate) {\n        connection.addIceCandidate(data);\n      }\n    });\n  }, [connection]);\n  function createPeer(isInitiator, toId) {\n    const peer = new RTCPeerConnection();\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit('signal', {\n          targetId: toId,\n          data: {\n            candidate: e.candidate\n          }\n        });\n      }\n    };\n    peer.ondatachannel = e => {\n      e.channel.onmessage = e => {\n        const blob = new Blob([e.data]);\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'file';\n        a.click();\n      };\n    };\n    const channel = peer.createDataChannel(\"file\");\n    if (isInitiator) {\n      peer.createOffer().then(offer => {\n        peer.setLocalDescription(offer);\n        socket.emit('signal', {\n          targetId: toId,\n          data: offer\n        });\n      });\n    }\n    setConnection(peer);\n    return peer;\n  }\n  const connect = () => createPeer(true, targetId);\n  const sendFile = () => {\n    const file = fileRef.current.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const channel = connection.createDataChannel(\"file\");\n      channel.onopen = () => {\n        channel.send(reader.result);\n      };\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Secure P2P File Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: myId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n      value: myId,\n      size: 128\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: targetId,\n      onChange: e => setTargetId(e.target.value),\n      placeholder: \"Enter Peer ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connect,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendFile,\n      children: \"Send File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cqrlqqav0vd1Dolqn7hA79VY25w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","QRCode","jsxDEV","_jsxDEV","socket","App","_s","myId","setMyId","targetId","setTargetId","connection","setConnection","fileRef","emit","on","id","from","data","type","peer","createPeer","setRemoteDescription","answer","createAnswer","setLocalDescription","localDescription","candidate","addIceCandidate","isInitiator","toId","RTCPeerConnection","onicecandidate","e","ondatachannel","channel","onmessage","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","createDataChannel","createOffer","then","offer","connect","sendFile","file","current","files","reader","FileReader","onload","onopen","send","result","readAsArrayBuffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","size","onChange","target","placeholder","onClick","ref","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport io from 'socket.io-client';\nimport QRCode from 'qrcode.react';\n\nconst socket = io('http://localhost:5000');\n\nfunction App() {\n  const [myId, setMyId] = useState('');\n  const [targetId, setTargetId] = useState('');\n  const [connection, setConnection] = useState(null);\n  const fileRef = useRef();\n\n  useEffect(() => {\n    socket.emit('register');\n\n    socket.on('registered', id => {\n      setMyId(id);\n    });\n\n    socket.on('signal', async ({ from, data }) => {\n      if (data.type === 'offer') {\n        const peer = createPeer(false, from);\n        await peer.setRemoteDescription(data);\n        const answer = await peer.createAnswer();\n        await peer.setLocalDescription(answer);\n        socket.emit('signal', { targetId: from, data: peer.localDescription });\n        setConnection(peer);\n      } else if (data.type === 'answer') {\n        await connection.setRemoteDescription(data);\n      } else if (data.candidate) {\n        connection.addIceCandidate(data);\n      }\n    });\n  }, [connection]);\n\n  function createPeer(isInitiator, toId) {\n    const peer = new RTCPeerConnection();\n    peer.onicecandidate = e => {\n      if (e.candidate) {\n        socket.emit('signal', { targetId: toId, data: { candidate: e.candidate } });\n      }\n    };\n    peer.ondatachannel = e => {\n      e.channel.onmessage = e => {\n        const blob = new Blob([e.data]);\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'file';\n        a.click();\n      };\n    };\n\n    const channel = peer.createDataChannel(\"file\");\n    if (isInitiator) {\n      peer.createOffer().then(offer => {\n        peer.setLocalDescription(offer);\n        socket.emit('signal', { targetId: toId, data: offer });\n      });\n    }\n    setConnection(peer);\n    return peer;\n  }\n\n  const connect = () => createPeer(true, targetId);\n\n  const sendFile = () => {\n    const file = fileRef.current.files[0];\n    const reader = new FileReader();\n    reader.onload = () => {\n      const channel = connection.createDataChannel(\"file\");\n      channel.onopen = () => {\n        channel.send(reader.result);\n      };\n    };\n    reader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Secure P2P File Transfer</h2>\n      <p>Your ID: <b>{myId}</b></p>\n      <QRCode value={myId} size={128} />\n      <br /><br />\n      <input value={targetId} onChange={e => setTargetId(e.target.value)} placeholder=\"Enter Peer ID\" />\n      <button onClick={connect}>Connect</button>\n      <br /><br />\n      <input type=\"file\" ref={fileRef} />\n      <button onClick={sendFile}>Send File</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}