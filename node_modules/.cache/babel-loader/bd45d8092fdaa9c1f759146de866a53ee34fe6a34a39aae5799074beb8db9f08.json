{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNALING_SERVER = \"ws://localhost:8080\";\nexport default function Sender() {\n  _s();\n  const [receiverId, setReceiverId] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const CHUNK_SIZE = 16 * 1024;\n  useEffect(() => {\n    if (!receiverId) return;\n    ws.current = new WebSocket(SIGNALING_SERVER);\n    ws.current.onopen = () => {\n      console.log(\"Sender WebSocket connected\");\n    };\n    ws.current.onmessage = async event => {\n      if (typeof event.data !== \"string\") {\n        console.warn(\"Non-string message on signaling WS ignored\");\n        return;\n      }\n      let message;\n      try {\n        message = JSON.parse(event.data);\n      } catch {\n        console.warn(\"Invalid JSON on signaling WS ignored\");\n        return;\n      }\n      if (message.from !== receiverId) return;\n      if (message.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(message.sdp));\n      } else if (message.candidate) {\n        try {\n          await pc.current.addIceCandidate(new RTCIceCandidate(message.candidate));\n        } catch (e) {\n          console.error(\"Error adding ICE candidate:\", e);\n        }\n      }\n    };\n    ws.current.onerror = err => console.error(\"WebSocket error:\", err);\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n    };\n  }, [receiverId]);\n  function sendMessage(msg) {\n    msg.from = \"sender\";\n    ws.current.send(JSON.stringify(msg));\n  }\n  function startTransfer() {\n    if (!receiverId) {\n      alert(\"Enter Receiver ID\");\n      return;\n    }\n    if (!file) {\n      alert(\"Select a file\");\n      return;\n    }\n    pc.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n    dc.current.binaryType = \"arraybuffer\";\n    dc.current.onopen = () => {\n      console.log(\"DataChannel open, starting file transfer\");\n      sendFileInChunks(file);\n    };\n    dc.current.onclose = () => console.log(\"DataChannel closed\");\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        sendMessage({\n          candidate: event.candidate,\n          to: receiverId\n        });\n      }\n    };\n    pc.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", pc.current.connectionState);\n    };\n    pc.current.createOffer().then(offer => {\n      pc.current.setLocalDescription(offer);\n      sendMessage({\n        sdp: offer,\n        to: receiverId\n      });\n    });\n  }\n  function sendFileInChunks(file) {\n    const reader = new FileReader();\n    let offset = 0;\n    reader.onload = e => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // signal done\n        dc.current.send(JSON.stringify({\n          done: true,\n          fileName: file.name\n        }));\n        console.log(\"File sent completely\");\n      }\n    };\n    reader.onerror = e => {\n      console.error(\"FileReader error\", e);\n    };\n    function readSlice(o) {\n      const slice = file.slice(o, o + CHUNK_SIZE);\n      reader.readAsArrayBuffer(slice);\n    }\n    readSlice(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Receiver ID:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: receiverId,\n        onChange: e => setReceiverId(e.target.value),\n        maxLength: 6,\n        placeholder: \"6-char ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      disabled: !receiverId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startTransfer,\n      disabled: !file || !receiverId,\n      children: \"Send File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"aT3dquMaIB1gFe60Z3Ozw+yhqDk=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SIGNALING_SERVER","Sender","_s","receiverId","setReceiverId","file","setFile","ws","pc","dc","CHUNK_SIZE","current","WebSocket","onopen","console","log","onmessage","event","data","warn","message","JSON","parse","from","sdp","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","e","error","onerror","err","close","sendMessage","msg","send","stringify","startTransfer","alert","RTCPeerConnection","iceServers","urls","createDataChannel","binaryType","sendFileInChunks","onclose","onicecandidate","to","onconnectionstatechange","connectionState","createOffer","then","offer","setLocalDescription","reader","FileReader","offset","onload","target","result","byteLength","size","readSlice","done","fileName","name","o","slice","readAsArrayBuffer","style","padding","children","_jsxFileName","lineNumber","columnNumber","type","value","onChange","maxLength","placeholder","files","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst SIGNALING_SERVER = \"ws://localhost:8080\";\n\nexport default function Sender() {\n  const [receiverId, setReceiverId] = useState(\"\");\n  const [file, setFile] = useState(null);\n\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  const CHUNK_SIZE = 16 * 1024;\n\n  useEffect(() => {\n    if (!receiverId) return;\n\n    ws.current = new WebSocket(SIGNALING_SERVER);\n\n    ws.current.onopen = () => {\n      console.log(\"Sender WebSocket connected\");\n    };\n\n    ws.current.onmessage = async (event) => {\n      if (typeof event.data !== \"string\") {\n        console.warn(\"Non-string message on signaling WS ignored\");\n        return;\n      }\n\n      let message;\n      try {\n        message = JSON.parse(event.data);\n      } catch {\n        console.warn(\"Invalid JSON on signaling WS ignored\");\n        return;\n      }\n\n      if (message.from !== receiverId) return;\n\n      if (message.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(message.sdp));\n      } else if (message.candidate) {\n        try {\n          await pc.current.addIceCandidate(new RTCIceCandidate(message.candidate));\n        } catch (e) {\n          console.error(\"Error adding ICE candidate:\", e);\n        }\n      }\n    };\n\n    ws.current.onerror = (err) => console.error(\"WebSocket error:\", err);\n\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n    };\n  }, [receiverId]);\n\n  function sendMessage(msg) {\n    msg.from = \"sender\";\n    ws.current.send(JSON.stringify(msg));\n  }\n\n  function startTransfer() {\n    if (!receiverId) {\n      alert(\"Enter Receiver ID\");\n      return;\n    }\n    if (!file) {\n      alert(\"Select a file\");\n      return;\n    }\n\n    pc.current = new RTCPeerConnection({\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n    });\n\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n    dc.current.binaryType = \"arraybuffer\";\n\n    dc.current.onopen = () => {\n      console.log(\"DataChannel open, starting file transfer\");\n      sendFileInChunks(file);\n    };\n\n    dc.current.onclose = () => console.log(\"DataChannel closed\");\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        sendMessage({ candidate: event.candidate, to: receiverId });\n      }\n    };\n\n    pc.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", pc.current.connectionState);\n    };\n\n    pc.current.createOffer().then((offer) => {\n      pc.current.setLocalDescription(offer);\n      sendMessage({ sdp: offer, to: receiverId });\n    });\n  }\n\n  function sendFileInChunks(file) {\n    const reader = new FileReader();\n    let offset = 0;\n\n    reader.onload = (e) => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // signal done\n        dc.current.send(JSON.stringify({ done: true, fileName: file.name }));\n        console.log(\"File sent completely\");\n      }\n    };\n\n    reader.onerror = (e) => {\n      console.error(\"FileReader error\", e);\n    };\n\n    function readSlice(o) {\n      const slice = file.slice(o, o + CHUNK_SIZE);\n      reader.readAsArrayBuffer(slice);\n    }\n\n    readSlice(0);\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Sender</h2>\n      <label>\n        Receiver ID:{\" \"}\n        <input\n          type=\"text\"\n          value={receiverId}\n          onChange={(e) => setReceiverId(e.target.value)}\n          maxLength={6}\n          placeholder=\"6-char ID\"\n        />\n      </label>\n      <br />\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files[0])}\n        disabled={!receiverId}\n      />\n      <br />\n      <button onClick={startTransfer} disabled={!file || !receiverId}>\n        Send File\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}