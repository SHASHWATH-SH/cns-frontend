{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './Sender.css';\nimport { QRCode } from 'qrcode.react';\nimport { generateKeyPair, exportPublicKey, importPublicKey, deriveAESKey, encryptData } from './cryptoUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\nexport default function Sender() {\n  _s();\n  const [id] = useState(generateId());\n  const [receiverId, setReceiverId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const baseUrl = window.location.origin;\n  const shareUrl = `${baseUrl}/receiver?id=${id}`;\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const fileReader = useRef(null);\n  const aesKey = useRef(null);\n  const localKeyPair = useRef(null);\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080');\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n    socket.current.on('signal', async data => {\n      if (data.from !== receiverId) return;\n      if (data.signal.publicKey) {\n        const receiverPub = await importPublicKey(data.signal.publicKey);\n        aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, receiverPub);\n      }\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: receiverId,\n            signal: pc.current.localDescription\n          });\n        }\n      } else if (data.signal.candidate) {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n      }\n    });\n    return () => socket.current.disconnect();\n  }, [id, receiverId]);\n  const startConnection = async () => {\n    pc.current = new RTCPeerConnection();\n    localKeyPair.current = await generateKeyPair();\n    const pub = await exportPublicKey(localKeyPair.current.publicKey);\n    socket.current.emit('signal', {\n      target: receiverId,\n      signal: {\n        publicKey: pub\n      }\n    });\n    dc.current = pc.current.createDataChannel('fileTransfer');\n    dc.current.onopen = () => setStatus('Data channel open. Ready to send file.');\n    dc.current.onclose = () => setStatus('Data channel closed.');\n    dc.current.onerror = error => console.error('Data channel error:', error);\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: receiverId,\n          signal: {\n            candidate: event.candidate\n          }\n        });\n      }\n    };\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    socket.current.emit('signal', {\n      target: receiverId,\n      signal: pc.current.localDescription\n    });\n    setStatus('Offer sent.');\n  };\n  const sendFile = file => {\n    const chunkSize = 16384;\n    let offset = 0;\n    fileReader.current = new FileReader();\n    fileReader.current.onload = async e => {\n      const chunk = e.target.result;\n      const {\n        encrypted,\n        iv\n      } = await encryptData(aesKey.current, chunk);\n      dc.current.send(iv);\n      dc.current.send(encrypted);\n      offset += chunk.byteLength;\n      setStatus(`Sending: ${(offset / file.size * 100).toFixed(2)}%`);\n      if (offset < file.size) readSlice(offset);else dc.current.send(JSON.stringify({\n        done: true,\n        fileName: file.name\n      }));\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.current.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sender-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sender-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Secure File Sender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sender-id\",\n        children: [\"ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sender-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"sender-input\",\n          placeholder: \"Enter Receiver ID\",\n          value: receiverId,\n          onChange: e => setReceiverId(e.target.value.toUpperCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sender-button\",\n        onClick: startConnection,\n        disabled: !receiverId,\n        children: \"Connect to Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"file-input-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"file-input\",\n            onChange: e => sendFile(e.target.files[0]),\n            disabled: !dc.current || dc.current.readyState !== 'open'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), dc.current && dc.current.readyState === 'open' ? 'Click to select a file' : 'Connect to a receiver first']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-indicator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"0svoxiKwBn1yawiQgexHh6hSwlE=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","QRCode","generateKeyPair","exportPublicKey","importPublicKey","deriveAESKey","encryptData","jsxDEV","_jsxDEV","generateId","Math","random","toString","slice","toUpperCase","Sender","_s","id","receiverId","setReceiverId","status","setStatus","baseUrl","window","location","origin","shareUrl","pc","socket","dc","fileReader","aesKey","localKeyPair","current","on","emit","data","from","signal","publicKey","receiverPub","privateKey","sdp","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","setLocalDescription","target","localDescription","candidate","addIceCandidate","RTCIceCandidate","disconnect","startConnection","RTCPeerConnection","pub","createDataChannel","onopen","onclose","onerror","error","console","onicecandidate","event","offer","createOffer","sendFile","file","chunkSize","offset","FileReader","onload","e","chunk","result","encrypted","iv","send","byteLength","size","toFixed","readSlice","JSON","stringify","done","fileName","name","o","readAsArrayBuffer","className","children","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","onClick","disabled","files","readyState","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport './Sender.css';\nimport { QRCode } from 'qrcode.react';\n\nimport {\n  generateKeyPair,\n  exportPublicKey,\n  importPublicKey,\n  deriveAESKey,\n  encryptData\n} from './cryptoUtils';\n\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\n\nexport default function Sender() {\n  const [id] = useState(generateId());\n  const [receiverId, setReceiverId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const baseUrl = window.location.origin;\n  const shareUrl = `${baseUrl}/receiver?id=${id}`;\n\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const fileReader = useRef(null);\n  const aesKey = useRef(null);\n  const localKeyPair = useRef(null);\n\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080');\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n\n    socket.current.on('signal', async (data) => {\n      if (data.from !== receiverId) return;\n\n      if (data.signal.publicKey) {\n        const receiverPub = await importPublicKey(data.signal.publicKey);\n        aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, receiverPub);\n      }\n\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: receiverId,\n            signal: pc.current.localDescription,\n          });\n        }\n      } else if (data.signal.candidate) {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n      }\n    });\n\n    return () => socket.current.disconnect();\n  }, [id, receiverId]);\n\n  const startConnection = async () => {\n    pc.current = new RTCPeerConnection();\n    localKeyPair.current = await generateKeyPair();\n    const pub = await exportPublicKey(localKeyPair.current.publicKey);\n\n    socket.current.emit('signal', {\n      target: receiverId,\n      signal: { publicKey: pub },\n    });\n\n    dc.current = pc.current.createDataChannel('fileTransfer');\n\n    dc.current.onopen = () => setStatus('Data channel open. Ready to send file.');\n    dc.current.onclose = () => setStatus('Data channel closed.');\n    dc.current.onerror = (error) => console.error('Data channel error:', error);\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: receiverId,\n          signal: { candidate: event.candidate },\n        });\n      }\n    };\n\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    socket.current.emit('signal', {\n      target: receiverId,\n      signal: pc.current.localDescription,\n    });\n    setStatus('Offer sent.');\n  };\n\n  const sendFile = (file) => {\n    const chunkSize = 16384;\n    let offset = 0;\n    fileReader.current = new FileReader();\n\n    fileReader.current.onload = async (e) => {\n      const chunk = e.target.result;\n      const { encrypted, iv } = await encryptData(aesKey.current, chunk);\n      dc.current.send(iv);\n      dc.current.send(encrypted);\n\n      offset += chunk.byteLength;\n      setStatus(`Sending: ${((offset / file.size) * 100).toFixed(2)}%`);\n\n      if (offset < file.size) readSlice(offset);\n      else dc.current.send(JSON.stringify({ done: true, fileName: file.name }));\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.current.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  return (\n    <div className=\"sender-container\">\n      <div className=\"sender-header\">\n        <h2>Secure File Sender</h2>\n        <span className=\"sender-id\">ID: {id}</span>\n      </div>\n\n      <div className=\"sender-controls\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className=\"sender-input\"\n            placeholder=\"Enter Receiver ID\"\n            value={receiverId}\n            onChange={e => setReceiverId(e.target.value.toUpperCase())}\n          />\n        </div>\n\n        <button\n          className=\"sender-button\"\n          onClick={startConnection}\n          disabled={!receiverId}\n        >\n          Connect to Receiver\n        </button>\n\n        <div className=\"file-input-container\">\n          <label className=\"file-input-label\">\n            <input\n              type=\"file\"\n              className=\"file-input\"\n              onChange={e => sendFile(e.target.files[0])}\n              disabled={!dc.current || dc.current.readyState !== 'open'}\n            />\n            {dc.current && dc.current.readyState === 'open' \n              ? 'Click to select a file'\n              : 'Connect to a receiver first'}\n          </label>\n        </div>\n\n        <div className=\"status-container\">\n          <div className=\"status-indicator\"></div>\n          <span>{status}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}