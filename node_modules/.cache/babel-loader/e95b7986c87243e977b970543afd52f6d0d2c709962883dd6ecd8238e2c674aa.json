{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNAL_SERVER = 'ws://localhost:8080';\nexport default function Receiver() {\n  _s();\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [senderId, setSenderId] = useState('');\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const receivedBuffers = useRef([]);\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        register: myId\n      }));\n      console.log('Receiver connected. ID:', myId);\n    };\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'offer') {\n        setSenderId(data.from);\n        pc.current = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n        pc.current.ondatachannel = event => {\n          dc.current = event.channel;\n          dc.current.binaryType = 'arraybuffer';\n          receivedBuffers.current = [];\n          dc.current.onmessage = event => {\n            receivedBuffers.current.push(event.data);\n          };\n          dc.current.onclose = () => {\n            const blob = new Blob(receivedBuffers.current);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'received_file';\n            document.body.appendChild(a);\n            a.click();\n            a.remove();\n            URL.revokeObjectURL(url);\n            console.log('File download triggered');\n          };\n        };\n        pc.current.onicecandidate = e => {\n          if (e.candidate) {\n            ws.current.send(JSON.stringify({\n              from: myId,\n              to: data.from,\n              type: 'candidate',\n              candidate: e.candidate\n            }));\n          }\n        };\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          from: myId,\n          to: data.from,\n          type: 'answer',\n          sdp: answer\n        }));\n      } else if (data.type === 'candidate') {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.warn('Failed to add ICE candidate:', e);\n        }\n      }\n    };\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n    };\n  }, [myId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: myId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for sender...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), senderId && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected with: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: senderId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"TITDj8/TfN2s16ymqmNNLNHAwj8=\");\n_c = Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SIGNAL_SERVER","Receiver","_s","myId","Math","random","toString","slice","senderId","setSenderId","ws","pc","dc","receivedBuffers","current","WebSocket","onopen","send","JSON","stringify","register","console","log","onmessage","event","data","parse","type","from","RTCPeerConnection","iceServers","urls","ondatachannel","channel","binaryType","push","onclose","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","onicecandidate","e","candidate","to","setRemoteDescription","RTCSessionDescription","sdp","answer","createAnswer","setLocalDescription","addIceCandidate","warn","close","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst SIGNAL_SERVER = 'ws://localhost:8080';\n\nexport default function Receiver() {\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [senderId, setSenderId] = useState('');\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const receivedBuffers = useRef([]);\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({ register: myId }));\n      console.log('Receiver connected. ID:', myId);\n    };\n\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n\n      if (data.type === 'offer') {\n        setSenderId(data.from);\n\n        pc.current = new RTCPeerConnection({\n          iceServers: [{ urls: 'stun:stun.l.google.com:19302' }],\n        });\n\n        pc.current.ondatachannel = (event) => {\n          dc.current = event.channel;\n          dc.current.binaryType = 'arraybuffer';\n          receivedBuffers.current = [];\n\n          dc.current.onmessage = (event) => {\n            receivedBuffers.current.push(event.data);\n          };\n\n          dc.current.onclose = () => {\n            const blob = new Blob(receivedBuffers.current);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'received_file';\n            document.body.appendChild(a);\n            a.click();\n            a.remove();\n            URL.revokeObjectURL(url);\n            console.log('File download triggered');\n          };\n        };\n\n        pc.current.onicecandidate = (e) => {\n          if (e.candidate) {\n            ws.current.send(\n              JSON.stringify({\n                from: myId,\n                to: data.from,\n                type: 'candidate',\n                candidate: e.candidate,\n              })\n            );\n          }\n        };\n\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n\n        ws.current.send(\n          JSON.stringify({\n            from: myId,\n            to: data.from,\n            type: 'answer',\n            sdp: answer,\n          })\n        );\n      } else if (data.type === 'candidate') {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.warn('Failed to add ICE candidate:', e);\n        }\n      }\n    };\n\n    return () => {\n      ws.current.close();\n      if (pc.current) pc.current.close();\n    };\n  }, [myId]);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Receiver</h2>\n      <p>Your ID: <b>{myId}</b></p>\n      <p>Waiting for sender...</p>\n      {senderId && <p>Connected with: <b>{senderId}</b></p>}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAG,qBAAqB;AAE3C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,CAAC,GAAGN,QAAQ,CAAC,MAAMO,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACrE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,EAAE,GAAGd,MAAM,CAAC,IAAI,CAAC;EACvB,MAAMe,EAAE,GAAGf,MAAM,CAAC,IAAI,CAAC;EACvB,MAAMgB,EAAE,GAAGhB,MAAM,CAAC,IAAI,CAAC;EACvB,MAAMiB,eAAe,GAAGjB,MAAM,CAAC,EAAE,CAAC;EAElCD,SAAS,CAAC,MAAM;IACde,EAAE,CAACI,OAAO,GAAG,IAAIC,SAAS,CAACf,aAAa,CAAC;IAEzCU,EAAE,CAACI,OAAO,CAACE,MAAM,GAAG,MAAM;MACxBN,EAAE,CAACI,OAAO,CAACG,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEC,QAAQ,EAAEjB;MAAK,CAAC,CAAC,CAAC;MACnDkB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEnB,IAAI,CAAC;IAC9C,CAAC;IAEDO,EAAE,CAACI,OAAO,CAACS,SAAS,GAAG,MAAOC,KAAK,IAAK;MACtC,MAAMC,IAAI,GAAGP,IAAI,CAACQ,KAAK,CAACF,KAAK,CAACC,IAAI,CAAC;MAEnC,IAAIA,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;QACzBlB,WAAW,CAACgB,IAAI,CAACG,IAAI,CAAC;QAEtBjB,EAAE,CAACG,OAAO,GAAG,IAAIe,iBAAiB,CAAC;UACjCC,UAAU,EAAE,CAAC;YAAEC,IAAI,EAAE;UAA+B,CAAC;QACvD,CAAC,CAAC;QAEFpB,EAAE,CAACG,OAAO,CAACkB,aAAa,GAAIR,KAAK,IAAK;UACpCZ,EAAE,CAACE,OAAO,GAAGU,KAAK,CAACS,OAAO;UAC1BrB,EAAE,CAACE,OAAO,CAACoB,UAAU,GAAG,aAAa;UACrCrB,eAAe,CAACC,OAAO,GAAG,EAAE;UAE5BF,EAAE,CAACE,OAAO,CAACS,SAAS,GAAIC,KAAK,IAAK;YAChCX,eAAe,CAACC,OAAO,CAACqB,IAAI,CAACX,KAAK,CAACC,IAAI,CAAC;UAC1C,CAAC;UAEDb,EAAE,CAACE,OAAO,CAACsB,OAAO,GAAG,MAAM;YACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACzB,eAAe,CAACC,OAAO,CAAC;YAC9C,MAAMyB,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;YACrC,MAAMK,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;YACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;YACZG,CAAC,CAACI,QAAQ,GAAG,eAAe;YAC5BH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,CAAC,CAAC;YAC5BA,CAAC,CAACO,KAAK,CAAC,CAAC;YACTP,CAAC,CAACQ,MAAM,CAAC,CAAC;YACVV,GAAG,CAACW,eAAe,CAACZ,GAAG,CAAC;YACxBlB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;UACxC,CAAC;QACH,CAAC;QAEDX,EAAE,CAACG,OAAO,CAACsC,cAAc,GAAIC,CAAC,IAAK;UACjC,IAAIA,CAAC,CAACC,SAAS,EAAE;YACf5C,EAAE,CAACI,OAAO,CAACG,IAAI,CACbC,IAAI,CAACC,SAAS,CAAC;cACbS,IAAI,EAAEzB,IAAI;cACVoD,EAAE,EAAE9B,IAAI,CAACG,IAAI;cACbD,IAAI,EAAE,WAAW;cACjB2B,SAAS,EAAED,CAAC,CAACC;YACf,CAAC,CACH,CAAC;UACH;QACF,CAAC;QAED,MAAM3C,EAAE,CAACG,OAAO,CAAC0C,oBAAoB,CAAC,IAAIC,qBAAqB,CAAChC,IAAI,CAACiC,GAAG,CAAC,CAAC;QAC1E,MAAMC,MAAM,GAAG,MAAMhD,EAAE,CAACG,OAAO,CAAC8C,YAAY,CAAC,CAAC;QAC9C,MAAMjD,EAAE,CAACG,OAAO,CAAC+C,mBAAmB,CAACF,MAAM,CAAC;QAE5CjD,EAAE,CAACI,OAAO,CAACG,IAAI,CACbC,IAAI,CAACC,SAAS,CAAC;UACbS,IAAI,EAAEzB,IAAI;UACVoD,EAAE,EAAE9B,IAAI,CAACG,IAAI;UACbD,IAAI,EAAE,QAAQ;UACd+B,GAAG,EAAEC;QACP,CAAC,CACH,CAAC;MACH,CAAC,MAAM,IAAIlC,IAAI,CAACE,IAAI,KAAK,WAAW,EAAE;QACpC,IAAI;UACF,MAAMhB,EAAE,CAACG,OAAO,CAACgD,eAAe,CAACrC,IAAI,CAAC6B,SAAS,CAAC;QAClD,CAAC,CAAC,OAAOD,CAAC,EAAE;UACVhC,OAAO,CAAC0C,IAAI,CAAC,8BAA8B,EAAEV,CAAC,CAAC;QACjD;MACF;IACF,CAAC;IAED,OAAO,MAAM;MACX3C,EAAE,CAACI,OAAO,CAACkD,KAAK,CAAC,CAAC;MAClB,IAAIrD,EAAE,CAACG,OAAO,EAAEH,EAAE,CAACG,OAAO,CAACkD,KAAK,CAAC,CAAC;IACpC,CAAC;EACH,CAAC,EAAE,CAAC7D,IAAI,CAAC,CAAC;EAEV,oBACEJ,OAAA;IAAKkE,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1BpE,OAAA;MAAAoE,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBxE,OAAA;MAAAoE,QAAA,GAAG,WAAS,eAAApE,OAAA;QAAAoE,QAAA,EAAIhE;MAAI;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC7BxE,OAAA;MAAAoE,QAAA,EAAG;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC3B/D,QAAQ,iBAAIT,OAAA;MAAAoE,QAAA,GAAG,kBAAgB,eAAApE,OAAA;QAAAoE,QAAA,EAAI3D;MAAQ;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEV;AAACrE,EAAA,CAjGuBD,QAAQ;AAAAuE,EAAA,GAARvE,QAAQ;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}