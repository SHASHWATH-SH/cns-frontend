{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNALING_SERVER_URL = \"wss://localhost:8080\";\nexport default function Sender() {\n  _s();\n  const [recId, setRecId] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const CHUNK_SIZE = 16 * 1024;\n  useEffect(() => {\n    if (!recId) return;\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n    ws.current.onopen = () => console.log(\"Sender WebSocket connected\");\n    ws.current.onmessage = async event => {\n      // Only parse JSON if string\n      if (typeof event.data === \"string\") {\n        let message;\n        try {\n          message = JSON.parse(event.data);\n        } catch {\n          console.warn(\"Received non-JSON message on signaling WS, ignoring\");\n          return;\n        }\n        if (message.from !== recId) return;\n        if (message.sdp) {\n          await pc.current.setRemoteDescription(message.sdp);\n          if (message.sdp.type === \"offer\") {\n            const answer = await pc.current.createAnswer();\n            await pc.current.setLocalDescription(answer);\n            sendMessage({\n              sdp: pc.current.localDescription,\n              to: recId\n            });\n          }\n        } else if (message.candidate) {\n          try {\n            await pc.current.addIceCandidate(message.candidate);\n          } catch (e) {\n            console.error(\"Error adding ICE candidate:\", e);\n          }\n        }\n      } else {\n        console.warn(\"Received non-string message on signaling WS, ignoring\");\n      }\n    };\n    ws.current.onerror = e => console.error(\"WebSocket error:\", e);\n    return () => {\n      ws.current.close();\n    };\n  }, [recId]);\n  function sendMessage(message) {\n    message.from = \"sender\";\n    ws.current.send(JSON.stringify(message));\n  }\n  function startConnection() {\n    if (!file || !recId) {\n      alert(\"Set Receiver ID and select a file first\");\n      return;\n    }\n    pc.current = new RTCPeerConnection({\n      iceServers: [{\n        urls: \"stun:stun.l.google.com:19302\"\n      }]\n    });\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n    dc.current.binaryType = \"arraybuffer\";\n    dc.current.onopen = () => {\n      console.log(\"Data channel open\");\n      sendFileInChunks(file);\n    };\n    dc.current.onclose = () => console.log(\"Data channel closed\");\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        sendMessage({\n          candidate: event.candidate,\n          to: recId\n        });\n      }\n    };\n    pc.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", pc.current.connectionState);\n    };\n    pc.current.createOffer().then(offer => pc.current.setLocalDescription(offer)).then(() => {\n      sendMessage({\n        sdp: pc.current.localDescription,\n        to: recId\n      });\n    });\n  }\n  function sendFileInChunks(file) {\n    const reader = new FileReader();\n    let offset = 0;\n    reader.onload = e => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // Signal done with filename\n        dc.current.send(JSON.stringify({\n          done: true,\n          fileName: file.name\n        }));\n        console.log(\"File sent completely\");\n      }\n    };\n    reader.onerror = err => {\n      console.error(\"File reading error\", err);\n    };\n    function readSlice(o) {\n      const slice = file.slice(o, o + CHUNK_SIZE);\n      reader.readAsArrayBuffer(slice);\n    }\n    readSlice(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Receiver ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: recId,\n        onChange: e => setRecId(e.target.value),\n        placeholder: \"6-char ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      disabled: !recId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      disabled: !file || !recId,\n      children: \"Start Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"n7MZ8akBdCJGrzIHppYZU7STpyE=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","SIGNALING_SERVER_URL","Sender","_s","recId","setRecId","file","setFile","ws","pc","dc","CHUNK_SIZE","current","WebSocket","onopen","console","log","onmessage","event","data","message","JSON","parse","warn","from","sdp","setRemoteDescription","type","answer","createAnswer","setLocalDescription","sendMessage","localDescription","to","candidate","addIceCandidate","e","error","onerror","close","send","stringify","startConnection","alert","RTCPeerConnection","iceServers","urls","createDataChannel","binaryType","sendFileInChunks","onclose","onicecandidate","onconnectionstatechange","connectionState","createOffer","then","offer","reader","FileReader","offset","onload","target","result","byteLength","size","readSlice","done","fileName","name","err","o","slice","readAsArrayBuffer","children","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","files","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nconst SIGNALING_SERVER_URL = \"wss://localhost:8080\";\n\nexport default function Sender() {\n  const [recId, setRecId] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  const CHUNK_SIZE = 16 * 1024;\n\n  useEffect(() => {\n    if (!recId) return;\n\n    ws.current = new WebSocket(SIGNALING_SERVER_URL);\n\n    ws.current.onopen = () => console.log(\"Sender WebSocket connected\");\n\n    ws.current.onmessage = async (event) => {\n      // Only parse JSON if string\n      if (typeof event.data === \"string\") {\n        let message;\n        try {\n          message = JSON.parse(event.data);\n        } catch {\n          console.warn(\"Received non-JSON message on signaling WS, ignoring\");\n          return;\n        }\n\n        if (message.from !== recId) return;\n\n        if (message.sdp) {\n          await pc.current.setRemoteDescription(message.sdp);\n          if (message.sdp.type === \"offer\") {\n            const answer = await pc.current.createAnswer();\n            await pc.current.setLocalDescription(answer);\n            sendMessage({ sdp: pc.current.localDescription, to: recId });\n          }\n        } else if (message.candidate) {\n          try {\n            await pc.current.addIceCandidate(message.candidate);\n          } catch (e) {\n            console.error(\"Error adding ICE candidate:\", e);\n          }\n        }\n      } else {\n        console.warn(\"Received non-string message on signaling WS, ignoring\");\n      }\n    };\n\n    ws.current.onerror = (e) => console.error(\"WebSocket error:\", e);\n\n    return () => {\n      ws.current.close();\n    };\n  }, [recId]);\n\n  function sendMessage(message) {\n    message.from = \"sender\";\n    ws.current.send(JSON.stringify(message));\n  }\n\n  function startConnection() {\n    if (!file || !recId) {\n      alert(\"Set Receiver ID and select a file first\");\n      return;\n    }\n\n    pc.current = new RTCPeerConnection({\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n    });\n\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n    dc.current.binaryType = \"arraybuffer\";\n\n    dc.current.onopen = () => {\n      console.log(\"Data channel open\");\n      sendFileInChunks(file);\n    };\n\n    dc.current.onclose = () => console.log(\"Data channel closed\");\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        sendMessage({ candidate: event.candidate, to: recId });\n      }\n    };\n\n    pc.current.onconnectionstatechange = () => {\n      console.log(\"Connection state:\", pc.current.connectionState);\n    };\n\n    pc.current\n      .createOffer()\n      .then((offer) => pc.current.setLocalDescription(offer))\n      .then(() => {\n        sendMessage({ sdp: pc.current.localDescription, to: recId });\n      });\n  }\n\n  function sendFileInChunks(file) {\n    const reader = new FileReader();\n    let offset = 0;\n\n    reader.onload = (e) => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // Signal done with filename\n        dc.current.send(JSON.stringify({ done: true, fileName: file.name }));\n        console.log(\"File sent completely\");\n      }\n    };\n\n    reader.onerror = (err) => {\n      console.error(\"File reading error\", err);\n    };\n\n    function readSlice(o) {\n      const slice = file.slice(o, o + CHUNK_SIZE);\n      reader.readAsArrayBuffer(slice);\n    }\n\n    readSlice(0);\n  }\n\n  return (\n    <div>\n      <h2>Sender</h2>\n      <label>\n        Receiver ID:\n        <input\n          type=\"text\"\n          value={recId}\n          onChange={(e) => setRecId(e.target.value)}\n          placeholder=\"6-char ID\"\n        />\n      </label>\n      <br />\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files[0])}\n        disabled={!recId}\n      />\n      <br />\n      <button onClick={startConnection} disabled={!file || !recId}>\n        Start Transfer\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}