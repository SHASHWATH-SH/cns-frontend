{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst pendingSignals = useRef([]);\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\nexport default function Receiver() {\n  _s();\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const receivedBuffers = useRef([]);\n  useEffect(() => {\n    socket.current = io('https://172.17.3.195:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false\n    });\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n    socket.current.on('signal', async data => {\n      console.log(\"Signal received:\", data);\n      if (!pc.current) {\n        console.warn(\"pc.current not ready. Queuing signal.\");\n        pendingSignals.current.push(data);\n        return;\n      }\n      await handleSignal(data);\n    });\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n  const handleSignal = async data => {\n    if (data.from !== senderId) return;\n    if (data.signal.sdp) {\n      await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n      if (data.signal.type === 'offer') {\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: pc.current.localDescription\n        });\n      }\n    } else if (data.signal.candidate) {\n      try {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n      } catch (e) {\n        console.error('Error adding ICE candidate:', e);\n      }\n    }\n  };\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection();\n    // Process pending signals\n    pendingSignals.current.forEach(signal => handleSignal(signal));\n    pendingSignals.current = [];\n    pc.current.ondatachannel = event => {\n      dc.current = event.channel;\n      dc.current.onopen = () => setStatus('Data channel open. Ready to receive file.');\n      dc.current.onmessage = event => {\n        if (typeof event.data === 'string') {\n          try {\n            const msg = JSON.parse(event.data);\n            if (msg.done) {\n              setStatus('File received completely. Saving...');\n              saveFile(msg.fileName || 'received_file');\n            }\n          } catch {\n            // Not JSON, ignore\n          }\n        } else {\n          receivedBuffers.current.push(event.data);\n          setStatus(`Receiving... (${receivedBuffers.current.length} chunks)`);\n        }\n      };\n      dc.current.onclose = () => setStatus('Data channel closed.');\n    };\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: {\n            candidate: event.candidate\n          }\n        });\n      }\n    };\n  };\n  const saveFile = filename => {\n    const blob = new Blob(receivedBuffers.current);\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }, 100);\n    setStatus('File saved locally!');\n    receivedBuffers.current = [];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Receiver (Your ID: \", id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Sender ID\",\n      value: senderId,\n      onChange: e => setSenderId(e.target.value.toUpperCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      disabled: !senderId,\n      children: \"Connect\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"yi9WmbZDj8P4wTF3siVKAnL3TmI=\");\n_c = Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","jsxDEV","_jsxDEV","pendingSignals","generateId","Math","random","toString","slice","toUpperCase","Receiver","_s","id","senderId","setSenderId","status","setStatus","pc","socket","dc","receivedBuffers","current","transports","rejectUnauthorized","on","emit","data","console","log","warn","push","handleSignal","disconnect","from","signal","sdp","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","setLocalDescription","target","localDescription","candidate","addIceCandidate","RTCIceCandidate","e","error","startConnection","RTCPeerConnection","forEach","ondatachannel","event","channel","onopen","onmessage","msg","JSON","parse","done","saveFile","fileName","length","onclose","onicecandidate","filename","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","children","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nconst pendingSignals = useRef([]);\n\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\n\nexport default function Receiver() {\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const receivedBuffers = useRef([]);\n\n  useEffect(() => {\n    socket.current = io('https://172.17.3.195:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false,\n    });\n\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id );\n      setStatus(`Registered as ${id}`);\n    });\n\nsocket.current.on('signal', async (data) => {\n  console.log(\"Signal received:\", data);\n\n  if (!pc.current) {\n    console.warn(\"pc.current not ready. Queuing signal.\");\n    pendingSignals.current.push(data);\n    return;\n  }\n\n  await handleSignal(data);\n});\n\n\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n\n  const handleSignal = async (data) => {\n  if (data.from !== senderId) return;\n\n  if (data.signal.sdp) {\n    await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n    if (data.signal.type === 'offer') {\n      const answer = await pc.current.createAnswer();\n      await pc.current.setLocalDescription(answer);\n      socket.current.emit('signal', {\n        target: senderId,\n        signal: pc.current.localDescription,\n      });\n    }\n  } else if (data.signal.candidate) {\n    try {\n      await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n    } catch (e) {\n      console.error('Error adding ICE candidate:', e);\n    }\n  }\n};\n\n  const startConnection = () => {\n    pc.current = new RTCPeerConnection();\n// Process pending signals\npendingSignals.current.forEach(signal => handleSignal(signal));\npendingSignals.current = [];\n\n    pc.current.ondatachannel = (event) => {\n      dc.current = event.channel;\n\n      dc.current.onopen = () => setStatus('Data channel open. Ready to receive file.');\n\n      dc.current.onmessage = (event) => {\n        if (typeof event.data === 'string') {\n          try {\n            const msg = JSON.parse(event.data);\n            if (msg.done) {\n              setStatus('File received completely. Saving...');\n              saveFile(msg.fileName || 'received_file');\n            }\n          } catch {\n            // Not JSON, ignore\n          }\n        } else {\n          receivedBuffers.current.push(event.data);\n          setStatus(`Receiving... (${receivedBuffers.current.length} chunks)`);\n        }\n      };\n\n      dc.current.onclose = () => setStatus('Data channel closed.');\n    };\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: { candidate: event.candidate },\n        });\n      }\n    };\n  };\n\n  const saveFile = (filename) => {\n    const blob = new Blob(receivedBuffers.current);\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = filename;\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n    }, 100);\n    setStatus('File saved locally!');\n    receivedBuffers.current = [];\n  };\n\n  return (\n    <div>\n      <h2>Receiver (Your ID: {id})</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Sender ID\"\n        value={senderId}\n        onChange={(e) => setSenderId(e.target.value.toUpperCase())}\n      />\n      <button onClick={startConnection} disabled={!senderId}>Connect</button>\n      <p>Status: {status}</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}