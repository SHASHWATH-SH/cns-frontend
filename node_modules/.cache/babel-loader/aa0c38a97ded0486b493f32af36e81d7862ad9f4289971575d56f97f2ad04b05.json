{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\n// src/Sender.js\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sender = () => {\n  _s();\n  const [sessionId, setSessionId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const connect = () => {\n    ws.current = new WebSocket('wss://localhost:8080');\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        type: 'join',\n        id: sessionId\n      }));\n    };\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    };\n    pc.current = new RTCPeerConnection();\n    pc.current.onicecandidate = e => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({\n          type: 'candidate',\n          candidate: e.candidate\n        }));\n      }\n    };\n    dc.current = pc.current.createDataChannel('file');\n    dc.current.onopen = () => {\n      console.log('Data channel open, sending file...');\n      sendFile();\n    };\n    const sendFile = () => {\n      const chunkSize = 16384;\n      const reader = new FileReader();\n      let offset = 0;\n      reader.onload = e => {\n        dc.current.send(e.target.result);\n        offset += e.target.result.byteLength;\n        if (offset < file.size) {\n          readSlice(offset);\n        } else {\n          dc.current.send('EOF');\n        }\n      };\n      const readSlice = o => {\n        const slice = file.slice(offset, o + chunkSize);\n        reader.readAsArrayBuffer(slice);\n      };\n      readSlice(0);\n    };\n    pc.current.createOffer().then(offer => {\n      pc.current.setLocalDescription(offer);\n      ws.current.send(JSON.stringify({\n        type: 'offer',\n        offer,\n        id: sessionId\n      }));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Session ID\",\n      value: sessionId,\n      onChange: e => setSessionId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connect,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(Sender, \"W7cUKpuhqq1fIYACJvyK9mXdD+w=\");\n_c = Sender;\nexport default Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Sender","_s","sessionId","setSessionId","file","setFile","ws","pc","dc","connect","current","WebSocket","onopen","send","JSON","stringify","type","id","onmessage","event","data","parse","setRemoteDescription","RTCSessionDescription","answer","addIceCandidate","RTCIceCandidate","candidate","RTCPeerConnection","onicecandidate","e","createDataChannel","console","log","sendFile","chunkSize","reader","FileReader","offset","onload","target","result","byteLength","size","readSlice","o","slice","readAsArrayBuffer","createOffer","then","offer","setLocalDescription","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","files","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["// src/Sender.js\nimport React, { useState, useRef } from 'react';\n\nconst Sender = () => {\n  const [sessionId, setSessionId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  const connect = () => {\n    ws.current = new WebSocket('wss://localhost:8080');\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({ type: 'join', id: sessionId }));\n    };\n\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'answer') {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    };\n\n    pc.current = new RTCPeerConnection();\n\n    pc.current.onicecandidate = (e) => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({ type: 'candidate', candidate: e.candidate }));\n      }\n    };\n\n    dc.current = pc.current.createDataChannel('file');\n    dc.current.onopen = () => {\n      console.log('Data channel open, sending file...');\n      sendFile();\n    };\n\n    const sendFile = () => {\n      const chunkSize = 16384;\n      const reader = new FileReader();\n      let offset = 0;\n\n      reader.onload = (e) => {\n        dc.current.send(e.target.result);\n        offset += e.target.result.byteLength;\n\n        if (offset < file.size) {\n          readSlice(offset);\n        } else {\n          dc.current.send('EOF');\n        }\n      };\n\n      const readSlice = (o) => {\n        const slice = file.slice(offset, o + chunkSize);\n        reader.readAsArrayBuffer(slice);\n      };\n\n      readSlice(0);\n    };\n\n    pc.current.createOffer().then((offer) => {\n      pc.current.setLocalDescription(offer);\n      ws.current.send(JSON.stringify({ type: 'offer', offer, id: sessionId }));\n    });\n  };\n\n  return (\n    <div>\n      <h2>Sender</h2>\n      <input placeholder=\"Session ID\" value={sessionId} onChange={(e) => setSessionId(e.target.value)} />\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n      <button onClick={connect}>Send</button>\n    </div>\n  );\n};\n\nexport default Sender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}