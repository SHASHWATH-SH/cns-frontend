{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { generateKeyPair, exportPublicKey, importPublicKey, deriveAESKey, decryptData } from './cryptoUtils';\nimport './Receiver.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\nexport default function Receiver() {\n  _s();\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const localKeyPair = useRef(null);\n  const aesKey = useRef(null);\n  const receivedChunks = useRef([]);\n  const receivedIVs = useRef([]);\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false\n    });\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n    socket.current.on('signal', async data => {\n      if (data.from !== senderId) return;\n      if (data.signal.publicKey) {\n        const senderPub = await importPublicKey(data.signal.publicKey);\n        aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, senderPub);\n        const myPub = await exportPublicKey(localKeyPair.current.publicKey);\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: {\n            publicKey: myPub\n          }\n        });\n      }\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: pc.current.localDescription\n          });\n        }\n      } else if (data.signal.candidate) {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n      }\n    });\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n  const startConnection = async () => {\n    pc.current = new RTCPeerConnection();\n    localKeyPair.current = await generateKeyPair();\n    pc.current.ondatachannel = event => {\n      dc.current = event.channel;\n      dc.current.binaryType = 'arraybuffer';\n      let expectingIV = true;\n      let currentIV = null;\n      dc.current.onmessage = async event => {\n        if (typeof event.data === 'string') {\n          try {\n            const msg = JSON.parse(event.data);\n            if (msg.done) {\n              const decryptedChunks = await Promise.all(receivedChunks.current.map((enc, i) => decryptData(aesKey.current, enc, receivedIVs.current[i])));\n              const blob = new Blob(decryptedChunks);\n              const a = document.createElement('a');\n              a.href = URL.createObjectURL(blob);\n              a.download = msg.fileName || 'file';\n              a.click();\n              setStatus('File saved.');\n              receivedChunks.current = [];\n              receivedIVs.current = [];\n            }\n          } catch {}\n        } else {\n          if (expectingIV) {\n            currentIV = new Uint8Array(event.data);\n          } else {\n            receivedChunks.current.push(event.data);\n            receivedIVs.current.push(currentIV);\n            setStatus(`Receiving: ${receivedChunks.current.length} chunks`);\n          }\n          expectingIV = !expectingIV;\n        }\n      };\n      dc.current.onopen = () => setStatus('Data channel open. Ready to receive file.');\n    };\n    pc.current.onicecandidate = event => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: {\n            candidate: event.candidate\n          }\n        });\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"receiver-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"receiver-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Secure File Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"receiver-id\",\n        children: [\"ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"receiver-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"receiver-input\",\n          placeholder: \"Enter Sender ID\",\n          value: senderId,\n          onChange: e => setSenderId(e.target.value.toUpperCase())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"receiver-button\",\n        onClick: startConnection,\n        disabled: !senderId,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-indicator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"pPu2khxhnk1/HmY5JzIEj1E4WQQ=\");\n_c = Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useState","useRef","useEffect","io","generateKeyPair","exportPublicKey","importPublicKey","deriveAESKey","decryptData","jsxDEV","_jsxDEV","generateId","Math","random","toString","slice","toUpperCase","Receiver","_s","id","senderId","setSenderId","status","setStatus","pc","socket","dc","localKeyPair","aesKey","receivedChunks","receivedIVs","current","transports","rejectUnauthorized","on","emit","data","from","signal","publicKey","senderPub","privateKey","myPub","target","sdp","setRemoteDescription","RTCSessionDescription","type","answer","createAnswer","setLocalDescription","localDescription","candidate","addIceCandidate","RTCIceCandidate","disconnect","startConnection","RTCPeerConnection","ondatachannel","event","channel","binaryType","expectingIV","currentIV","onmessage","msg","JSON","parse","done","decryptedChunks","Promise","all","map","enc","i","blob","Blob","a","document","createElement","href","URL","createObjectURL","download","fileName","click","Uint8Array","push","length","onopen","onicecandidate","className","children","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport {\n  generateKeyPair,\n  exportPublicKey,\n  importPublicKey,\n  deriveAESKey,\n  decryptData\n} from './cryptoUtils';\nimport './Receiver.css';\n\nfunction generateId() {\n  return Math.random().toString(36).slice(2, 8).toUpperCase();\n}\n\nexport default function Receiver() {\n  const [id] = useState(generateId());\n  const [senderId, setSenderId] = useState('');\n  const [status, setStatus] = useState('Idle');\n  const pc = useRef(null);\n  const socket = useRef(null);\n  const dc = useRef(null);\n  const localKeyPair = useRef(null);\n  const aesKey = useRef(null);\n  const receivedChunks = useRef([]);\n  const receivedIVs = useRef([]);\n\n  useEffect(() => {\n    socket.current = io('https://192.168.168.36:8080', {\n      transports: ['websocket'],\n      rejectUnauthorized: false,\n    });\n\n    socket.current.on('connect', () => {\n      socket.current.emit('register', id);\n      setStatus(`Registered as ${id}`);\n    });\n\n    socket.current.on('signal', async (data) => {\n      if (data.from !== senderId) return;\n\n      if (data.signal.publicKey) {\n        const senderPub = await importPublicKey(data.signal.publicKey);\n        aesKey.current = await deriveAESKey(localKeyPair.current.privateKey, senderPub);\n\n        const myPub = await exportPublicKey(localKeyPair.current.publicKey);\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: { publicKey: myPub },\n        });\n      }\n\n      if (data.signal.sdp) {\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.signal));\n        if (data.signal.type === 'offer') {\n          const answer = await pc.current.createAnswer();\n          await pc.current.setLocalDescription(answer);\n          socket.current.emit('signal', {\n            target: senderId,\n            signal: pc.current.localDescription,\n          });\n        }\n      } else if (data.signal.candidate) {\n        await pc.current.addIceCandidate(new RTCIceCandidate(data.signal.candidate));\n      }\n    });\n\n    return () => socket.current.disconnect();\n  }, [id, senderId]);\n\n  const startConnection = async () => {\n    pc.current = new RTCPeerConnection();\n    localKeyPair.current = await generateKeyPair();\n\n    pc.current.ondatachannel = (event) => {\n      dc.current = event.channel;\n      dc.current.binaryType = 'arraybuffer';\n\n      let expectingIV = true;\n      let currentIV = null;\n\n      dc.current.onmessage = async (event) => {\n        if (typeof event.data === 'string') {\n          try {\n            const msg = JSON.parse(event.data);\n            if (msg.done) {\n              const decryptedChunks = await Promise.all(\n                receivedChunks.current.map((enc, i) =>\n                  decryptData(aesKey.current, enc, receivedIVs.current[i])\n                )\n              );\n              const blob = new Blob(decryptedChunks);\n              const a = document.createElement('a');\n              a.href = URL.createObjectURL(blob);\n              a.download = msg.fileName || 'file';\n              a.click();\n              setStatus('File saved.');\n              receivedChunks.current = [];\n              receivedIVs.current = [];\n            }\n          } catch {}\n        } else {\n          if (expectingIV) {\n            currentIV = new Uint8Array(event.data);\n          } else {\n            receivedChunks.current.push(event.data);\n            receivedIVs.current.push(currentIV);\n            setStatus(`Receiving: ${receivedChunks.current.length} chunks`);\n          }\n          expectingIV = !expectingIV;\n        }\n      };\n\n      dc.current.onopen = () => setStatus('Data channel open. Ready to receive file.');\n    };\n\n    pc.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        socket.current.emit('signal', {\n          target: senderId,\n          signal: { candidate: event.candidate },\n        });\n      }\n    };\n  };\n\n  return (\n    <div className=\"receiver-container\">\n      <div className=\"receiver-header\">\n        <h2>Secure File Receiver</h2>\n        <span className=\"receiver-id\">ID: {id}</span>\n      </div>\n\n      <div className=\"receiver-controls\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className=\"receiver-input\"\n            placeholder=\"Enter Sender ID\"\n            value={senderId}\n            onChange={e => setSenderId(e.target.value.toUpperCase())}\n          />\n        </div>\n\n        <button\n          className=\"receiver-button\"\n          onClick={startConnection}\n          disabled={!senderId}\n        >\n          Connect\n        </button>\n      </div>\n\n      <div className=\"status-container\">\n        <div className=\"status-indicator\"></div>\n        <span>{status}</span>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}