{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\n// src/Receiver.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNAL_SERVER = 'wss://172.17.1.95:8080'; // ✅ must be WSS\nconst socket = new WebSocket(SIGNAL_SERVER);\nfunction Receiver() {\n  _s();\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [senderId, setSenderId] = useState('');\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n  const receivedChunks = useRef([]);\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        register: myId\n      }));\n      console.log('Receiver connected. My ID:', myId);\n    };\n    ws.current.onmessage = async msg => {\n      const data = JSON.parse(msg.data);\n      if (data.type === 'offer') {\n        pc.current = new RTCPeerConnection({\n          iceServers: [{\n            urls: 'stun:stun.l.google.com:19302'\n          }]\n        });\n        pc.current.ondatachannel = event => {\n          dataChannel.current = event.channel;\n          dataChannel.current.binaryType = 'arraybuffer';\n          dataChannel.current.onmessage = e => {\n            receivedChunks.current.push(e.data);\n          };\n          dataChannel.current.onclose = () => {\n            const blob = new Blob(receivedChunks.current);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'received_file';\n            a.click();\n            URL.revokeObjectURL(url);\n            console.log('File downloaded.');\n          };\n        };\n        pc.current.onicecandidate = e => {\n          if (e.candidate) {\n            ws.current.send(JSON.stringify({\n              from: myId,\n              to: data.from,\n              type: 'candidate',\n              candidate: e.candidate\n            }));\n          }\n        };\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          from: myId,\n          to: data.from,\n          type: 'answer',\n          sdp: answer\n        }));\n        setSenderId(data.from);\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(data.candidate);\n      }\n    };\n  }, [myId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Receiver Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: myId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for sender...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), senderId && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Connected to: \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: senderId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"LfQLaXiNxkloRJF0UsMu/oPw+8Y=\");\n_c = Receiver;\nexport default Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SIGNAL_SERVER","socket","WebSocket","Receiver","_s","myId","Math","random","toString","slice","senderId","setSenderId","ws","pc","dataChannel","receivedChunks","current","onopen","send","JSON","stringify","register","console","log","onmessage","msg","data","parse","type","RTCPeerConnection","iceServers","urls","ondatachannel","event","channel","binaryType","e","push","onclose","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","onicecandidate","candidate","from","to","setRemoteDescription","RTCSessionDescription","sdp","answer","createAnswer","setLocalDescription","addIceCandidate","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["// src/Receiver.js\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst SIGNAL_SERVER = 'wss://172.17.1.95:8080';  // ✅ must be WSS\nconst socket = new WebSocket(SIGNAL_SERVER);\n\n\n\nfunction Receiver() {\n  const [myId] = useState(() => Math.random().toString(36).slice(2, 8));\n  const [senderId, setSenderId] = useState('');\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n  const receivedChunks = useRef([]);\n\n  useEffect(() => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({ register: myId }));\n      console.log('Receiver connected. My ID:', myId);\n    };\n\n    ws.current.onmessage = async (msg) => {\n      const data = JSON.parse(msg.data);\n      if (data.type === 'offer') {\n        pc.current = new RTCPeerConnection({ iceServers: [{ urls: 'stun:stun.l.google.com:19302' }] });\n\n        pc.current.ondatachannel = (event) => {\n          dataChannel.current = event.channel;\n          dataChannel.current.binaryType = 'arraybuffer';\n          dataChannel.current.onmessage = (e) => {\n            receivedChunks.current.push(e.data);\n          };\n          dataChannel.current.onclose = () => {\n            const blob = new Blob(receivedChunks.current);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = 'received_file';\n            a.click();\n            URL.revokeObjectURL(url);\n            console.log('File downloaded.');\n          };\n        };\n\n        pc.current.onicecandidate = (e) => {\n          if (e.candidate) {\n            ws.current.send(JSON.stringify({ from: myId, to: data.from, type: 'candidate', candidate: e.candidate }));\n          }\n        };\n\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.sdp));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({ from: myId, to: data.from, type: 'answer', sdp: answer }));\n        setSenderId(data.from);\n      } else if (data.type === 'candidate') {\n        await pc.current.addIceCandidate(data.candidate);\n      }\n    };\n  }, [myId]);\n\n  return (\n    <div style={{ padding: 30 }}>\n      <h2>Receiver Mode</h2>\n      <p>Your ID: <b>{myId}</b></p>\n      <p>Waiting for sender...</p>\n      {senderId && <p>Connected to: <b>{senderId}</b></p>}\n    </div>\n  );\n}\n\nexport default Receiver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}