{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\n// frontend/src/Sender.js\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SIGNAL_SERVER = 'wss://localhost:8080'; // Must match backend WSS\n\nfunction Sender() {\n  _s();\n  const pc = useRef(null);\n  const ws = useRef(null);\n  const fileReader = useRef(null);\n  const [file, setFile] = useState(null);\n  const connectAndSend = () => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      pc.current = new RTCPeerConnection();\n      pc.current.onicecandidate = e => {\n        if (e.candidate) {\n          ws.current.send(JSON.stringify({\n            type: 'candidate',\n            candidate: e.candidate\n          }));\n        }\n      };\n      const dataChannel = pc.current.createDataChannel('file');\n      dataChannel.onopen = () => {\n        console.log('Data channel open');\n        sendFile(dataChannel);\n      };\n      pc.current.createOffer().then(offer => pc.current.setLocalDescription(offer)).then(() => {\n        ws.current.send(JSON.stringify({\n          type: 'offer',\n          offer: pc.current.localDescription\n        }));\n      });\n      ws.current.onmessage = message => {\n        const data = JSON.parse(message.data);\n        if (data.type === 'answer') {\n          pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        } else if (data.type === 'candidate') {\n          pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        }\n      };\n    };\n  };\n  const sendFile = channel => {\n    const chunkSize = 16384;\n    const reader = new FileReader();\n    fileReader.current = reader;\n    let offset = 0;\n    reader.onload = e => {\n      channel.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        channel.send('EOF'); // Signal end of file\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectAndSend,\n      disabled: !file,\n      children: \"Send File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"fMx0rq5eIgFbiXAGljBO+gJ3LHo=\");\n_c = Sender;\nexport default Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","SIGNAL_SERVER","Sender","_s","pc","ws","fileReader","file","setFile","connectAndSend","current","WebSocket","onopen","RTCPeerConnection","onicecandidate","e","candidate","send","JSON","stringify","type","dataChannel","createDataChannel","console","log","sendFile","createOffer","then","offer","setLocalDescription","localDescription","onmessage","message","data","parse","setRemoteDescription","RTCSessionDescription","answer","addIceCandidate","RTCIceCandidate","channel","chunkSize","reader","FileReader","offset","onload","target","result","byteLength","size","readSlice","o","slice","readAsArrayBuffer","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","files","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["// frontend/src/Sender.js\nimport React, { useRef, useState } from 'react';\n\nconst SIGNAL_SERVER = 'wss://localhost:8080'; // Must match backend WSS\n\nfunction Sender() {\n  const pc = useRef(null);\n  const ws = useRef(null);\n  const fileReader = useRef(null);\n  const [file, setFile] = useState(null);\n\n  const connectAndSend = () => {\n    ws.current = new WebSocket(SIGNAL_SERVER);\n    ws.current.onopen = () => {\n      pc.current = new RTCPeerConnection();\n\n      pc.current.onicecandidate = (e) => {\n        if (e.candidate) {\n          ws.current.send(JSON.stringify({ type: 'candidate', candidate: e.candidate }));\n        }\n      };\n\n      const dataChannel = pc.current.createDataChannel('file');\n      dataChannel.onopen = () => {\n        console.log('Data channel open');\n        sendFile(dataChannel);\n      };\n\n      pc.current.createOffer()\n        .then(offer => pc.current.setLocalDescription(offer))\n        .then(() => {\n          ws.current.send(JSON.stringify({ type: 'offer', offer: pc.current.localDescription }));\n        });\n\n      ws.current.onmessage = (message) => {\n        const data = JSON.parse(message.data);\n        if (data.type === 'answer') {\n          pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        } else if (data.type === 'candidate') {\n          pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        }\n      };\n    };\n  };\n\n  const sendFile = (channel) => {\n    const chunkSize = 16384;\n    const reader = new FileReader();\n    fileReader.current = reader;\n\n    let offset = 0;\n    reader.onload = (e) => {\n      channel.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        channel.send('EOF'); // Signal end of file\n      }\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      reader.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  return (\n    <div>\n      <h2>Sender</h2>\n      <input type=\"file\" onChange={e => setFile(e.target.files[0])} />\n      <button onClick={connectAndSend} disabled={!file}>Send File</button>\n    </div>\n  );\n}\n\nexport default Sender;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}