{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateId = () => Math.random().toString(36).substring(2, 8).toUpperCase();\nconst Receiver = () => {\n  _s();\n  const [id] = useState(generateId());\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const [status, setStatus] = useState('Waiting for sender...');\n  const receivedChunks = useRef([]);\n  useEffect(() => {\n    ws.current = new WebSocket('wss://localhost:8080');\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({\n        type: 'register',\n        id\n      }));\n    };\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      switch (data.type) {\n        case 'offer':\n          await handleOffer(data.offer, data.sender);\n          break;\n        case 'candidate':\n          if (pc.current) {\n            await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          }\n          break;\n        default:\n          break;\n      }\n    };\n    return () => {\n      if (ws.current) ws.current.close();\n    };\n  }, [id]);\n  const handleOffer = async (offer, senderId) => {\n    pc.current = new RTCPeerConnection();\n    pc.current.ondatachannel = event => {\n      const channel = event.channel;\n      channel.binaryType = 'arraybuffer';\n      channel.onmessage = e => {\n        if (e.data === 'EOF') {\n          const blob = new Blob(receivedChunks.current);\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = 'received_file';\n          a.click();\n          URL.revokeObjectURL(url);\n          setStatus('File received and saved.');\n        } else {\n          receivedChunks.current.push(e.data);\n        }\n      };\n    };\n    pc.current.onicecandidate = e => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({\n          type: 'candidate',\n          candidate: e.candidate,\n          target: senderId\n        }));\n      }\n    };\n    await pc.current.setRemoteDescription(new RTCSessionDescription(offer));\n    const answer = await pc.current.createAnswer();\n    await pc.current.setLocalDescription(answer);\n    ws.current.send(JSON.stringify({\n      type: 'answer',\n      answer,\n      target: senderId\n    }));\n    setStatus('Connection established. Receiving file...');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Receiver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Your ID: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Receiver, \"UKMzCDTn6sIAnywkrefPad9UDz8=\");\n_c = Receiver;\nexport default Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","generateId","Math","random","toString","substring","toUpperCase","Receiver","_s","id","ws","pc","status","setStatus","receivedChunks","current","WebSocket","onopen","send","JSON","stringify","type","onmessage","event","data","parse","handleOffer","offer","sender","addIceCandidate","RTCIceCandidate","candidate","close","senderId","RTCPeerConnection","ondatachannel","channel","binaryType","e","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","push","onicecandidate","target","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst generateId = () => Math.random().toString(36).substring(2, 8).toUpperCase();\n\nconst Receiver = () => {\n  const [id] = useState(generateId());\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const [status, setStatus] = useState('Waiting for sender...');\n  const receivedChunks = useRef([]);\n\n  useEffect(() => {\n    ws.current = new WebSocket('wss://localhost:8080');\n\n    ws.current.onopen = () => {\n      ws.current.send(JSON.stringify({ type: 'register', id }));\n    };\n\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n\n      switch (data.type) {\n        case 'offer':\n          await handleOffer(data.offer, data.sender);\n          break;\n        case 'candidate':\n          if (pc.current) {\n            await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          }\n          break;\n        default:\n          break;\n      }\n    };\n\n    return () => {\n      if (ws.current) ws.current.close();\n    };\n  }, [id]);\n\n  const handleOffer = async (offer, senderId) => {\n    pc.current = new RTCPeerConnection();\n\n    pc.current.ondatachannel = (event) => {\n      const channel = event.channel;\n      channel.binaryType = 'arraybuffer';\n\n      channel.onmessage = (e) => {\n        if (e.data === 'EOF') {\n          const blob = new Blob(receivedChunks.current);\n          const url = URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = 'received_file';\n          a.click();\n          URL.revokeObjectURL(url);\n          setStatus('File received and saved.');\n        } else {\n          receivedChunks.current.push(e.data);\n        }\n      };\n    };\n\n    pc.current.onicecandidate = (e) => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({ type: 'candidate', candidate: e.candidate, target: senderId }));\n      }\n    };\n\n    await pc.current.setRemoteDescription(new RTCSessionDescription(offer));\n    const answer = await pc.current.createAnswer();\n    await pc.current.setLocalDescription(answer);\n\n    ws.current.send(JSON.stringify({ type: 'answer', answer, target: senderId }));\n    setStatus('Connection established. Receiving file...');\n  };\n\n  return (\n    <div>\n      <h2>Receiver</h2>\n      <p>Your ID: <strong>{id}</strong></p>\n      <p>Status: {status}</p>\n    </div>\n  );\n};\n\nexport default Receiver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}