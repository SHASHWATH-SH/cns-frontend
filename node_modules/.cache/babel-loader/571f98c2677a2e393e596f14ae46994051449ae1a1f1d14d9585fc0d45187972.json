{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction randomId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\nexport default function Sender() {\n  _s();\n  const [senderId] = useState(randomId());\n  const [receiverId, setReceiverId] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  // Setup WebSocket connection to signaling server\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://localhost:8080\");\n    ws.current.onopen = () => console.log(\"Sender WS connected\");\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      if (data.to !== senderId) return;\n      if (data.type === \"offer\") {\n        await pc.current.setRemoteDescription(data.offer);\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          from: senderId,\n          to: data.from,\n          type: \"answer\",\n          answer\n        }));\n      } else if (data.type === \"candidate\") {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.error(\"Error adding ICE candidate\", e);\n        }\n      }\n    };\n    return () => {\n      ws.current.close();\n    };\n  }, [senderId]);\n\n  // Setup PeerConnection and DataChannel\n  useEffect(() => {\n    pc.current = new RTCPeerConnection();\n    pc.current.onicecandidate = e => {\n      if (e.candidate) {\n        ws.current.send(JSON.stringify({\n          from: senderId,\n          to: receiverId,\n          type: \"candidate\",\n          candidate: e.candidate\n        }));\n      }\n    };\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n    dc.current.onopen = () => {\n      console.log(\"Sender DataChannel open\");\n    };\n    dc.current.onclose = () => {\n      console.log(\"Sender DataChannel closed\");\n    };\n  }, [senderId, receiverId]);\n  async function startConnection() {\n    if (!receiverId || !file) {\n      alert(\"Enter Receiver ID and select a file first\");\n      return;\n    }\n    // Create offer and send to receiver\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({\n      from: senderId,\n      to: receiverId,\n      type: \"offer\",\n      offer\n    }));\n  }\n  function sendFile() {\n    if (!dc.current || dc.current.readyState !== \"open\") {\n      alert(\"Data channel not open\");\n      return;\n    }\n    const chunkSize = 16 * 1024; // 16KB\n    const fileReader = new FileReader();\n    let offset = 0;\n    fileReader.onerror = error => console.error(\"FileReader error\", error);\n    fileReader.onload = e => {\n      if (!e.target.result) return;\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // Signal done\n        dc.current.send(JSON.stringify({\n          done: true,\n          fileName: file.name\n        }));\n        console.log(\"File sent completely\");\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Sender ID: \", senderId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter Receiver ID\",\n      value: receiverId,\n      onChange: e => setReceiverId(e.target.value.toUpperCase()),\n      maxLength: 6,\n      style: {\n        textTransform: \"uppercase\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0]),\n      style: {\n        marginTop: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startConnection,\n      style: {\n        marginTop: 10\n      },\n      children: \"Start Connection (Send Offer)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendFile,\n      style: {\n        marginLeft: 10,\n        marginTop: 10\n      },\n      children: \"Send File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"xjThL/ua8czLRFAkijB6d1KgY7M=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","randomId","Math","random","toString","substring","toUpperCase","Sender","_s","senderId","receiverId","setReceiverId","file","setFile","ws","pc","dc","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","to","type","setRemoteDescription","offer","answer","createAnswer","setLocalDescription","send","stringify","from","addIceCandidate","candidate","e","error","close","RTCPeerConnection","onicecandidate","createDataChannel","onclose","startConnection","alert","createOffer","sendFile","readyState","chunkSize","fileReader","FileReader","offset","onerror","onload","target","result","byteLength","size","readSlice","done","fileName","name","o","slice","readAsArrayBuffer","style","padding","children","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","maxLength","textTransform","files","marginTop","onClick","marginLeft","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n\nfunction randomId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\n\nexport default function Sender() {\n  const [senderId] = useState(randomId());\n  const [receiverId, setReceiverId] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  // Setup WebSocket connection to signaling server\n  useEffect(() => {\n    ws.current = new WebSocket(\"wss://localhost:8080\");\n    ws.current.onopen = () => console.log(\"Sender WS connected\");\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n      if (data.to !== senderId) return;\n\n      if (data.type === \"offer\") {\n        await pc.current.setRemoteDescription(data.offer);\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(\n          JSON.stringify({\n            from: senderId,\n            to: data.from,\n            type: \"answer\",\n            answer,\n          })\n        );\n      } else if (data.type === \"candidate\") {\n        try {\n          await pc.current.addIceCandidate(data.candidate);\n        } catch (e) {\n          console.error(\"Error adding ICE candidate\", e);\n        }\n      }\n    };\n\n    return () => {\n      ws.current.close();\n    };\n  }, [senderId]);\n\n  // Setup PeerConnection and DataChannel\n  useEffect(() => {\n    pc.current = new RTCPeerConnection();\n\n    pc.current.onicecandidate = (e) => {\n      if (e.candidate) {\n        ws.current.send(\n          JSON.stringify({\n            from: senderId,\n            to: receiverId,\n            type: \"candidate\",\n            candidate: e.candidate,\n          })\n        );\n      }\n    };\n\n    dc.current = pc.current.createDataChannel(\"fileTransfer\");\n\n    dc.current.onopen = () => {\n      console.log(\"Sender DataChannel open\");\n    };\n\n    dc.current.onclose = () => {\n      console.log(\"Sender DataChannel closed\");\n    };\n  }, [senderId, receiverId]);\n\n  async function startConnection() {\n    if (!receiverId || !file) {\n      alert(\"Enter Receiver ID and select a file first\");\n      return;\n    }\n    // Create offer and send to receiver\n    const offer = await pc.current.createOffer();\n    await pc.current.setLocalDescription(offer);\n    ws.current.send(\n      JSON.stringify({\n        from: senderId,\n        to: receiverId,\n        type: \"offer\",\n        offer,\n      })\n    );\n  }\n\n  function sendFile() {\n    if (!dc.current || dc.current.readyState !== \"open\") {\n      alert(\"Data channel not open\");\n      return;\n    }\n    const chunkSize = 16 * 1024; // 16KB\n    const fileReader = new FileReader();\n    let offset = 0;\n\n    fileReader.onerror = (error) => console.error(\"FileReader error\", error);\n\n    fileReader.onload = (e) => {\n      if (!e.target.result) return;\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        // Signal done\n        dc.current.send(\n          JSON.stringify({ done: true, fileName: file.name })\n        );\n        console.log(\"File sent completely\");\n      }\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  }\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Sender ID: {senderId}</h2>\n      <input\n        placeholder=\"Enter Receiver ID\"\n        value={receiverId}\n        onChange={(e) => setReceiverId(e.target.value.toUpperCase())}\n        maxLength={6}\n        style={{ textTransform: \"uppercase\" }}\n      />\n      <br />\n      <input\n        type=\"file\"\n        onChange={(e) => setFile(e.target.files[0])}\n        style={{ marginTop: 10 }}\n      />\n      <br />\n      <button onClick={startConnection} style={{ marginTop: 10 }}>\n        Start Connection (Send Offer)\n      </button>\n      <button onClick={sendFile} style={{ marginLeft: 10, marginTop: 10 }}>\n        Send File\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}