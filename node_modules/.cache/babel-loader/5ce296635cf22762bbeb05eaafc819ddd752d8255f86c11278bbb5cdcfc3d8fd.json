{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sender = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const connectAndSend = () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n\n    // Initialize WebSocket\n    ws.current = new WebSocket('wss://localhost:8080');\n    ws.current.onerror = err => {\n      console.error(\"WebSocket error:\", err);\n    };\n    ws.current.onopen = () => {\n      console.log(\"WebSocket connected\");\n\n      // Initialize PeerConnection\n      pc.current = new RTCPeerConnection();\n\n      // Create data channel\n      dataChannel.current = pc.current.createDataChannel(\"file\");\n      dataChannel.current.onopen = () => {\n        console.log(\"Data channel open, sending file...\");\n        file.arrayBuffer().then(buffer => {\n          dataChannel.current.send(buffer);\n          alert(\"File sent!\");\n        });\n      };\n      dataChannel.current.onerror = err => {\n        console.error(\"Data channel error:\", err);\n      };\n\n      // ICE candidate handling\n      pc.current.onicecandidate = event => {\n        if (event.candidate) {\n          ws.current.send(JSON.stringify({\n            type: 'candidate',\n            candidate: event.candidate\n          }));\n        }\n      };\n\n      // Create offer\n      pc.current.createOffer().then(offer => {\n        return pc.current.setLocalDescription(offer);\n      }).then(() => {\n        ws.current.send(JSON.stringify({\n          type: 'offer',\n          offer: pc.current.localDescription\n        }));\n      }).catch(err => {\n        console.error(\"Offer creation failed:\", err);\n      });\n    };\n\n    // Handle messages from signaling server\n    ws.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'answer') {\n        pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } else if (data.type === 'candidate') {\n        pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sender\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectAndSend,\n      children: \"Send File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Sender, \"RoJs0TyPxHXqUYyTKmxtYFR/iBw=\");\n_c = Sender;\nexport default Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Sender","_s","file","setFile","ws","pc","dataChannel","handleFileChange","e","target","files","connectAndSend","alert","current","WebSocket","onerror","err","console","error","onopen","log","RTCPeerConnection","createDataChannel","arrayBuffer","then","buffer","send","onicecandidate","event","candidate","JSON","stringify","type","createOffer","offer","setLocalDescription","localDescription","catch","onmessage","data","parse","setRemoteDescription","RTCSessionDescription","answer","addIceCandidate","RTCIceCandidate","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\n\nconst Sender = () => {\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dataChannel = useRef(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const connectAndSend = () => {\n    if (!file) {\n      alert(\"Please select a file first.\");\n      return;\n    }\n\n    // Initialize WebSocket\n    ws.current = new WebSocket('wss://localhost:8080');\n\n    ws.current.onerror = (err) => {\n      console.error(\"WebSocket error:\", err);\n    };\n\n    ws.current.onopen = () => {\n      console.log(\"WebSocket connected\");\n\n      // Initialize PeerConnection\n      pc.current = new RTCPeerConnection();\n\n      // Create data channel\n      dataChannel.current = pc.current.createDataChannel(\"file\");\n\n      dataChannel.current.onopen = () => {\n        console.log(\"Data channel open, sending file...\");\n        file.arrayBuffer().then((buffer) => {\n          dataChannel.current.send(buffer);\n          alert(\"File sent!\");\n        });\n      };\n\n      dataChannel.current.onerror = (err) => {\n        console.error(\"Data channel error:\", err);\n      };\n\n      // ICE candidate handling\n      pc.current.onicecandidate = (event) => {\n        if (event.candidate) {\n          ws.current.send(JSON.stringify({ type: 'candidate', candidate: event.candidate }));\n        }\n      };\n\n      // Create offer\n      pc.current.createOffer().then((offer) => {\n        return pc.current.setLocalDescription(offer);\n      }).then(() => {\n        ws.current.send(JSON.stringify({ type: 'offer', offer: pc.current.localDescription }));\n      }).catch((err) => {\n        console.error(\"Offer creation failed:\", err);\n      });\n    };\n\n    // Handle messages from signaling server\n    ws.current.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'answer') {\n        pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n      } else if (data.type === 'candidate') {\n        pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n      }\n    };\n  };\n\n  return (\n    <div>\n      <h2>Sender</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={connectAndSend}>Send File</button>\n    </div>\n  );\n};\n\nexport default Sender;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMO,EAAE,GAAGR,MAAM,CAAC,IAAI,CAAC;EACvB,MAAMS,EAAE,GAAGT,MAAM,CAAC,IAAI,CAAC;EACvB,MAAMU,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9BL,OAAO,CAACK,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACT,IAAI,EAAE;MACTU,KAAK,CAAC,6BAA6B,CAAC;MACpC;IACF;;IAEA;IACAR,EAAE,CAACS,OAAO,GAAG,IAAIC,SAAS,CAAC,sBAAsB,CAAC;IAElDV,EAAE,CAACS,OAAO,CAACE,OAAO,GAAIC,GAAG,IAAK;MAC5BC,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEF,GAAG,CAAC;IACxC,CAAC;IAEDZ,EAAE,CAACS,OAAO,CAACM,MAAM,GAAG,MAAM;MACxBF,OAAO,CAACG,GAAG,CAAC,qBAAqB,CAAC;;MAElC;MACAf,EAAE,CAACQ,OAAO,GAAG,IAAIQ,iBAAiB,CAAC,CAAC;;MAEpC;MACAf,WAAW,CAACO,OAAO,GAAGR,EAAE,CAACQ,OAAO,CAACS,iBAAiB,CAAC,MAAM,CAAC;MAE1DhB,WAAW,CAACO,OAAO,CAACM,MAAM,GAAG,MAAM;QACjCF,OAAO,CAACG,GAAG,CAAC,oCAAoC,CAAC;QACjDlB,IAAI,CAACqB,WAAW,CAAC,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAK;UAClCnB,WAAW,CAACO,OAAO,CAACa,IAAI,CAACD,MAAM,CAAC;UAChCb,KAAK,CAAC,YAAY,CAAC;QACrB,CAAC,CAAC;MACJ,CAAC;MAEDN,WAAW,CAACO,OAAO,CAACE,OAAO,GAAIC,GAAG,IAAK;QACrCC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,GAAG,CAAC;MAC3C,CAAC;;MAED;MACAX,EAAE,CAACQ,OAAO,CAACc,cAAc,GAAIC,KAAK,IAAK;QACrC,IAAIA,KAAK,CAACC,SAAS,EAAE;UACnBzB,EAAE,CAACS,OAAO,CAACa,IAAI,CAACI,IAAI,CAACC,SAAS,CAAC;YAAEC,IAAI,EAAE,WAAW;YAAEH,SAAS,EAAED,KAAK,CAACC;UAAU,CAAC,CAAC,CAAC;QACpF;MACF,CAAC;;MAED;MACAxB,EAAE,CAACQ,OAAO,CAACoB,WAAW,CAAC,CAAC,CAACT,IAAI,CAAEU,KAAK,IAAK;QACvC,OAAO7B,EAAE,CAACQ,OAAO,CAACsB,mBAAmB,CAACD,KAAK,CAAC;MAC9C,CAAC,CAAC,CAACV,IAAI,CAAC,MAAM;QACZpB,EAAE,CAACS,OAAO,CAACa,IAAI,CAACI,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAE,OAAO;UAAEE,KAAK,EAAE7B,EAAE,CAACQ,OAAO,CAACuB;QAAiB,CAAC,CAAC,CAAC;MACxF,CAAC,CAAC,CAACC,KAAK,CAAErB,GAAG,IAAK;QAChBC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;MAC9C,CAAC,CAAC;IACJ,CAAC;;IAED;IACAZ,EAAE,CAACS,OAAO,CAACyB,SAAS,GAAIV,KAAK,IAAK;MAChC,MAAMW,IAAI,GAAGT,IAAI,CAACU,KAAK,CAACZ,KAAK,CAACW,IAAI,CAAC;MACnC,IAAIA,IAAI,CAACP,IAAI,KAAK,QAAQ,EAAE;QAC1B3B,EAAE,CAACQ,OAAO,CAAC4B,oBAAoB,CAAC,IAAIC,qBAAqB,CAACH,IAAI,CAACI,MAAM,CAAC,CAAC;MACzE,CAAC,MAAM,IAAIJ,IAAI,CAACP,IAAI,KAAK,WAAW,EAAE;QACpC3B,EAAE,CAACQ,OAAO,CAAC+B,eAAe,CAAC,IAAIC,eAAe,CAACN,IAAI,CAACV,SAAS,CAAC,CAAC;MACjE;IACF,CAAC;EACH,CAAC;EAED,oBACE9B,OAAA;IAAA+C,QAAA,gBACE/C,OAAA;MAAA+C,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfnD,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACmB,QAAQ,EAAE5C;IAAiB;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjDnD,OAAA;MAAQqD,OAAO,EAAEzC,cAAe;MAAAmC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACjD,EAAA,CA/EID,MAAM;AAAAqD,EAAA,GAANrD,MAAM;AAiFZ,eAAeA,MAAM;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}