{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Receiver.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\nexport default function Receiver() {\n  _s();\n  const [status, setStatus] = useState('Waiting for connection...');\n  const id = useRef(generateId()).current;\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const receiveChannel = useRef(null);\n  const receivedBuffers = useRef([]);\n  useEffect(() => {\n    ws.current = new WebSocket('wss://localhost:8080');\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      setStatus('Connected to signaling server, waiting for sender...');\n    };\n    ws.current.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      if (data.to !== id) return;\n      if (data.offer) {\n        pc.current = new RTCPeerConnection();\n        pc.current.onicecandidate = event => {\n          if (event.candidate) {\n            ws.current.send(JSON.stringify({\n              to: data.from,\n              from: id,\n              candidate: event.candidate\n            }));\n          }\n        };\n        pc.current.ondatachannel = event => {\n          receiveChannel.current = event.channel;\n          receiveChannel.current.binaryType = 'arraybuffer';\n          receiveChannel.current.onmessage = e => {\n            if (typeof e.data === 'string' && e.data === 'EOF') {\n              // File transfer complete, save file\n              const receivedBlob = new Blob(receivedBuffers.current);\n              const url = URL.createObjectURL(receivedBlob);\n              const a = document.createElement('a');\n              a.href = url;\n              a.download = 'received_file'; // You can improve this by sending file name in metadata\n              document.body.appendChild(a);\n              a.click();\n              a.remove();\n              URL.revokeObjectURL(url);\n              setStatus('File received and saved locally.');\n              receivedBuffers.current = [];\n            } else {\n              // Collect file chunk\n              receivedBuffers.current.push(e.data);\n              setStatus(`Receiving file... ${receivedBuffers.current.length} chunks`);\n            }\n          };\n          receiveChannel.current.onopen = () => {\n            setStatus('Data channel opened');\n          };\n          receiveChannel.current.onclose = () => {\n            setStatus('Data channel closed');\n          };\n        };\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          to: data.from,\n          from: id,\n          answer\n        }));\n        setStatus('Sent answer to sender');\n      } else if (data.candidate) {\n        try {\n          await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        } catch (e) {\n          console.error('Error adding ICE candidate:', e);\n        }\n      }\n    };\n    return () => {\n      if (pc.current) pc.current.close();\n      if (ws.current) ws.current.close();\n    };\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Receiver (Your ID: \", id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Share your ID with sender to receive files.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Receiver, \"fhdZJabCFHT1wz8SH3hu3b+Qx4o=\");\n_c = Receiver;\nvar _c;\n$RefreshReg$(_c, \"Receiver\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","generateId","Math","random","toString","substring","toUpperCase","Receiver","_s","status","setStatus","id","current","ws","pc","receiveChannel","receivedBuffers","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","to","offer","RTCPeerConnection","onicecandidate","candidate","send","stringify","from","ondatachannel","channel","binaryType","e","receivedBlob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","push","length","onclose","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","error","close","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Receiver.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nfunction generateId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\n\nexport default function Receiver() {\n  const [status, setStatus] = useState('Waiting for connection...');\n  const id = useRef(generateId()).current;\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const receiveChannel = useRef(null);\n  const receivedBuffers = useRef([]);\n\n  useEffect(() => {\n    ws.current = new WebSocket('wss://localhost:8080');\n\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      setStatus('Connected to signaling server, waiting for sender...');\n    };\n\n    ws.current.onmessage = async (event) => {\n      const data = JSON.parse(event.data);\n      if (data.to !== id) return;\n\n      if (data.offer) {\n        pc.current = new RTCPeerConnection();\n\n        pc.current.onicecandidate = (event) => {\n          if (event.candidate) {\n            ws.current.send(\n              JSON.stringify({ to: data.from, from: id, candidate: event.candidate })\n            );\n          }\n        };\n\n        pc.current.ondatachannel = (event) => {\n          receiveChannel.current = event.channel;\n          receiveChannel.current.binaryType = 'arraybuffer';\n\n          receiveChannel.current.onmessage = (e) => {\n            if (typeof e.data === 'string' && e.data === 'EOF') {\n              // File transfer complete, save file\n              const receivedBlob = new Blob(receivedBuffers.current);\n              const url = URL.createObjectURL(receivedBlob);\n              const a = document.createElement('a');\n              a.href = url;\n              a.download = 'received_file'; // You can improve this by sending file name in metadata\n              document.body.appendChild(a);\n              a.click();\n              a.remove();\n              URL.revokeObjectURL(url);\n              setStatus('File received and saved locally.');\n              receivedBuffers.current = [];\n            } else {\n              // Collect file chunk\n              receivedBuffers.current.push(e.data);\n              setStatus(`Receiving file... ${receivedBuffers.current.length} chunks`);\n            }\n          };\n\n          receiveChannel.current.onopen = () => {\n            setStatus('Data channel opened');\n          };\n\n          receiveChannel.current.onclose = () => {\n            setStatus('Data channel closed');\n          };\n        };\n\n        await pc.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await pc.current.createAnswer();\n        await pc.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({ to: data.from, from: id, answer }));\n\n        setStatus('Sent answer to sender');\n      } else if (data.candidate) {\n        try {\n          await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        } catch (e) {\n          console.error('Error adding ICE candidate:', e);\n        }\n      }\n    };\n\n    return () => {\n      if (pc.current) pc.current.close();\n      if (ws.current) ws.current.close();\n    };\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Receiver (Your ID: {id})</h2>\n      <p>Status: {status}</p>\n      <p>Share your ID with sender to receive files.</p>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}