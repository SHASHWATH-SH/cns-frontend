{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { QRCodeSVG } from 'qrcode.react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SIGNALING_SERVER = 'ws://localhost:8080';\nconst STUN_SERVERS = [{\n  urls: 'stun:stun.l.google.com:19302'\n}];\nfunction App() {\n  _s();\n  const [clientId, setClientId] = useState('');\n  const [partnerId, setPartnerId] = useState('');\n  const [role, setRole] = useState('');\n  const [file, setFile] = useState(null);\n  const [receivedFileURL, setReceivedFileURL] = useState(null);\n  const [log, setLog] = useState([]);\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n  const receiveBuffer = useRef([]);\n  const receivedSize = useRef(0);\n  const fileSize = useRef(0);\n  const fileReader = useRef(null);\n  const offset = useRef(0);\n  const addLog = msg => setLog(prev => [...prev, msg]);\n  useEffect(() => {\n    if (!clientId) return;\n    ws.current = new WebSocket(SIGNALING_SERVER);\n    ws.current.onopen = () => {\n      addLog('Connected to signaling server');\n      ws.current.send(JSON.stringify({\n        type: 'register',\n        id: clientId\n      }));\n    };\n    ws.current.onmessage = async msg => {\n      const data = JSON.parse(msg.data);\n      if (data.from === clientId) return;\n      if (data.type === 'offer' && role === 'receiver') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({\n          type: 'answer',\n          target: data.from,\n          answer\n        }));\n        addLog('Answer sent');\n      } else if (data.type === 'answer' && role === 'sender') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        addLog('Answer received');\n      } else if (data.type === 'ice-candidate') {\n        await peerConnection.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        addLog('ICE candidate added');\n      }\n    };\n    return () => {\n      var _ws$current;\n      return (_ws$current = ws.current) === null || _ws$current === void 0 ? void 0 : _ws$current.close();\n    };\n  }, [clientId, role]);\n  useEffect(() => {\n    if (!role || !partnerId) return;\n    peerConnection.current = new RTCPeerConnection({\n      iceServers: STUN_SERVERS\n    });\n    peerConnection.current.onicecandidate = event => {\n      if (event.candidate) {\n        ws.current.send(JSON.stringify({\n          type: 'ice-candidate',\n          target: partnerId,\n          candidate: event.candidate\n        }));\n        addLog('Sent ICE candidate');\n      }\n    };\n    if (role === 'sender') {\n      dataChannel.current = peerConnection.current.createDataChannel('file');\n      setupDataChannelEvents();\n    } else {\n      peerConnection.current.ondatachannel = event => {\n        dataChannel.current = event.channel;\n        setupDataChannelEvents();\n      };\n    }\n    return () => {\n      var _peerConnection$curre;\n      (_peerConnection$curre = peerConnection.current) === null || _peerConnection$curre === void 0 ? void 0 : _peerConnection$curre.close();\n      peerConnection.current = null;\n    };\n  }, [role, partnerId]);\n  const setupDataChannelEvents = () => {\n    if (!dataChannel.current) return;\n    dataChannel.current.onopen = () => addLog('Data channel opened');\n    dataChannel.current.onclose = () => addLog('Data channel closed');\n    dataChannel.current.onerror = e => addLog('Data channel error: ' + e.message);\n    if (role === 'receiver') {\n      dataChannel.current.onmessage = e => {\n        if (typeof e.data === 'string') {\n          const meta = JSON.parse(e.data);\n          fileSize.current = meta.size;\n          receiveBuffer.current = [];\n          receivedSize.current = 0;\n          addLog(`Receiving: ${meta.name} (${meta.size} bytes)`);\n        } else {\n          receiveBuffer.current.push(e.data);\n          receivedSize.current += e.data.byteLength;\n          if (receivedSize.current === fileSize.current) {\n            const blob = new Blob(receiveBuffer.current);\n            const url = URL.createObjectURL(blob);\n            setReceivedFileURL(url);\n            addLog('File received');\n          }\n        }\n      };\n    }\n  };\n  const CHUNK_SIZE = 16 * 1024;\n  if (!fileReader.current) {\n    fileReader.current = new FileReader();\n    fileReader.current.onload = e => {\n      dataChannel.current.send(e.target.result);\n      offset.current += CHUNK_SIZE;\n      sendChunks();\n    };\n  }\n  const sendChunks = () => {\n    while (offset.current < file.size && dataChannel.current.bufferedAmount < 64 * CHUNK_SIZE) {\n      const slice = file.slice(offset.current, offset.current + CHUNK_SIZE);\n      fileReader.current.readAsArrayBuffer(slice);\n      return;\n    }\n  };\n  const startTransfer = async () => {\n    if (!file) {\n      alert('Select a file');\n      return;\n    }\n    dataChannel.current.send(JSON.stringify({\n      name: file.name,\n      size: file.size\n    }));\n    offset.current = 0;\n    sendChunks();\n    const offer = await peerConnection.current.createOffer();\n    await peerConnection.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({\n      type: 'offer',\n      target: partnerId,\n      offer\n    }));\n    addLog('Offer sent');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Secure P2P File Transfer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), !clientId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Your ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: clientId,\n        onChange: e => setClientId(e.target.value),\n        placeholder: \"Enter a unique ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), clientId && !role && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your ID: \", clientId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole('sender'),\n        children: \"I'm the Sender\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRole('receiver'),\n        children: \"I'm the Receiver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), clientId && role && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your ID: \", clientId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Role: \", role]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Partner ID: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: partnerId,\n        onChange: e => setPartnerId(e.target.value),\n        placeholder: \"Enter receiver/sender ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n        value: partnerId || ' ',\n        size: 180\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), role === 'sender' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setFile(e.target.files[0])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startTransfer,\n          children: \"Send File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), receivedFileURL && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"File Received:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: receivedFileURL,\n        download: true,\n        children: \"Download File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Logs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          border: '1px solid #ccc',\n          padding: 10\n        },\n        children: log.join('\\n')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bZUIgRZCzDsPL1ikQMy9AC9/sEo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QRCodeSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","SIGNALING_SERVER","STUN_SERVERS","urls","App","_s","clientId","setClientId","partnerId","setPartnerId","role","setRole","file","setFile","receivedFileURL","setReceivedFileURL","log","setLog","ws","peerConnection","dataChannel","receiveBuffer","receivedSize","fileSize","fileReader","offset","addLog","msg","prev","current","WebSocket","onopen","send","JSON","stringify","type","id","onmessage","data","parse","from","setRemoteDescription","RTCSessionDescription","offer","answer","createAnswer","setLocalDescription","target","addIceCandidate","RTCIceCandidate","candidate","_ws$current","close","RTCPeerConnection","iceServers","onicecandidate","event","createDataChannel","setupDataChannelEvents","ondatachannel","channel","_peerConnection$curre","onclose","onerror","e","message","meta","size","name","push","byteLength","blob","Blob","url","URL","createObjectURL","CHUNK_SIZE","FileReader","onload","result","sendChunks","bufferedAmount","slice","readAsArrayBuffer","startTransfer","alert","createOffer","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","onClick","files","href","download","marginTop","whiteSpace","border","join","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { QRCodeSVG } from 'qrcode.react';\n\nconst SIGNALING_SERVER = 'ws://localhost:8080';\nconst STUN_SERVERS = [{ urls: 'stun:stun.l.google.com:19302' }];\n\nfunction App() {\n  const [clientId, setClientId] = useState('');\n  const [partnerId, setPartnerId] = useState('');\n  const [role, setRole] = useState('');\n  const [file, setFile] = useState(null);\n  const [receivedFileURL, setReceivedFileURL] = useState(null);\n  const [log, setLog] = useState([]);\n\n  const ws = useRef(null);\n  const peerConnection = useRef(null);\n  const dataChannel = useRef(null);\n  const receiveBuffer = useRef([]);\n  const receivedSize = useRef(0);\n  const fileSize = useRef(0);\n  const fileReader = useRef(null);\n  const offset = useRef(0);\n\n  const addLog = (msg) => setLog((prev) => [...prev, msg]);\n\n  useEffect(() => {\n    if (!clientId) return;\n\n    ws.current = new WebSocket(SIGNALING_SERVER);\n    ws.current.onopen = () => {\n      addLog('Connected to signaling server');\n      ws.current.send(JSON.stringify({ type: 'register', id: clientId }));\n    };\n\n    ws.current.onmessage = async (msg) => {\n      const data = JSON.parse(msg.data);\n      if (data.from === clientId) return;\n\n      if (data.type === 'offer' && role === 'receiver') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.offer));\n        const answer = await peerConnection.current.createAnswer();\n        await peerConnection.current.setLocalDescription(answer);\n        ws.current.send(JSON.stringify({ type: 'answer', target: data.from, answer }));\n        addLog('Answer sent');\n      } else if (data.type === 'answer' && role === 'sender') {\n        await peerConnection.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        addLog('Answer received');\n      } else if (data.type === 'ice-candidate') {\n        await peerConnection.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n        addLog('ICE candidate added');\n      }\n    };\n\n    return () => ws.current?.close();\n  }, [clientId, role]);\n\n  useEffect(() => {\n    if (!role || !partnerId) return;\n\n    peerConnection.current = new RTCPeerConnection({ iceServers: STUN_SERVERS });\n\n    peerConnection.current.onicecandidate = (event) => {\n      if (event.candidate) {\n        ws.current.send(\n          JSON.stringify({ type: 'ice-candidate', target: partnerId, candidate: event.candidate })\n        );\n        addLog('Sent ICE candidate');\n      }\n    };\n\n    if (role === 'sender') {\n      dataChannel.current = peerConnection.current.createDataChannel('file');\n      setupDataChannelEvents();\n    } else {\n      peerConnection.current.ondatachannel = (event) => {\n        dataChannel.current = event.channel;\n        setupDataChannelEvents();\n      };\n    }\n\n    return () => {\n      peerConnection.current?.close();\n      peerConnection.current = null;\n    };\n  }, [role, partnerId]);\n\n  const setupDataChannelEvents = () => {\n    if (!dataChannel.current) return;\n\n    dataChannel.current.onopen = () => addLog('Data channel opened');\n    dataChannel.current.onclose = () => addLog('Data channel closed');\n    dataChannel.current.onerror = (e) => addLog('Data channel error: ' + e.message);\n\n    if (role === 'receiver') {\n      dataChannel.current.onmessage = (e) => {\n        if (typeof e.data === 'string') {\n          const meta = JSON.parse(e.data);\n          fileSize.current = meta.size;\n          receiveBuffer.current = [];\n          receivedSize.current = 0;\n          addLog(`Receiving: ${meta.name} (${meta.size} bytes)`);\n        } else {\n          receiveBuffer.current.push(e.data);\n          receivedSize.current += e.data.byteLength;\n          if (receivedSize.current === fileSize.current) {\n            const blob = new Blob(receiveBuffer.current);\n            const url = URL.createObjectURL(blob);\n            setReceivedFileURL(url);\n            addLog('File received');\n          }\n        }\n      };\n    }\n  };\n\n  const CHUNK_SIZE = 16 * 1024;\n\n  if (!fileReader.current) {\n    fileReader.current = new FileReader();\n    fileReader.current.onload = (e) => {\n      dataChannel.current.send(e.target.result);\n      offset.current += CHUNK_SIZE;\n      sendChunks();\n    };\n  }\n\n  const sendChunks = () => {\n    while (\n      offset.current < file.size &&\n      dataChannel.current.bufferedAmount < 64 * CHUNK_SIZE\n    ) {\n      const slice = file.slice(offset.current, offset.current + CHUNK_SIZE);\n      fileReader.current.readAsArrayBuffer(slice);\n      return;\n    }\n  };\n\n  const startTransfer = async () => {\n    if (!file) {\n      alert('Select a file');\n      return;\n    }\n\n    dataChannel.current.send(JSON.stringify({ name: file.name, size: file.size }));\n    offset.current = 0;\n    sendChunks();\n\n    const offer = await peerConnection.current.createOffer();\n    await peerConnection.current.setLocalDescription(offer);\n    ws.current.send(JSON.stringify({ type: 'offer', target: partnerId, offer }));\n    addLog('Offer sent');\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Secure P2P File Transfer</h2>\n\n      {!clientId && (\n        <div>\n          <label>Your ID: </label>\n          <input\n            value={clientId}\n            onChange={(e) => setClientId(e.target.value)}\n            placeholder=\"Enter a unique ID\"\n          />\n        </div>\n      )}\n\n      {clientId && !role && (\n        <div>\n          <p>Your ID: {clientId}</p>\n          <button onClick={() => setRole('sender')}>I'm the Sender</button>\n          <button onClick={() => setRole('receiver')}>I'm the Receiver</button>\n        </div>\n      )}\n\n      {clientId && role && (\n        <div>\n          <p>Your ID: {clientId}</p>\n          <p>Role: {role}</p>\n          <label>Partner ID: </label>\n          <input\n            value={partnerId}\n            onChange={(e) => setPartnerId(e.target.value)}\n            placeholder=\"Enter receiver/sender ID\"\n          />\n          <br />\n          <QRCodeSVG value={partnerId || ' '} size={180} />\n          <br />\n          {role === 'sender' && (\n            <>\n              <input\n                type=\"file\"\n                onChange={(e) => setFile(e.target.files[0])}\n              />\n              <button onClick={startTransfer}>Send File</button>\n            </>\n          )}\n        </div>\n      )}\n\n      {receivedFileURL && (\n        <div>\n          <h3>File Received:</h3>\n          <a href={receivedFileURL} download>\n            Download File\n          </a>\n        </div>\n      )}\n\n      <div style={{ marginTop: 20 }}>\n        <h3>Logs:</h3>\n        <div style={{ whiteSpace: 'pre-wrap', border: '1px solid #ccc', padding: 10 }}>\n          {log.join('\\n')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}