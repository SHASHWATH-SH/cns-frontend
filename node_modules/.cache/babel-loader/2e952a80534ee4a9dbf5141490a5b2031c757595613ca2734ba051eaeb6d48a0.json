{"ast":null,"code":"var _jsxFileName = \"E:\\\\secure-p2p-transfer\\\\frontend\\\\src\\\\Sender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\nexport default function Sender() {\n  _s();\n  const [receiverId, setReceiverId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n  const id = useRef(generateId()).current;\n\n  // Connect to signaling server and WebRTC\n  const connectAndSend = () => {\n    ws.current = new WebSocket('wss://localhost:8080');\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      pc.current = new RTCPeerConnection();\n      dc.current = pc.current.createDataChannel('fileChannel');\n      dc.current.onopen = () => {\n        console.log('Data channel open, sending file...');\n        sendFileInChunks(file);\n      };\n      pc.current.onicecandidate = event => {\n        if (event.candidate) {\n          ws.current.send(JSON.stringify({\n            to: receiverId,\n            from: id,\n            candidate: event.candidate\n          }));\n        }\n      };\n      ws.current.onmessage = async event => {\n        const data = JSON.parse(event.data);\n        if (data.to !== id) return;\n        if (data.answer) {\n          await pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        } else if (data.candidate) {\n          try {\n            await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          } catch (e) {\n            console.error('Error adding ICE candidate:', e);\n          }\n        }\n      };\n\n      // Create offer and send it to receiver\n      pc.current.createOffer().then(offer => {\n        pc.current.setLocalDescription(offer);\n        ws.current.send(JSON.stringify({\n          to: receiverId,\n          from: id,\n          offer\n        }));\n      });\n    };\n  };\n\n  // Send file in chunks of 16 KB\n  const sendFileInChunks = file => {\n    const chunkSize = 16 * 1024; // 16 KB\n    const fileReader = new FileReader();\n    let offset = 0;\n    fileReader.onerror = error => console.error('Error reading file:', error);\n    fileReader.onload = e => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        dc.current.send('EOF'); // End of file signal\n        console.log('File sent successfully');\n      }\n    };\n    const readSlice = o => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.readAsArrayBuffer(slice);\n    };\n    readSlice(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Sender (Your ID: \", id, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Receiver ID\",\n      value: receiverId,\n      onChange: e => setReceiverId(e.target.value.toUpperCase())\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: !receiverId || !file,\n      onClick: connectAndSend,\n      children: \"Send File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(Sender, \"2YTqerU8esLYWIBi0WLxpn+MBrM=\");\n_c = Sender;\nvar _c;\n$RefreshReg$(_c, \"Sender\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","generateId","Math","random","toString","substring","toUpperCase","Sender","_s","receiverId","setReceiverId","file","setFile","ws","pc","dc","id","current","connectAndSend","WebSocket","onopen","console","log","RTCPeerConnection","createDataChannel","sendFileInChunks","onicecandidate","event","candidate","send","JSON","stringify","to","from","onmessage","data","parse","answer","setRemoteDescription","RTCSessionDescription","addIceCandidate","RTCIceCandidate","e","error","createOffer","then","offer","setLocalDescription","chunkSize","fileReader","FileReader","offset","onerror","onload","target","result","byteLength","size","readSlice","o","slice","readAsArrayBuffer","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","files","disabled","onClick","_c","$RefreshReg$"],"sources":["E:/secure-p2p-transfer/frontend/src/Sender.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction generateId() {\n  return Math.random().toString(36).substring(2, 8).toUpperCase();\n}\n\nexport default function Sender() {\n  const [receiverId, setReceiverId] = useState('');\n  const [file, setFile] = useState(null);\n  const ws = useRef(null);\n  const pc = useRef(null);\n  const dc = useRef(null);\n\n  const id = useRef(generateId()).current;\n\n  // Connect to signaling server and WebRTC\n  const connectAndSend = () => {\n    ws.current = new WebSocket('wss://localhost:8080');\n\n    ws.current.onopen = () => {\n      console.log('WebSocket connected');\n      pc.current = new RTCPeerConnection();\n\n      dc.current = pc.current.createDataChannel('fileChannel');\n\n      dc.current.onopen = () => {\n        console.log('Data channel open, sending file...');\n        sendFileInChunks(file);\n      };\n\n      pc.current.onicecandidate = (event) => {\n        if (event.candidate) {\n          ws.current.send(\n            JSON.stringify({ to: receiverId, from: id, candidate: event.candidate })\n          );\n        }\n      };\n\n      ws.current.onmessage = async (event) => {\n        const data = JSON.parse(event.data);\n        if (data.to !== id) return;\n\n        if (data.answer) {\n          await pc.current.setRemoteDescription(new RTCSessionDescription(data.answer));\n        } else if (data.candidate) {\n          try {\n            await pc.current.addIceCandidate(new RTCIceCandidate(data.candidate));\n          } catch (e) {\n            console.error('Error adding ICE candidate:', e);\n          }\n        }\n      };\n\n      // Create offer and send it to receiver\n      pc.current.createOffer().then((offer) => {\n        pc.current.setLocalDescription(offer);\n        ws.current.send(JSON.stringify({ to: receiverId, from: id, offer }));\n      });\n    };\n  };\n\n  // Send file in chunks of 16 KB\n  const sendFileInChunks = (file) => {\n    const chunkSize = 16 * 1024; // 16 KB\n    const fileReader = new FileReader();\n    let offset = 0;\n\n    fileReader.onerror = (error) => console.error('Error reading file:', error);\n    fileReader.onload = (e) => {\n      dc.current.send(e.target.result);\n      offset += e.target.result.byteLength;\n      if (offset < file.size) {\n        readSlice(offset);\n      } else {\n        dc.current.send('EOF'); // End of file signal\n        console.log('File sent successfully');\n      }\n    };\n\n    const readSlice = (o) => {\n      const slice = file.slice(o, o + chunkSize);\n      fileReader.readAsArrayBuffer(slice);\n    };\n\n    readSlice(0);\n  };\n\n  return (\n    <div>\n      <h2>Sender (Your ID: {id})</h2>\n      <input\n        type=\"text\"\n        placeholder=\"Receiver ID\"\n        value={receiverId}\n        onChange={(e) => setReceiverId(e.target.value.toUpperCase())}\n      />\n      <br />\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\n      <br />\n      <button\n        disabled={!receiverId || !file}\n        onClick={connectAndSend}\n      >\n        Send File\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}